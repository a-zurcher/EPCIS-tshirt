openapi: 3.0.3
info:
  title: EPCIS 2.0 REST Bindings
  license:
    name: Apache2
  version: 2.0.0
servers:
- url: /
tags:
- name: Top-level
  description: |
    Endpoints to browse or retrieve information about EPCIS resources:
    - events
    - types of events
    - electronic product codes
    - business steps
    - business locations
    - read points
    - dispositions
- name: Events
  description: |
    Endpoints that allow you to retrieve EPCIS events as Web resources.
- name: Capture
  description: |
    Endpoints to capture EPCIS events in bulk or individually.
- name: Queries
  description: |
    Endpoints to create large named or anonymous queries using the EPCIS Query Language. Named queries have a custom
    name and are stored until deleted by the user. Anonymous queries are not persisted and only available to the caller.
    EPCIS events queries also support query subscription.
- name: Subscriptions
  description: |
    EPCIS 2.0 supports query subscriptions using Webhooks or Websockets.
- name: Discovery
  description: |
    Endpoints to obtain information about the endpoint, such as EPCIS and CBV versions or custom vocabularies.
paths:
  /:
    get:
      tags:
      - Discovery
      summary: Returns the list of top level resources available for this EPCIS repository.
      description: |
        This endpoint returns all the top-level resources currently available in the repository.
      operationId: rootGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      responses:
        "200":
          description: Returns all supported EPCIS top-level resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopLevelResourceCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - queries
                - capture
                - events
                - eventTypes
                - epcs
                - readPoints
                - bizLocations
                - dispositions
                - bizSteps
            application/xml:
              schema:
                $ref: '#/components/schemas/TopLevelResourceCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - queries
                - capture
                - events
                - eventTypes
                - epcs
                - readPoints
                - bizLocations
                - dispositions
                - bizSteps
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
    options:
      tags:
      - Discovery
      summary: "Query server settings, EPCIS version(s) and related vocabularies/standards."
      description: |
        `OPTIONS` on the root path gives the client an overview of the server's EPCIS-related configurations.
      operationId: rootOPTIONS
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /capture:
    get:
      tags:
      - Capture
      summary: Returns a list of capture jobs.
      description: |
        When EPCIS events are added through the capture interface, the capture process can run asynchronously. If the payload
        is syntactically correct and the client is allowed to call `/capture`, the server returns a `202` HTTP response code.
        This endpoint returns all capture jobs that were created
        and supports pagination.
      operationId: captureGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      responses:
        "200":
          description: |
            A capture job document has at least the following properties:
            - `running`: whether or not the capture job is still active.
            - `success`: whether or not at least one error occurred.
            - `captureErrorBehaviour`: GS1-Capture-Error-Behaviour header value provided with POST data to capture.
            - `errors` or `errorFile`: with the errors if `success` is `false`.
            ### captureErrorBehaviour value is `rollback`
            | Capture job `running` | Capture job `success` | Capture job outcome |
            |:--------|:---------|:---------|
            | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |
            | `true` | `false` | At least one error occurred. Rollback is in progress. |
            | `false` | `true` | All EPCIS events are captured. |
            | `false` | `false` | All EPCIS events are rejected. |
            ### captureErrorBehaviour value is `proceed`
            | Capture job `running` | Capture job `success` | Capture job outcome |
            |:--------|:---------|:---------|
            | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |
            | `true` | `false` | At least one error occurred but more EPCIS events are currently being captured. |
            | `false` | `true` | All EPCIS events were captured without an error. |
            | `false` | `false` | Some EPCIS events were captured but errors occurred. |
            If `success` is `false`, check the `errors` or `errorFile` property for details.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/CaptureJob'
                x-content-type: application/json
              example:
              - captureID: id261378658356
                createdAt: 2021-07-21T17:32:28Z
                finishedAt: 2022-01-21T17:45:28Z
                running: false
                success: true
                captureErrorBehaviour: rollback
                errors: []
              - captureID: id9261379075
                createdAt: 2021-08-21T17:32:28Z
                running: true
                success: true
                captureErrorBehaviour: proceed
                errors: []
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Capture
    post:
      tags:
      - Capture
      summary: Asynchronous capture endpoint for one or more EPCIS events.
      description: |
        EPCIS events are added in bulk using the capture interface. Four design considerations were made to remain compatible with EPCIS 1.2:
        - EPCIS 2.0 keeps event IDs optional. If event IDs are missing, the server should populate the event ID with a unique value.
        Otherwise, it won't be possible to retrieve these events by eventID.
        - By default, EPCIS events are only stored if the entire capture job was successful. This behaviour can be changed with the `GS1-Capture-Error-Behaviour` header.
        - EPCIS master data can be captured in the header (`epcisHeader`) of an `EPCISDocument`.
        - This endpoint should support both `EPCISDocument` and `EPCISQueryDocument` as input.
        To prevent timeouts for large payloads, the client potentially may need to split the payload into several capture calls. To that end, the server can specify a capture
        limit (number of EPCIS events) and file size limit (payload size).
        A successful capturing of events does not guarantee that events will be stored. Instead, the server returns a
        capture id, which the client can use to obtain information about the capture job.
      operationId: capturePOST
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: GS1-EPCIS-Version
        in: header
        description: |
          The EPCIS version.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Version'
      - name: GS1-CBV-Version
        in: header
        description: |
          The Core Business Vocabulary version.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Version'
      - name: GS1-Capture-Error-Behaviour
        in: header
        description: |
          A header to control how the capture interface will behave in case of an error:
          - `rollback`: "All or nothing". Either the capture job is entirely successful or all EPCIS events are rejected.
          - `proceed`: "Greedy capture". The capture interface tries to capture as many EPCIS events as possible, even if there are errors.
          The default behaviour is `rollback`, as in EPCIS 1.2.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-Capture-Error-Behaviour'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/capture_body'
            example:
              '@context':
              - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
              - example: http://ns.example.com/epcis/
              id: https://id.example.org/document1
              type: EPCISDocument
              schemaVersion: "2.0"
              creationDate: 2005-07-11T11:30:47.0Z
              epcisBody:
                eventList:
                - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                  type: ObjectEvent
                  action: OBSERVE
                  bizStep: shipping
                  disposition: in_transit
                  epcList:
                  - urn:epc:id:sgtin:0614141.107346.2017
                  - urn:epc:id:sgtin:0614141.107346.2018
                  eventTime: 2005-04-03T20:33:31.116000-06:00
                  eventTimeZoneOffset: -06:00
                  readPoint:
                    id: urn:epc:id:sgln:0614141.07346.1234
                  bizTransactionList:
                  - type: po
                    bizTransaction: http://transaction.acme.com/po/12345678
                - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                  type: ObjectEvent
                  action: OBSERVE
                  bizStep: receiving
                  disposition: in_progress
                  epcList:
                  - urn:epc:id:sgtin:0614141.107346.2018
                  eventTime: 2005-04-04T20:33:31.116-06:00
                  eventTimeZoneOffset: -06:00
                  readPoint:
                    id: urn:epc:id:sgln:0012345.11111.400
                  bizLocation:
                    id: urn:epc:id:sgln:0012345.11111.0
                  bizTransactionList:
                  - type: po
                    bizTransaction: http://transaction.acme.com/po/12345678
                  - type: desadv
                    bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                  example:myField: Example of a vendor/user extension
        required: true
      responses:
        "202":
          description: |
            Successfully received one or more EPCIS events. The request returns a unique
            capture job URL in the Location header.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Location:
              description: |
                Absolute or relative URL of the capture job.
              style: simple
              explode: false
              schema:
                minLength: 1
                type: string
                example: /capture/id9261379075
        "400":
          description: |
            An error occurred while receiving EPCIS events. All events are rejected. This is not to be confused with
            an error while capturing EPCIS events. To monitor the capture job, use the `/capture/{captureID}` endpoint.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "413":
          description: |
            The `POST` request is too large. It exceeds the limits set in `GS1-EPCIS-Capture-Limit` and/or
            `GS1-EPCIS-Capture-File-Size-Limit`.
          headers:
            GS1-EPCIS-Capture-Limit:
              $ref: '#/components/headers/GS1-EPCIS-Capture-Limit'
            GS1-EPCIS-Capture-File-Size-Limit:
              $ref: '#/components/headers/GS1-EPCIS-Capture-File-Size-Limit'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_413'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_413'
        "415":
          description: |
            The client sent data in a format that is not supported by the server.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_415_1'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Capture
    options:
      tags:
      - Discovery
      summary: Discover the settings of the capture interface.
      description: |
        The `OPTIONS` method is used as a discovery service for `/capture`. It describes
        - which EPCIS and CBV versions are supported,
        - the EPCIS and CBV extensions,
        - the maximum payload size as count of EPCIS events (`GS1-EPCIS-Capture-Limit` header) or as a maximum payload size in bytes (`GS1-EPCIS-Capture-File-Size-Limit` header)
        - what the server will do if an error occurred during capture (`GS1-Capture-Error-Behaviour` header).
        The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
      operationId: captureOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, POST, GET"
                default: "OPTIONS, POST, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
            GS1-EPCIS-Capture-Limit:
              $ref: '#/components/headers/GS1-EPCIS-Capture-Limit'
            GS1-EPCIS-Capture-File-Size-Limit:
              $ref: '#/components/headers/GS1-EPCIS-Capture-File-Size-Limit'
            GS1-Capture-Error-Behaviour:
              $ref: '#/components/headers/GS1-Capture-Error-Behaviour'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /capture/{captureID}:
    get:
      tags:
      - Capture
      summary: Returns information about the capture job.
      description: |
        When EPCIS events are added through the capture interface, the capture process can run asynchronously. If the payload
        is syntactically correct and the client is allowed to call `/capture`, the server returns a `202` HTTP response code.
        This endpoint exposes the state of the capture job to the client.
      operationId: captureCaptureIDGET
      parameters:
      - name: captureID
        in: path
        description: A unique value identifying a capture job generated by the server.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: id9261379075
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      responses:
        "200":
          description: |
            A capture job document has at least the following properties:
            - `running`: whether or not the capture job is still active.
            - `success`: whether or not at least one error occurred.
            - `captureErrorBehaviour`: GS1-Capture-Error-Behaviour header value provided with POST data to capture.
            - `errors` or `errorFile`: with the errors if `success` is `false`.
            ### captureErrorBehaviour value is `rollback`
            | Capture job `running` | Capture job `success` | Capture job outcome |
            |:--------|:---------|:---------|
            | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |
            | `true` | `false` | At least one error occurred. Rollback is in progress. |
            | `false` | `true` | All EPCIS events are captured. |
            | `false` | `false` | All EPCIS events are rejected. |
            ### captureErrorBehaviour value is `proceed`
            | Capture job `running` | Capture job `success` | Capture job outcome |
            |:--------|:---------|:---------|
            | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |
            | `true` | `false` | At least one error occurred but more EPCIS events are currently being captured. |
            | `false` | `true` | All EPCIS events were captured without an error. |
            | `false` | `false` | Some EPCIS events were captured but errors occurred. |
            If `success` is `false`, check the `errors` or `errorFile` property for details.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureJob'
              example:
                captureID: id261378658356
                createdAt: 2021-07-21T17:32:28Z
                finishedAt: 2022-01-21T17:45:28Z
                running: false
                success: true
                captureErrorBehaviour: rollback
                errors: []
            application/xml:
              schema:
                $ref: '#/components/schemas/CaptureJob'
              example:
                captureID: id261378658356
                running: false
                success: true
                captureErrorBehaviour: rollback
                createdAt: 2021-07-21T17:32:28Z
                finishedAt: 2022-01-21T17:45:28Z
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Capture
    options:
      tags:
      - Discovery
      summary: Query the metadata of the capture job endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used for a given capture job.
      operationId: captureCaptureIDOPTIONS
      parameters:
      - name: captureID
        in: path
        description: A unique value identifying a capture job generated by the server.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: id9261379075
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /events:
    get:
      tags:
      - Top-level
      - Events
      summary: Returns all EPCIS events available in the EPCIS repository.
      description: |
        This endpoint allows querying EPCIS events that are currently in the repository.
        Events can be filtered through URL query string parameters as specified by the EPCIS Query Language.
        An EPCIS 2.0 query body using the REST interface SHALL be serialised as a JSON object. The value of the query key within that JSON object SHALL validate against the schema defined at:  https://ref.gs1.org/standards/epcis/2.0.0/query-schema.json.
        An EPCIS 2.0 query may also be expressed via parameters in the URI query string.  The query parameters with fixed fieldnames are included in this OpenAPI interface.  However, this list is not exhaustive and the EPCIS 2.0 standard defines additional query parameters with flexible names, depending on the specific value of `uom`, `type` or `fieldname` that appears within the name of the parameter.
      operationId: eventsGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      - name: eventType
        in: query
        description: "If specified, the result will only include events whose `type`\
          \ matches one of the types specified in the parameter value. Each element\
          \ of the parameter value may be one of the following strings: `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `TransformationEvent` or `AssociationEvent`.\
          \ An element of the parameter value may also be the name of an extension\
          \ event type. If omitted, all event types will be considered for inclusion\
          \ in the result."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EPCISEventTypes'
        example: ObjectEvent
      - name: GE_eventTime
        in: query
        description: "If specified, only events with `eventTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `eventTime` (unless constrained by the\
          \ `LT_eventTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_eventTime
        in: query
        description: "If specified, only events with `eventTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `eventTime` (unless constrained by the `GE_eventTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_recordTime
        in: query
        description: "If provided, only events with `recordTime` greater than or equal\
          \ to the specified value will be returned. The automatic limitation based\
          \ on event record time (section 8.2.5.2) may implicitly provide a constraint\
          \ similar to this parameter. If omitted, events are included regardless\
          \ of their `recordTime`, other than automatic limitation based on event\
          \ record time"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_recordTime
        in: query
        description: "If provided, only events with `recordTime` less than the specified\
          \ value will be returned. If omitted, events are included regardless of\
          \ their `recordTime` (unless constrained by the `GE_recordTime` parameter\
          \ or the automatic limitation based on event record time)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_action
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ an `action` field; and where (b) the value of the `action` field matches\
          \ one of the specified values. The properties of the value of this parameter\
          \ each must be one of the strings `ADD`, `OBSERVE`, or `DELETE`; if not,\
          \ the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ events are included regardless of their `action` field."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADD
            - OBSERVE
            - DELETE
        example: OBSERVE
      - name: EQ_bizStep
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizStep` field; and where (b) the value of the `bizStep` field\
          \ matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/BizStep\"\
          \ target=\"_blank\">CBV BizStep</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `shipping`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `bizStep` field or whether the `bizStep` field exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/bizStep'
        example: shipping
      - name: EQ_disposition
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `disposition` field; and where (b) the value of the `disposition`\
          \ field matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `disposition` field or whether the `disposition` field\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_set
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `set` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `set` field within `persistentDisposition` field or\
          \ whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_unset
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `unset` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `unset` field within `persistentDisposition` field\
          \ or whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs. If this parameter and `WD_readPoint`\
          \ are both omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_readPoint` are both\
          \ omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs. If this parameter and `WD_bizLocation`\
          \ are both omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_bizLocation` are both\
          \ omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_transformationID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `transformationID` field (that is, `TransformationEvent`s\
          \ or extension event type that extend `TransformationEvent`); and where\
          \ (b) the `transformationID` field is equal to one of the values specified\
          \ in this parameter."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: MATCH_epc
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` or a `childEPCs` field (that is, `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPCs listed in the `epcList` or `childEPCs` field (depending on event\
          \ type) matches one of the URIs specified in this parameter, where the meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1.  If this parameter\
          \ is omitted, events are included regardless of their `epcList` or `childEPCs`\
          \ field or whether the `epcList` or `childEPCs` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_parentID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `parentID` field (that is, `AggregationEvent`,\
          \ `TransactionEvent`, `AssociationEvent` or extension event types that extend\
          \ one of those event types); and where (b) one of the EPCs listed in the\
          \ `parentID` field matches one of the URIs specified in this parameter,\
          \ where the meaning of 'matches' is as specified in section 8.2.7.1.1. \
          \ If this parameter is omitted, events are included regardless of their\
          \ `parentID` field or whether the `parentID` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `inputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `inputEPCList` field or whether the `inputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `outputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `outputEPCList` field or whether the `outputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` field, a `childEPCs` field, a `parentID`\
          \ field, an `inputEPCList` field, or an `outputEPCList` field (that is,\
          \ `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `TransformationEvent`,\
          \ `AssociationEvent` or extension event types that extend one of those event\
          \ types); and where (b) the `parentID` field or one of the EPCs listed in\
          \ the `epcList`, `childEPCs`, `inputEPCList`, or `outputEPCList` field (depending\
          \ on event type) matches one of URIs specified in this parameter. The meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_epcClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList` or a `childQuantityList` field (that\
          \ is, `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `AssociationEvent`\
          \ or extension event types that extend one of those event types); and where\
          \ (b) one of the EPC classes listed in the `quantityList` or `childQuantityList`\
          \ field (depending on event type) matches one of the EPC patterns or URIs\
          \ specified in this parameter. The result will also include QuantityEvents\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `inputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `outputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList`, `childQuantityList`, `inputQuantityList`,\
          \ or `outputQuantityList` field (that is, `ObjectEvent`, `AggregationEvent`,\
          \ `TransactionEvent`, `TransformationEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPC classes listed in any of those fields matches one of the EPC patterns\
          \ or URIs specified in this parameter. The result will also include `QuantityEvent`s\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: EQ_eventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a non-null `eventID` field; and where (b) the `eventID`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of the value of the\
          \ `eventID` field or whether the `eventID` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EXISTS_errorDeclaration
        in: query
        description: "If this parameter is specified (and has a value of true), the\
          \ result will only include events that contain an `ErrorDeclaration`. If\
          \ this parameter is omitted (or has a value of false), events are returned\
          \ regardless of whether they contain an `ErrorDeclaration`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: GE_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is greater than or equal to the specified\
          \ value. If this parameter is omitted, events are returned regardless of\
          \ whether they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is less than to the specified value.\
          \ If this parameter is omitted, events are returned regardless of whether\
          \ they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_errorReason
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the error\
          \ declaration contains a non-null `reason` field; and where (c) the `reason`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of whether they contain\
          \ an `ErrorDeclaration` or what the value of the `reason` field is."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/error-reason'
      - name: EQ_correctiveEventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) one of the\
          \ elements of the `correctiveEventIDs` list is equal to one of the values\
          \ specified in this parameter. If this parameter is omitted, events are\
          \ returned regardless of whether they contain an `ErrorDeclaration` or the\
          \ contents of the `correctiveEventIDs` list."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: orderBy
        in: query
        description: "If specified, names a single field that will be used to order\
          \ the results. The `orderDirection` field specifies whether the ordering\
          \ is in ascending sequence or descending sequence. Events included in the\
          \ result that lack the specified field altogether may occur in any position\
          \ within the result event list. The value of this parameter SHALL be one\
          \ of: `eventTime`, `recordTime`, or the fully qualified name of an extension\
          \ field whose type is Int, Float, Time, or String. A fully qualified fieldname\
          \ is constructed as for the `EQ_fieldname` parameter. In the case of a field\
          \ of type String, sorting SHALL be according to their case-sensitive lexical\
          \ ordering, considering UTF-8/ASCII code values of each successive character.\
          \ If omitted, no order is specified. The implementation MAY order the results\
          \ in any order it chooses, and that order MAY differ even when the same\
          \ query is executed twice on the same data. (In EPCIS 1.0, the value `quantity`\
          \ was also permitted, but its use is deprecated in EPCIS 1.1.)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderDirection
        in: query
        description: "If specified and `orderBy` is also specified, specifies whether\
          \ the results are ordered in ascending or descending sequence according\
          \ to the key specified by `orderBy`. The value of this parameter must be\
          \ one of `ASC` (for ascending order) or `DESC` (for descending order); if\
          \ not, the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ defaults to `DESC`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: eventCountLimit
        in: query
        description: "If specified, the results will only include the first N events\
          \ that match the other criteria, where N is the value of this parameter.\
          \ The ordering specified by the `orderBy` and `orderDirection` parameters\
          \ determine the meaning of “first” for this purpose. If omitted, all events\
          \ matching the specified criteria will be included in the results. This\
          \ parameter and `maxEventCount` are mutually exclusive; if both are specified,\
          \ a `QueryParameterException` SHALL be raised. This parameter may only be\
          \ used when `orderBy` is specified; if `orderBy` is omitted and `eventCountLimit`\
          \ is specified, a `QueryParameterException` SHALL be raised. This parameter\
          \ differs from `maxEventCount` in that this parameter limits the amount\
          \ of data returned, whereas `maxEventCount` causes an exception to be thrown\
          \ if the limit is exceeded. Explanation (non-normative): A common use of\
          \ the `orderBy`, `orderDirection`, and `eventCountLimit` parameters is for\
          \ extremal queries. For example, to select the most recent event matching\
          \ some criteria, the query would include parameters that select events matching\
          \ the desired criteria, and set `orderBy` to `eventTime`, `orderDirection`\
          \ to `DESC`, and `eventCountLimit` to 1."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: maxEventCount
        in: query
        description: "If specified, at most this many events will be included in the\
          \ query result. If the query would otherwise return more than this number\
          \ of events, a `QueryTooLargeException` SHALL be raised instead of a normal\
          \ query result. This parameter and `eventCountLimit` are mutually exclusive;\
          \ if both are specified, a `QueryParameterException` SHALL be raised. If\
          \ this parameter is omitted, any number of events may be included in the\
          \ query result. Note, however, that the EPCIS implementation is free to\
          \ raise a `QueryTooLargeException` regardless of the setting of this parameter\
          \ (see section 8.2.3)."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: GE_startTime
        in: query
        description: "If specified, only events with `startTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `startTime` (unless constrained by the\
          \ `LT_startTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_startTime
        in: query
        description: "If specified, only events with `startTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `startTime` (unless constrained by the `GE_startTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_endTime
        in: query
        description: "If specified, only events with `endTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `endTime` (unless constrained by the\
          \ `LT_endTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_endTime
        in: query
        description: "If specified, only events with `endTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `endTime` (unless constrained by the `GE_endTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_type
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate one or more `sensorElement` fields; and where\
          \ (b) the `type` attribute in one of these `sensorElement` fields is equal\
          \ to one of the values specified in this parameter. If this parameter is\
          \ omitted, events are returned regardless of the value of the `type` attribute\
          \ or whether a `sensorElement` field exists at all. Standard values for\
          \ `type` are defined at <a href=\"https://gs1.org/voc/MeasurementType\"\
          \ target=\"_blank\">https://gs1.org/voc/MeasurementType</a>.  Standard values\
          \ SHALL be expressed as bare words, e.g. `Temperature`."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/measurementType'
        example: Temperature
      - name: EQ_deviceID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `deviceID` attribute; and where (b) the\
          \ `deviceID` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `deviceID` attribute or whether the `deviceID` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_dataProcessingMethod
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `dataProcessingMethod` attribute; and where\
          \ (b) the `dataProcessingMethod` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `dataProcessingMethod` attribute or whether the `dataProcessingMethod`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_microorganism
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `microorganism` attribute; and where (b)\
          \ the `microorganism` attribute is equal to one of the URIs specified in\
          \ this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `microorganism` attribute or whether the `microorganism`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_chemicalSubstance
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `chemicalSubstance` attribute; and where\
          \ (b) the `chemicalSubstance` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `chemicalSubstance` attribute or whether the `chemicalSubstance`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_bizRules
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `bizRules` attribute; and where (b) the\
          \ `bizRules` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `bizRules` attribute or whether the `bizRules` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_stringValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `stringValue` attribute; and where (b) the\
          \ `stringValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `stringValue` attribute or whether the `stringValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_hexBinaryValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `hexBinaryValue` attribute; and where (b)\
          \ the `hexBinaryValue` attribute is equal to one of the strings specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `hexBinaryValue` attribute or whether the `hexBinaryValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_uriValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `uriValue` attribute; and where (b) the\
          \ `uriValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `uriValue` attribute or whether the `uriValue` attribute\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_booleanValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `booleanValue` attribute; and where (b)\
          \ the `booleanValue` attribute is equal to the specified value (i.e. `true`\
          \ or `false`). If this parameter is omitted, events are returned regardless\
          \ of the value of the `booleanValue` attribute or whether the `booleanValue`\
          \ attribute exists at all"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Contains EPCIS events.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epcisQueryDocument'
              example:
                '@context':
                - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                - example: http://ns.example.com/epcis/
                id: https://id.example.org/document1
                type: EPCISQueryDocument
                schemaVersion: "2.0"
                creationDate: 2005-07-11T11:30:47.0Z
                epcisBody:
                  queryResults:
                    subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                    queryName: SimpleEventQuery
                    resultsBody:
                      eventList:
                      - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: shipping
                        disposition: in_transit
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2017
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-03T20:33:31.116000-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0614141.07346.1234
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                      - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: receiving
                        disposition: in_progress
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-04T20:33:31.116-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0012345.11111.400
                        bizLocation:
                          id: urn:epc:id:sgln:0012345.11111.0
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                        - type: desadv
                          bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                        example:myField: Example of a vendor/user extension
            application/xml:
              schema:
                $ref: '#/components/schemas/EPCISXMLQueryDocument'
              example: "<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:2\"\
                \r\n\txmlns:cbvmda=\"urn:epcglobal:cbv:mda\" schemaVersion=\"2.0\"\
                \ creationDate=\"2020-06-28T13:41:00.000Z\">\r\n\t<EPCISBody>\r\n\t\
                \t<EventList>\r\n\t\t\t<!-- INFERENCE example with COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-07T17:10:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>OBSERVE</action>\r\n\t\t\
                \t\t<bizStep>urn:epcglobal:cbv:bizstep:receiving</bizStep>\r\n\t\t\
                \t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
                \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_inferred</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t\t<!-- UNPACKING event with VERIFICATION of COMPLETENESS -->\r\
                \n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-08T18:11:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>DELETE</action>\r\n\t\t\t\
                \t<bizStep>urn:epcglobal:cbv:bizstep:unpacking</bizStep>\r\n\t\t\t\
                \t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\n\
                \t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS VERIFIED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<unset>urn:epcglobal:cbv:disp:completeness_inferred</unset>\r\
                \n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_verified</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t</EventList>\r\n\t</EPCISBody>\r\n</epcis:EPCISDocument>\r\n"
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    post:
      tags:
      - Capture
      summary: Synchronous capture interface for a single EPCIS event.
      description: |
        An individual EPCIS event can be created by making a `POST` request on the `/events` resource. Alternatively, the client can also use the `/capture`
        interface and capture a single event.
      operationId: eventsPOST
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: GS1-EPCIS-Version
        in: header
        description: |
          The EPCIS version.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Version'
      - name: GS1-CBV-Version
        in: header
        description: |
          The Core Business Vocabulary version.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Version'
      requestBody:
        description: A single EPCIS event.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EPCISEvent'
            example:
              '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
              eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
              type: ObjectEvent
              action: OBSERVE
              bizStep: shipping
              disposition: in_transit
              epcList:
              - urn:epc:id:sgtin:0614141.107346.2017
              - urn:epc:id:sgtin:0614141.107346.2018
              eventTime: 2005-04-03T20:33:31.116000-06:00
              eventTimeZoneOffset: -06:00
              readPoint:
                id: urn:epc:id:sgln:0614141.07346.1234
              bizTransactionList:
              - type: po
                bizTransaction: http://transaction.acme.com/po/12345678
        required: true
      responses:
        "201":
          description: |
            Successfully created (captured) the EPCIS event. The request returns the URL of newly created
            EPCIS event in the Location header.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Location:
              description: |
                Absolute or relative URL of the newly captured EPCIS event.
              style: simple
              explode: false
              schema:
                minLength: 1
                type: string
                example: https://example.com/events/urn:uuid:831c0292-4de1-430a-8255-2aca821abaab
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EPCISEvent'
        "400":
          description: An error occurred while creating the EPCIS event. The event
            was rejected.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "409":
          description: |
            A resource with the provided identifier already exists. E.g., a named query or an event.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "413":
          description: |
            The `POST` request is too large. It exceeds the limits set in `GS1-EPCIS-Capture-Limit` and/or
            `GS1-EPCIS-Capture-File-Size-Limit`.
          headers:
            GS1-EPCIS-Capture-Limit:
              $ref: '#/components/headers/GS1-EPCIS-Capture-Limit'
            GS1-EPCIS-Capture-File-Size-Limit:
              $ref: '#/components/headers/GS1-EPCIS-Capture-File-Size-Limit'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_413'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_413'
        "415":
          description: |
            The client sent data in a format that is not supported by the server.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_415_1'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Capture
    options:
      tags:
      - Discovery
      summary: Query metadata for the EPCIS events endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: eventsOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET, POST"
                default: "OPTIONS, GET, POST"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /events/{eventID}:
    get:
      tags:
      - Events
      summary: Returns an individual EPCIS event.
      description: |
        This endpoint accesses individual events using their unique identifier. The response body is an `EPCISQueryDocument`
        enclosing the unique event and error declarations.
      operationId: eventsEventIDGET
      parameters:
      - name: eventID
        in: path
        description: |
          The ID of an EPCIS event. An EPCIS event ID must be unique across all events in the system.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      responses:
        "200":
          description: EPCIS Query Document containing events with the requested `eventID`.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epcisQueryDocument'
              example:
                '@context':
                - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                - example: http://ns.example.com/epcis/
                id: https://id.example.org/document1
                type: EPCISQueryDocument
                schemaVersion: "2.0"
                creationDate: 2005-07-11T11:30:47.0Z
                epcisBody:
                  queryResults:
                    subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                    queryName: SimpleEventQuery
                    resultsBody:
                      eventList:
                      - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: shipping
                        disposition: in_transit
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2017
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-03T20:33:31.116000-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0614141.07346.1234
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                      - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: receiving
                        disposition: in_progress
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-04T20:33:31.116-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0012345.11111.400
                        bizLocation:
                          id: urn:epc:id:sgln:0012345.11111.0
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                        - type: desadv
                          bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                        example:myField: Example of a vendor/user extension
            application/xml:
              schema:
                $ref: '#/components/schemas/EPCISXMLQueryDocument'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Events
    options:
      tags:
      - Discovery
      summary: Query metadata for the endpoint to access an individual EPCIS event.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: eventsEventIDOPTIONS
      parameters:
      - name: eventID
        in: path
        description: |
          The ID of an EPCIS event. An EPCIS event ID must be unique across all events in the system.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /eventTypes:
    get:
      tags:
      - Top-level
      - Discovery
      summary: Returns all EPCIS event types currently available in the EPCIS repository.
      description: EPCIS event types specify the schema of an event. This endpoint
        returns the 5 standard event types as well as any custom event types supported
        by this repository.
      operationId: eventTypesGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      responses:
        "200":
          description: Returns all supported EPCIS event types.
          headers:
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypeCollection'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query metadata for the EPCIS event types endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: eventTypesOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /eventTypes/{eventType}:
    get:
      tags:
      - Top-level
      summary: Returns all sub-resources of an EPCIS event type.
      description: |
        This endpoint returns all sub-resources of an EPCIS event type (for HATEOAS discovery), which includes at least `events`. A server may
        add additional endpoints, for example `schema` to access the EPCIS event type schema.
      operationId: eventTypesEventTypeGET
      parameters:
      - name: eventType
        in: path
        description: |
          Names of EPCIS event types.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/eventType'
        example: ObjectEvent
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      responses:
        "200":
          description: Returns a sub-resource list that contains at least the `events`
            sub-resource (for HATEOAS discovery).
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - events
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query metadata of the EPCIS event type endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: eventTypesEventTypeOPTIONS
      parameters:
      - name: eventType
        in: path
        description: |
          Names of EPCIS event types.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/eventType'
        example: ObjectEvent
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /eventTypes/{eventType}/events:
    get:
      tags:
      - Events
      summary: |
        Returns EPCIS events of a given an EPCIS event type.
      description: |
        This endpoint returns all EPCIS events of a specific EPCIS event type up to the amount defined in `perPage`.
        The server returns a 'Link' header to point to the remaining results.
        The client can further restrict the list of events returned by filtering events using the EPCIS query
        language using URL query string parameters as specified by the EPCIS Query Language.
        The parameter `eventCountLimit` is used to restrict the maximum number of
        events to be returned in total, whereas `perPage` restricts the number of events to return per page or paginated results.
        Example:
        ```
        https://example.com/eventTypes/ObjectEvent/events?EQ_bizStep=shipping%7Cdecommissioning&GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00
        ```
        An EPCIS 2.0 query may also be expressed via parameters in the URI query string.  The query parameters with fixed fieldnames are included in this OpenAPI interface.  However, this list is not exhaustive and the EPCIS 2.0 standard defines additional query parameters with flexible names, depending on the specific value of `uom`, `type` or `fieldname` that appears within the name of the parameter.
      operationId: eventTypesEventTypeEventsGET
      parameters:
      - name: eventType
        in: path
        description: |
          Names of EPCIS event types.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/eventType'
        example: ObjectEvent
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      - name: GE_eventTime
        in: query
        description: "If specified, only events with `eventTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `eventTime` (unless constrained by the\
          \ `LT_eventTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_eventTime
        in: query
        description: "If specified, only events with `eventTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `eventTime` (unless constrained by the `GE_eventTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_recordTime
        in: query
        description: "If provided, only events with `recordTime` greater than or equal\
          \ to the specified value will be returned. The automatic limitation based\
          \ on event record time (section 8.2.5.2) may implicitly provide a constraint\
          \ similar to this parameter. If omitted, events are included regardless\
          \ of their `recordTime`, other than automatic limitation based on event\
          \ record time"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_recordTime
        in: query
        description: "If provided, only events with `recordTime` less than the specified\
          \ value will be returned. If omitted, events are included regardless of\
          \ their `recordTime` (unless constrained by the `GE_recordTime` parameter\
          \ or the automatic limitation based on event record time)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_action
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ an `action` field; and where (b) the value of the `action` field matches\
          \ one of the specified values. The properties of the value of this parameter\
          \ each must be one of the strings `ADD`, `OBSERVE`, or `DELETE`; if not,\
          \ the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ events are included regardless of their `action` field."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADD
            - OBSERVE
            - DELETE
        example: OBSERVE
      - name: EQ_bizStep
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizStep` field; and where (b) the value of the `bizStep` field\
          \ matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/BizStep\"\
          \ target=\"_blank\">CBV BizStep</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `shipping`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `bizStep` field or whether the `bizStep` field exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/bizStep'
        example: shipping
      - name: EQ_disposition
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `disposition` field; and where (b) the value of the `disposition`\
          \ field matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `disposition` field or whether the `disposition` field\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_set
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `set` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `set` field within `persistentDisposition` field or\
          \ whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_unset
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `unset` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `unset` field within `persistentDisposition` field\
          \ or whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs. If this parameter and `WD_readPoint`\
          \ are both omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_readPoint` are both\
          \ omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs. If this parameter and `WD_bizLocation`\
          \ are both omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_bizLocation` are both\
          \ omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_transformationID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `transformationID` field (that is, `TransformationEvent`s\
          \ or extension event type that extend `TransformationEvent`); and where\
          \ (b) the `transformationID` field is equal to one of the values specified\
          \ in this parameter."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: MATCH_epc
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` or a `childEPCs` field (that is, `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPCs listed in the `epcList` or `childEPCs` field (depending on event\
          \ type) matches one of the URIs specified in this parameter, where the meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1.  If this parameter\
          \ is omitted, events are included regardless of their `epcList` or `childEPCs`\
          \ field or whether the `epcList` or `childEPCs` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_parentID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `parentID` field (that is, `AggregationEvent`,\
          \ `TransactionEvent`, `AssociationEvent` or extension event types that extend\
          \ one of those event types); and where (b) one of the EPCs listed in the\
          \ `parentID` field matches one of the URIs specified in this parameter,\
          \ where the meaning of 'matches' is as specified in section 8.2.7.1.1. \
          \ If this parameter is omitted, events are included regardless of their\
          \ `parentID` field or whether the `parentID` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `inputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `inputEPCList` field or whether the `inputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `outputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `outputEPCList` field or whether the `outputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` field, a `childEPCs` field, a `parentID`\
          \ field, an `inputEPCList` field, or an `outputEPCList` field (that is,\
          \ `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `TransformationEvent`,\
          \ `AssociationEvent` or extension event types that extend one of those event\
          \ types); and where (b) the `parentID` field or one of the EPCs listed in\
          \ the `epcList`, `childEPCs`, `inputEPCList`, or `outputEPCList` field (depending\
          \ on event type) matches one of URIs specified in this parameter. The meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_epcClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList` or a `childQuantityList` field (that\
          \ is, `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `AssociationEvent`\
          \ or extension event types that extend one of those event types); and where\
          \ (b) one of the EPC classes listed in the `quantityList` or `childQuantityList`\
          \ field (depending on event type) matches one of the EPC patterns or URIs\
          \ specified in this parameter. The result will also include QuantityEvents\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `inputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `outputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList`, `childQuantityList`, `inputQuantityList`,\
          \ or `outputQuantityList` field (that is, `ObjectEvent`, `AggregationEvent`,\
          \ `TransactionEvent`, `TransformationEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPC classes listed in any of those fields matches one of the EPC patterns\
          \ or URIs specified in this parameter. The result will also include `QuantityEvent`s\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: EQ_eventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a non-null `eventID` field; and where (b) the `eventID`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of the value of the\
          \ `eventID` field or whether the `eventID` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EXISTS_errorDeclaration
        in: query
        description: "If this parameter is specified (and has a value of true), the\
          \ result will only include events that contain an `ErrorDeclaration`. If\
          \ this parameter is omitted (or has a value of false), events are returned\
          \ regardless of whether they contain an `ErrorDeclaration`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: GE_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is greater than or equal to the specified\
          \ value. If this parameter is omitted, events are returned regardless of\
          \ whether they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is less than to the specified value.\
          \ If this parameter is omitted, events are returned regardless of whether\
          \ they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_errorReason
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the error\
          \ declaration contains a non-null `reason` field; and where (c) the `reason`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of whether they contain\
          \ an `ErrorDeclaration` or what the value of the `reason` field is."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/error-reason'
      - name: EQ_correctiveEventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) one of the\
          \ elements of the `correctiveEventIDs` list is equal to one of the values\
          \ specified in this parameter. If this parameter is omitted, events are\
          \ returned regardless of whether they contain an `ErrorDeclaration` or the\
          \ contents of the `correctiveEventIDs` list."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: orderBy
        in: query
        description: "If specified, names a single field that will be used to order\
          \ the results. The `orderDirection` field specifies whether the ordering\
          \ is in ascending sequence or descending sequence. Events included in the\
          \ result that lack the specified field altogether may occur in any position\
          \ within the result event list. The value of this parameter SHALL be one\
          \ of: `eventTime`, `recordTime`, or the fully qualified name of an extension\
          \ field whose type is Int, Float, Time, or String. A fully qualified fieldname\
          \ is constructed as for the `EQ_fieldname` parameter. In the case of a field\
          \ of type String, sorting SHALL be according to their case-sensitive lexical\
          \ ordering, considering UTF-8/ASCII code values of each successive character.\
          \ If omitted, no order is specified. The implementation MAY order the results\
          \ in any order it chooses, and that order MAY differ even when the same\
          \ query is executed twice on the same data. (In EPCIS 1.0, the value `quantity`\
          \ was also permitted, but its use is deprecated in EPCIS 1.1.)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderDirection
        in: query
        description: "If specified and `orderBy` is also specified, specifies whether\
          \ the results are ordered in ascending or descending sequence according\
          \ to the key specified by `orderBy`. The value of this parameter must be\
          \ one of `ASC` (for ascending order) or `DESC` (for descending order); if\
          \ not, the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ defaults to `DESC`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: eventCountLimit
        in: query
        description: "If specified, the results will only include the first N events\
          \ that match the other criteria, where N is the value of this parameter.\
          \ The ordering specified by the `orderBy` and `orderDirection` parameters\
          \ determine the meaning of “first” for this purpose. If omitted, all events\
          \ matching the specified criteria will be included in the results. This\
          \ parameter and `maxEventCount` are mutually exclusive; if both are specified,\
          \ a `QueryParameterException` SHALL be raised. This parameter may only be\
          \ used when `orderBy` is specified; if `orderBy` is omitted and `eventCountLimit`\
          \ is specified, a `QueryParameterException` SHALL be raised. This parameter\
          \ differs from `maxEventCount` in that this parameter limits the amount\
          \ of data returned, whereas `maxEventCount` causes an exception to be thrown\
          \ if the limit is exceeded. Explanation (non-normative): A common use of\
          \ the `orderBy`, `orderDirection`, and `eventCountLimit` parameters is for\
          \ extremal queries. For example, to select the most recent event matching\
          \ some criteria, the query would include parameters that select events matching\
          \ the desired criteria, and set `orderBy` to `eventTime`, `orderDirection`\
          \ to `DESC`, and `eventCountLimit` to 1."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: maxEventCount
        in: query
        description: "If specified, at most this many events will be included in the\
          \ query result. If the query would otherwise return more than this number\
          \ of events, a `QueryTooLargeException` SHALL be raised instead of a normal\
          \ query result. This parameter and `eventCountLimit` are mutually exclusive;\
          \ if both are specified, a `QueryParameterException` SHALL be raised. If\
          \ this parameter is omitted, any number of events may be included in the\
          \ query result. Note, however, that the EPCIS implementation is free to\
          \ raise a `QueryTooLargeException` regardless of the setting of this parameter\
          \ (see section 8.2.3)."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: GE_startTime
        in: query
        description: "If specified, only events with `startTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `startTime` (unless constrained by the\
          \ `LT_startTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_startTime
        in: query
        description: "If specified, only events with `startTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `startTime` (unless constrained by the `GE_startTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_endTime
        in: query
        description: "If specified, only events with `endTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `endTime` (unless constrained by the\
          \ `LT_endTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_endTime
        in: query
        description: "If specified, only events with `endTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `endTime` (unless constrained by the `GE_endTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_type
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate one or more `sensorElement` fields; and where\
          \ (b) the `type` attribute in one of these `sensorElement` fields is equal\
          \ to one of the values specified in this parameter. If this parameter is\
          \ omitted, events are returned regardless of the value of the `type` attribute\
          \ or whether a `sensorElement` field exists at all. Standard values for\
          \ `type` are defined at <a href=\"https://gs1.org/voc/MeasurementType\"\
          \ target=\"_blank\">https://gs1.org/voc/MeasurementType</a>.  Standard values\
          \ SHALL be expressed as bare words, e.g. `Temperature`."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/measurementType'
        example: Temperature
      - name: EQ_deviceID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `deviceID` attribute; and where (b) the\
          \ `deviceID` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `deviceID` attribute or whether the `deviceID` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_dataProcessingMethod
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `dataProcessingMethod` attribute; and where\
          \ (b) the `dataProcessingMethod` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `dataProcessingMethod` attribute or whether the `dataProcessingMethod`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_microorganism
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `microorganism` attribute; and where (b)\
          \ the `microorganism` attribute is equal to one of the URIs specified in\
          \ this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `microorganism` attribute or whether the `microorganism`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_chemicalSubstance
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `chemicalSubstance` attribute; and where\
          \ (b) the `chemicalSubstance` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `chemicalSubstance` attribute or whether the `chemicalSubstance`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_bizRules
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `bizRules` attribute; and where (b) the\
          \ `bizRules` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `bizRules` attribute or whether the `bizRules` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_stringValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `stringValue` attribute; and where (b) the\
          \ `stringValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `stringValue` attribute or whether the `stringValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_hexBinaryValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `hexBinaryValue` attribute; and where (b)\
          \ the `hexBinaryValue` attribute is equal to one of the strings specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `hexBinaryValue` attribute or whether the `hexBinaryValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_uriValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `uriValue` attribute; and where (b) the\
          \ `uriValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `uriValue` attribute or whether the `uriValue` attribute\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_booleanValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `booleanValue` attribute; and where (b)\
          \ the `booleanValue` attribute is equal to the specified value (i.e. `true`\
          \ or `false`). If this parameter is omitted, events are returned regardless\
          \ of the value of the `booleanValue` attribute or whether the `booleanValue`\
          \ attribute exists at all"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Contains EPCIS events.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epcisQueryDocument'
              example:
                '@context':
                - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                - example: http://ns.example.com/epcis/
                id: https://id.example.org/document1
                type: EPCISQueryDocument
                schemaVersion: "2.0"
                creationDate: 2005-07-11T11:30:47.0Z
                epcisBody:
                  queryResults:
                    subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                    queryName: SimpleEventQuery
                    resultsBody:
                      eventList:
                      - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: shipping
                        disposition: in_transit
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2017
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-03T20:33:31.116000-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0614141.07346.1234
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                      - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: receiving
                        disposition: in_progress
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-04T20:33:31.116-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0012345.11111.400
                        bizLocation:
                          id: urn:epc:id:sgln:0012345.11111.0
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                        - type: desadv
                          bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                        example:myField: Example of a vendor/user extension
            application/xml:
              schema:
                $ref: '#/components/schemas/EPCISXMLQueryDocument'
              example: "<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:2\"\
                \r\n\txmlns:cbvmda=\"urn:epcglobal:cbv:mda\" schemaVersion=\"2.0\"\
                \ creationDate=\"2020-06-28T13:41:00.000Z\">\r\n\t<EPCISBody>\r\n\t\
                \t<EventList>\r\n\t\t\t<!-- INFERENCE example with COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-07T17:10:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>OBSERVE</action>\r\n\t\t\
                \t\t<bizStep>urn:epcglobal:cbv:bizstep:receiving</bizStep>\r\n\t\t\
                \t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
                \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_inferred</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t\t<!-- UNPACKING event with VERIFICATION of COMPLETENESS -->\r\
                \n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-08T18:11:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>DELETE</action>\r\n\t\t\t\
                \t<bizStep>urn:epcglobal:cbv:bizstep:unpacking</bizStep>\r\n\t\t\t\
                \t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\n\
                \t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS VERIFIED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<unset>urn:epcglobal:cbv:disp:completeness_inferred</unset>\r\
                \n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_verified</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t</EventList>\r\n\t</EPCISBody>\r\n</epcis:EPCISDocument>\r\n"
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Events
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint to access EPCIS events by event
        type.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: eventTypesEventTypeEventsOPTIONS
      parameters:
      - name: eventType
        in: path
        description: |
          Names of EPCIS event types.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/eventType'
        example: ObjectEvent
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /epcs:
    get:
      tags:
      - Top-level
      summary: Returns known electronic product codes.
      description: An endpoint to list all electronic product codes known to this
        repository.
      operationId: epcsGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      responses:
        "200":
          description: |
            Returns a list of electronic product codes. If there are more electronic product codes than specified by the
            `perPage` parameter, the client will be given the URL to retrieve more electronic product codes in the
            `Link` header.
            If the client specifies extension mappings, the response will use them where they match. Otherwise,
            the full resource address is used.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UriCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - urn:jaif:id:obj:37SUN321456789A111222333AB+123456789012
                - urn:epc:id:sgtin:0614141.107346.2018
                - https://example.com/01/04012345123456/21/abc234
                - urn:epc:id:sgtin:0614141.107346.2017
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query metadata related to the electronic product codes endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: epcsOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /epcs/{epc}:
    get:
      tags:
      - Top-level
      summary: Returns all sub-resources of an electronic product code.
      description: |
        This endpoint returns all sub-resources of an electronic product code (for HATEOAS discovery), which includes at least `events`.
      operationId: epcsEpcGET
      parameters:
      - name: epc
        in: path
        description: An electronic product code value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgtin:0614141.107346.2018
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "200":
          description: Returns a sub-resource list that contains at least the `events`
            sub-resource (for HATEOAS discovery).
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - events
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query metadata of the electronic product code.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: epcsEpcOPTIONS
      parameters:
      - name: epc
        in: path
        description: An electronic product code value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgtin:0614141.107346.2018
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /epcs/{epc}/events:
    get:
      tags:
      - Events
      summary: Returns EPCIS events matching the specified electronic product code.
      description: |
        This endpoint helps to navigate EPCIS events by electronic product codes. It returns
        EPCIS events up to the amount defined in `perPage`. If applicable, the server returns a `Link` header to point to the remaining
        results. Optionally, EPCIS events can be further filtered using the EPCIS Query Language as query string parameters.
        Example 1 - EPC in a URN form with EPCIS Query Language filtering
        ```
        https://example.com/epcs/urn:epc:id:sgtin:0614141.107346.2018?EQ_bizStep=shipping%7Cdecommissioning&GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00
        ```

        Example 2  - EPC in a constrained GS1 Digital Link form (URL encoded)
        ```
        https://example.com/epcs/https:%2f%2fexample.org%2f01%2f1234567089012400
        ```
        An EPCIS 2.0 query may also be expressed via the URI query string.  The query parameters with fixed fieldnames are included in this OpenAPI interface.  However, this list is not exhaustive and the EPCIS 2.0 standard defines additional query parameters with flexible names, depending on the specific value of `uom`, `type` or `fieldname` that appears within the name of the parameter.
      operationId: epcsEpcEventsGET
      parameters:
      - name: epc
        in: path
        description: An electronic product code value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgtin:0614141.107346.2018
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      - name: eventType
        in: query
        description: "If specified, the result will only include events whose `type`\
          \ matches one of the types specified in the parameter value. Each element\
          \ of the parameter value may be one of the following strings: `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `TransformationEvent` or `AssociationEvent`.\
          \ An element of the parameter value may also be the name of an extension\
          \ event type. If omitted, all event types will be considered for inclusion\
          \ in the result."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EPCISEventTypes'
        example: ObjectEvent
      - name: GE_eventTime
        in: query
        description: "If specified, only events with `eventTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `eventTime` (unless constrained by the\
          \ `LT_eventTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_eventTime
        in: query
        description: "If specified, only events with `eventTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `eventTime` (unless constrained by the `GE_eventTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_recordTime
        in: query
        description: "If provided, only events with `recordTime` greater than or equal\
          \ to the specified value will be returned. The automatic limitation based\
          \ on event record time (section 8.2.5.2) may implicitly provide a constraint\
          \ similar to this parameter. If omitted, events are included regardless\
          \ of their `recordTime`, other than automatic limitation based on event\
          \ record time"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_recordTime
        in: query
        description: "If provided, only events with `recordTime` less than the specified\
          \ value will be returned. If omitted, events are included regardless of\
          \ their `recordTime` (unless constrained by the `GE_recordTime` parameter\
          \ or the automatic limitation based on event record time)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_action
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ an `action` field; and where (b) the value of the `action` field matches\
          \ one of the specified values. The properties of the value of this parameter\
          \ each must be one of the strings `ADD`, `OBSERVE`, or `DELETE`; if not,\
          \ the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ events are included regardless of their `action` field."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADD
            - OBSERVE
            - DELETE
        example: OBSERVE
      - name: EQ_bizStep
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizStep` field; and where (b) the value of the `bizStep` field\
          \ matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/BizStep\"\
          \ target=\"_blank\">CBV BizStep</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `shipping`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `bizStep` field or whether the `bizStep` field exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/bizStep'
        example: shipping
      - name: EQ_disposition
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `disposition` field; and where (b) the value of the `disposition`\
          \ field matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `disposition` field or whether the `disposition` field\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_set
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `set` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `set` field within `persistentDisposition` field or\
          \ whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_unset
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `unset` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `unset` field within `persistentDisposition` field\
          \ or whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs. If this parameter and `WD_readPoint`\
          \ are both omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_readPoint` are both\
          \ omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs. If this parameter and `WD_bizLocation`\
          \ are both omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_bizLocation` are both\
          \ omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_transformationID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `transformationID` field (that is, `TransformationEvent`s\
          \ or extension event type that extend `TransformationEvent`); and where\
          \ (b) the `transformationID` field is equal to one of the values specified\
          \ in this parameter."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: MATCH_epc
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` or a `childEPCs` field (that is, `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPCs listed in the `epcList` or `childEPCs` field (depending on event\
          \ type) matches one of the URIs specified in this parameter, where the meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1.  If this parameter\
          \ is omitted, events are included regardless of their `epcList` or `childEPCs`\
          \ field or whether the `epcList` or `childEPCs` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_parentID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `parentID` field (that is, `AggregationEvent`,\
          \ `TransactionEvent`, `AssociationEvent` or extension event types that extend\
          \ one of those event types); and where (b) one of the EPCs listed in the\
          \ `parentID` field matches one of the URIs specified in this parameter,\
          \ where the meaning of 'matches' is as specified in section 8.2.7.1.1. \
          \ If this parameter is omitted, events are included regardless of their\
          \ `parentID` field or whether the `parentID` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `inputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `inputEPCList` field or whether the `inputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `outputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `outputEPCList` field or whether the `outputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_epcClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList` or a `childQuantityList` field (that\
          \ is, `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `AssociationEvent`\
          \ or extension event types that extend one of those event types); and where\
          \ (b) one of the EPC classes listed in the `quantityList` or `childQuantityList`\
          \ field (depending on event type) matches one of the EPC patterns or URIs\
          \ specified in this parameter. The result will also include QuantityEvents\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `inputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `outputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList`, `childQuantityList`, `inputQuantityList`,\
          \ or `outputQuantityList` field (that is, `ObjectEvent`, `AggregationEvent`,\
          \ `TransactionEvent`, `TransformationEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPC classes listed in any of those fields matches one of the EPC patterns\
          \ or URIs specified in this parameter. The result will also include `QuantityEvent`s\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: EQ_eventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a non-null `eventID` field; and where (b) the `eventID`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of the value of the\
          \ `eventID` field or whether the `eventID` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EXISTS_errorDeclaration
        in: query
        description: "If this parameter is specified (and has a value of true), the\
          \ result will only include events that contain an `ErrorDeclaration`. If\
          \ this parameter is omitted (or has a value of false), events are returned\
          \ regardless of whether they contain an `ErrorDeclaration`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: GE_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is greater than or equal to the specified\
          \ value. If this parameter is omitted, events are returned regardless of\
          \ whether they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is less than to the specified value.\
          \ If this parameter is omitted, events are returned regardless of whether\
          \ they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_errorReason
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the error\
          \ declaration contains a non-null `reason` field; and where (c) the `reason`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of whether they contain\
          \ an `ErrorDeclaration` or what the value of the `reason` field is."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/error-reason'
      - name: EQ_correctiveEventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) one of the\
          \ elements of the `correctiveEventIDs` list is equal to one of the values\
          \ specified in this parameter. If this parameter is omitted, events are\
          \ returned regardless of whether they contain an `ErrorDeclaration` or the\
          \ contents of the `correctiveEventIDs` list."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: orderBy
        in: query
        description: "If specified, names a single field that will be used to order\
          \ the results. The `orderDirection` field specifies whether the ordering\
          \ is in ascending sequence or descending sequence. Events included in the\
          \ result that lack the specified field altogether may occur in any position\
          \ within the result event list. The value of this parameter SHALL be one\
          \ of: `eventTime`, `recordTime`, or the fully qualified name of an extension\
          \ field whose type is Int, Float, Time, or String. A fully qualified fieldname\
          \ is constructed as for the `EQ_fieldname` parameter. In the case of a field\
          \ of type String, sorting SHALL be according to their case-sensitive lexical\
          \ ordering, considering UTF-8/ASCII code values of each successive character.\
          \ If omitted, no order is specified. The implementation MAY order the results\
          \ in any order it chooses, and that order MAY differ even when the same\
          \ query is executed twice on the same data. (In EPCIS 1.0, the value `quantity`\
          \ was also permitted, but its use is deprecated in EPCIS 1.1.)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderDirection
        in: query
        description: "If specified and `orderBy` is also specified, specifies whether\
          \ the results are ordered in ascending or descending sequence according\
          \ to the key specified by `orderBy`. The value of this parameter must be\
          \ one of `ASC` (for ascending order) or `DESC` (for descending order); if\
          \ not, the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ defaults to `DESC`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: eventCountLimit
        in: query
        description: "If specified, the results will only include the first N events\
          \ that match the other criteria, where N is the value of this parameter.\
          \ The ordering specified by the `orderBy` and `orderDirection` parameters\
          \ determine the meaning of “first” for this purpose. If omitted, all events\
          \ matching the specified criteria will be included in the results. This\
          \ parameter and `maxEventCount` are mutually exclusive; if both are specified,\
          \ a `QueryParameterException` SHALL be raised. This parameter may only be\
          \ used when `orderBy` is specified; if `orderBy` is omitted and `eventCountLimit`\
          \ is specified, a `QueryParameterException` SHALL be raised. This parameter\
          \ differs from `maxEventCount` in that this parameter limits the amount\
          \ of data returned, whereas `maxEventCount` causes an exception to be thrown\
          \ if the limit is exceeded. Explanation (non-normative): A common use of\
          \ the `orderBy`, `orderDirection`, and `eventCountLimit` parameters is for\
          \ extremal queries. For example, to select the most recent event matching\
          \ some criteria, the query would include parameters that select events matching\
          \ the desired criteria, and set `orderBy` to `eventTime`, `orderDirection`\
          \ to `DESC`, and `eventCountLimit` to 1."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: maxEventCount
        in: query
        description: "If specified, at most this many events will be included in the\
          \ query result. If the query would otherwise return more than this number\
          \ of events, a `QueryTooLargeException` SHALL be raised instead of a normal\
          \ query result. This parameter and `eventCountLimit` are mutually exclusive;\
          \ if both are specified, a `QueryParameterException` SHALL be raised. If\
          \ this parameter is omitted, any number of events may be included in the\
          \ query result. Note, however, that the EPCIS implementation is free to\
          \ raise a `QueryTooLargeException` regardless of the setting of this parameter\
          \ (see section 8.2.3)."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: GE_startTime
        in: query
        description: "If specified, only events with `startTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `startTime` (unless constrained by the\
          \ `LT_startTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_startTime
        in: query
        description: "If specified, only events with `startTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `startTime` (unless constrained by the `GE_startTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_endTime
        in: query
        description: "If specified, only events with `endTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `endTime` (unless constrained by the\
          \ `LT_endTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_endTime
        in: query
        description: "If specified, only events with `endTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `endTime` (unless constrained by the `GE_endTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_type
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate one or more `sensorElement` fields; and where\
          \ (b) the `type` attribute in one of these `sensorElement` fields is equal\
          \ to one of the values specified in this parameter. If this parameter is\
          \ omitted, events are returned regardless of the value of the `type` attribute\
          \ or whether a `sensorElement` field exists at all. Standard values for\
          \ `type` are defined at <a href=\"https://gs1.org/voc/MeasurementType\"\
          \ target=\"_blank\">https://gs1.org/voc/MeasurementType</a>.  Standard values\
          \ SHALL be expressed as bare words, e.g. `Temperature`."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/measurementType'
        example: Temperature
      - name: EQ_deviceID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `deviceID` attribute; and where (b) the\
          \ `deviceID` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `deviceID` attribute or whether the `deviceID` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_dataProcessingMethod
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `dataProcessingMethod` attribute; and where\
          \ (b) the `dataProcessingMethod` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `dataProcessingMethod` attribute or whether the `dataProcessingMethod`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_microorganism
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `microorganism` attribute; and where (b)\
          \ the `microorganism` attribute is equal to one of the URIs specified in\
          \ this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `microorganism` attribute or whether the `microorganism`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_chemicalSubstance
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `chemicalSubstance` attribute; and where\
          \ (b) the `chemicalSubstance` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `chemicalSubstance` attribute or whether the `chemicalSubstance`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_bizRules
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `bizRules` attribute; and where (b) the\
          \ `bizRules` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `bizRules` attribute or whether the `bizRules` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_stringValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `stringValue` attribute; and where (b) the\
          \ `stringValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `stringValue` attribute or whether the `stringValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_hexBinaryValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `hexBinaryValue` attribute; and where (b)\
          \ the `hexBinaryValue` attribute is equal to one of the strings specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `hexBinaryValue` attribute or whether the `hexBinaryValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_uriValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `uriValue` attribute; and where (b) the\
          \ `uriValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `uriValue` attribute or whether the `uriValue` attribute\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_booleanValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `booleanValue` attribute; and where (b)\
          \ the `booleanValue` attribute is equal to the specified value (i.e. `true`\
          \ or `false`). If this parameter is omitted, events are returned regardless\
          \ of the value of the `booleanValue` attribute or whether the `booleanValue`\
          \ attribute exists at all"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Contains EPCIS events.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epcisQueryDocument'
              example:
                '@context':
                - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                - example: http://ns.example.com/epcis/
                id: https://id.example.org/document1
                type: EPCISQueryDocument
                schemaVersion: "2.0"
                creationDate: 2005-07-11T11:30:47.0Z
                epcisBody:
                  queryResults:
                    subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                    queryName: SimpleEventQuery
                    resultsBody:
                      eventList:
                      - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: shipping
                        disposition: in_transit
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2017
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-03T20:33:31.116000-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0614141.07346.1234
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                      - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: receiving
                        disposition: in_progress
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-04T20:33:31.116-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0012345.11111.400
                        bizLocation:
                          id: urn:epc:id:sgln:0012345.11111.0
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                        - type: desadv
                          bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                        example:myField: Example of a vendor/user extension
            application/xml:
              schema:
                $ref: '#/components/schemas/EPCISXMLQueryDocument'
              example: "<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:2\"\
                \r\n\txmlns:cbvmda=\"urn:epcglobal:cbv:mda\" schemaVersion=\"2.0\"\
                \ creationDate=\"2020-06-28T13:41:00.000Z\">\r\n\t<EPCISBody>\r\n\t\
                \t<EventList>\r\n\t\t\t<!-- INFERENCE example with COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-07T17:10:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>OBSERVE</action>\r\n\t\t\
                \t\t<bizStep>urn:epcglobal:cbv:bizstep:receiving</bizStep>\r\n\t\t\
                \t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
                \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_inferred</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t\t<!-- UNPACKING event with VERIFICATION of COMPLETENESS -->\r\
                \n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-08T18:11:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>DELETE</action>\r\n\t\t\t\
                \t<bizStep>urn:epcglobal:cbv:bizstep:unpacking</bizStep>\r\n\t\t\t\
                \t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\n\
                \t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS VERIFIED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<unset>urn:epcglobal:cbv:disp:completeness_inferred</unset>\r\
                \n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_verified</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t</EventList>\r\n\t</EPCISBody>\r\n</epcis:EPCISDocument>\r\n"
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Events
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint to access EPCIS events by EPC in
        a URN or constrained GS1 Digital Link form (URL encoded).
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: epcsEpcEventsOPTIONS
      parameters:
      - name: epc
        in: path
        description: An electronic product code value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgtin:0614141.107346.2018
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /bizSteps:
    get:
      tags:
      - Top-level
      summary: Returns known business steps.
      description: This endpoint returns the CBV standard business steps as well as
        any custom business steps supported by this repository.
      operationId: bizStepsGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      responses:
        "200":
          description: |
            Returns a list of business steps. If there are more business steps than specified by the
            `perPage` parameter, the client will be given the URL to retrieve more business steps in the `Link` header.
            If the client specifies extension mappings, the response will use them where they match. Otherwise,
            the full resource address is used.
          headers:
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BizStepCollection'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query metadata related to the business steps endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: bizStepsOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /bizSteps/{bizStep}:
    get:
      tags:
      - Top-level
      summary: Returns all sub-resources of a business step.
      description: |
        This endpoint returns all sub-resources of a business step (for HATEOAS discovery), which includes at least `events`.
      operationId: bizStepsBizStepGET
      parameters:
      - name: bizStep
        in: path
        description: A business step value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epcglobal:cbv:bizstep:receiving
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "200":
          description: Returns a sub-resource list that contains at least the `events`
            sub-resource (for HATEOAS discovery).
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - events
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query metadata of the endpoint to access an individual business step.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: bizStepsBizStepOPTIONS
      parameters:
      - name: bizStep
        in: path
        description: A business step value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epcglobal:cbv:bizstep:receiving
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /bizSteps/{bizStep}/events:
    get:
      tags:
      - Events
      summary: Returns all EPCIS events related to the business step.
      description: |
        This endpoint helps to navigate EPCIS events by business steps. It returns
        EPCIS events up to the amount defined in `perPage`. The server returns a `Link` header to point to the
        remaining results.  Optionally, EPCIS events can be further filtered using the EPCIS Query Language in as query
        string parameters.
        Example:
        ```
        https://example.com/bizSteps/receiving?GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00
        ```
        An EPCIS 2.0 query may also be expressed via the URI query string.  The query parameters with fixed fieldnames are included in this OpenAPI interface.  However, this list is not exhaustive and the EPCIS 2.0 standard defines additional query parameters with flexible names, depending on the specific value of `uom`, `type` or `fieldname` that appears within the name of the parameter.
      operationId: bizStepsBizStepEventsGET
      parameters:
      - name: bizStep
        in: path
        description: A business step value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epcglobal:cbv:bizstep:receiving
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      - name: eventType
        in: query
        description: "If specified, the result will only include events whose `type`\
          \ matches one of the types specified in the parameter value. Each element\
          \ of the parameter value may be one of the following strings: `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `TransformationEvent` or `AssociationEvent`.\
          \ An element of the parameter value may also be the name of an extension\
          \ event type. If omitted, all event types will be considered for inclusion\
          \ in the result."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EPCISEventTypes'
        example: ObjectEvent
      - name: GE_eventTime
        in: query
        description: "If specified, only events with `eventTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `eventTime` (unless constrained by the\
          \ `LT_eventTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_eventTime
        in: query
        description: "If specified, only events with `eventTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `eventTime` (unless constrained by the `GE_eventTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_recordTime
        in: query
        description: "If provided, only events with `recordTime` greater than or equal\
          \ to the specified value will be returned. The automatic limitation based\
          \ on event record time (section 8.2.5.2) may implicitly provide a constraint\
          \ similar to this parameter. If omitted, events are included regardless\
          \ of their `recordTime`, other than automatic limitation based on event\
          \ record time"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_recordTime
        in: query
        description: "If provided, only events with `recordTime` less than the specified\
          \ value will be returned. If omitted, events are included regardless of\
          \ their `recordTime` (unless constrained by the `GE_recordTime` parameter\
          \ or the automatic limitation based on event record time)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_action
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ an `action` field; and where (b) the value of the `action` field matches\
          \ one of the specified values. The properties of the value of this parameter\
          \ each must be one of the strings `ADD`, `OBSERVE`, or `DELETE`; if not,\
          \ the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ events are included regardless of their `action` field."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADD
            - OBSERVE
            - DELETE
        example: OBSERVE
      - name: EQ_disposition
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `disposition` field; and where (b) the value of the `disposition`\
          \ field matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `disposition` field or whether the `disposition` field\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_set
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `set` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `set` field within `persistentDisposition` field or\
          \ whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_unset
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `unset` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `unset` field within `persistentDisposition` field\
          \ or whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs. If this parameter and `WD_readPoint`\
          \ are both omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_readPoint` are both\
          \ omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs. If this parameter and `WD_bizLocation`\
          \ are both omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_bizLocation` are both\
          \ omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_transformationID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `transformationID` field (that is, `TransformationEvent`s\
          \ or extension event type that extend `TransformationEvent`); and where\
          \ (b) the `transformationID` field is equal to one of the values specified\
          \ in this parameter."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: MATCH_epc
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` or a `childEPCs` field (that is, `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPCs listed in the `epcList` or `childEPCs` field (depending on event\
          \ type) matches one of the URIs specified in this parameter, where the meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1.  If this parameter\
          \ is omitted, events are included regardless of their `epcList` or `childEPCs`\
          \ field or whether the `epcList` or `childEPCs` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_parentID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `parentID` field (that is, `AggregationEvent`,\
          \ `TransactionEvent`, `AssociationEvent` or extension event types that extend\
          \ one of those event types); and where (b) one of the EPCs listed in the\
          \ `parentID` field matches one of the URIs specified in this parameter,\
          \ where the meaning of 'matches' is as specified in section 8.2.7.1.1. \
          \ If this parameter is omitted, events are included regardless of their\
          \ `parentID` field or whether the `parentID` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `inputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `inputEPCList` field or whether the `inputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `outputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `outputEPCList` field or whether the `outputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` field, a `childEPCs` field, a `parentID`\
          \ field, an `inputEPCList` field, or an `outputEPCList` field (that is,\
          \ `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `TransformationEvent`,\
          \ `AssociationEvent` or extension event types that extend one of those event\
          \ types); and where (b) the `parentID` field or one of the EPCs listed in\
          \ the `epcList`, `childEPCs`, `inputEPCList`, or `outputEPCList` field (depending\
          \ on event type) matches one of URIs specified in this parameter. The meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_epcClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList` or a `childQuantityList` field (that\
          \ is, `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `AssociationEvent`\
          \ or extension event types that extend one of those event types); and where\
          \ (b) one of the EPC classes listed in the `quantityList` or `childQuantityList`\
          \ field (depending on event type) matches one of the EPC patterns or URIs\
          \ specified in this parameter. The result will also include QuantityEvents\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `inputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `outputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList`, `childQuantityList`, `inputQuantityList`,\
          \ or `outputQuantityList` field (that is, `ObjectEvent`, `AggregationEvent`,\
          \ `TransactionEvent`, `TransformationEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPC classes listed in any of those fields matches one of the EPC patterns\
          \ or URIs specified in this parameter. The result will also include `QuantityEvent`s\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: EQ_eventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a non-null `eventID` field; and where (b) the `eventID`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of the value of the\
          \ `eventID` field or whether the `eventID` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EXISTS_errorDeclaration
        in: query
        description: "If this parameter is specified (and has a value of true), the\
          \ result will only include events that contain an `ErrorDeclaration`. If\
          \ this parameter is omitted (or has a value of false), events are returned\
          \ regardless of whether they contain an `ErrorDeclaration`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: GE_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is greater than or equal to the specified\
          \ value. If this parameter is omitted, events are returned regardless of\
          \ whether they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is less than to the specified value.\
          \ If this parameter is omitted, events are returned regardless of whether\
          \ they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_errorReason
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the error\
          \ declaration contains a non-null `reason` field; and where (c) the `reason`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of whether they contain\
          \ an `ErrorDeclaration` or what the value of the `reason` field is."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/error-reason'
      - name: EQ_correctiveEventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) one of the\
          \ elements of the `correctiveEventIDs` list is equal to one of the values\
          \ specified in this parameter. If this parameter is omitted, events are\
          \ returned regardless of whether they contain an `ErrorDeclaration` or the\
          \ contents of the `correctiveEventIDs` list."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: orderBy
        in: query
        description: "If specified, names a single field that will be used to order\
          \ the results. The `orderDirection` field specifies whether the ordering\
          \ is in ascending sequence or descending sequence. Events included in the\
          \ result that lack the specified field altogether may occur in any position\
          \ within the result event list. The value of this parameter SHALL be one\
          \ of: `eventTime`, `recordTime`, or the fully qualified name of an extension\
          \ field whose type is Int, Float, Time, or String. A fully qualified fieldname\
          \ is constructed as for the `EQ_fieldname` parameter. In the case of a field\
          \ of type String, sorting SHALL be according to their case-sensitive lexical\
          \ ordering, considering UTF-8/ASCII code values of each successive character.\
          \ If omitted, no order is specified. The implementation MAY order the results\
          \ in any order it chooses, and that order MAY differ even when the same\
          \ query is executed twice on the same data. (In EPCIS 1.0, the value `quantity`\
          \ was also permitted, but its use is deprecated in EPCIS 1.1.)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderDirection
        in: query
        description: "If specified and `orderBy` is also specified, specifies whether\
          \ the results are ordered in ascending or descending sequence according\
          \ to the key specified by `orderBy`. The value of this parameter must be\
          \ one of `ASC` (for ascending order) or `DESC` (for descending order); if\
          \ not, the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ defaults to `DESC`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: eventCountLimit
        in: query
        description: "If specified, the results will only include the first N events\
          \ that match the other criteria, where N is the value of this parameter.\
          \ The ordering specified by the `orderBy` and `orderDirection` parameters\
          \ determine the meaning of “first” for this purpose. If omitted, all events\
          \ matching the specified criteria will be included in the results. This\
          \ parameter and `maxEventCount` are mutually exclusive; if both are specified,\
          \ a `QueryParameterException` SHALL be raised. This parameter may only be\
          \ used when `orderBy` is specified; if `orderBy` is omitted and `eventCountLimit`\
          \ is specified, a `QueryParameterException` SHALL be raised. This parameter\
          \ differs from `maxEventCount` in that this parameter limits the amount\
          \ of data returned, whereas `maxEventCount` causes an exception to be thrown\
          \ if the limit is exceeded. Explanation (non-normative): A common use of\
          \ the `orderBy`, `orderDirection`, and `eventCountLimit` parameters is for\
          \ extremal queries. For example, to select the most recent event matching\
          \ some criteria, the query would include parameters that select events matching\
          \ the desired criteria, and set `orderBy` to `eventTime`, `orderDirection`\
          \ to `DESC`, and `eventCountLimit` to 1."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: maxEventCount
        in: query
        description: "If specified, at most this many events will be included in the\
          \ query result. If the query would otherwise return more than this number\
          \ of events, a `QueryTooLargeException` SHALL be raised instead of a normal\
          \ query result. This parameter and `eventCountLimit` are mutually exclusive;\
          \ if both are specified, a `QueryParameterException` SHALL be raised. If\
          \ this parameter is omitted, any number of events may be included in the\
          \ query result. Note, however, that the EPCIS implementation is free to\
          \ raise a `QueryTooLargeException` regardless of the setting of this parameter\
          \ (see section 8.2.3)."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: GE_startTime
        in: query
        description: "If specified, only events with `startTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `startTime` (unless constrained by the\
          \ `LT_startTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_startTime
        in: query
        description: "If specified, only events with `startTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `startTime` (unless constrained by the `GE_startTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_endTime
        in: query
        description: "If specified, only events with `endTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `endTime` (unless constrained by the\
          \ `LT_endTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_endTime
        in: query
        description: "If specified, only events with `endTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `endTime` (unless constrained by the `GE_endTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_type
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate one or more `sensorElement` fields; and where\
          \ (b) the `type` attribute in one of these `sensorElement` fields is equal\
          \ to one of the values specified in this parameter. If this parameter is\
          \ omitted, events are returned regardless of the value of the `type` attribute\
          \ or whether a `sensorElement` field exists at all. Standard values for\
          \ `type` are defined at <a href=\"https://gs1.org/voc/MeasurementType\"\
          \ target=\"_blank\">https://gs1.org/voc/MeasurementType</a>.  Standard values\
          \ SHALL be expressed as bare words, e.g. `Temperature`."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/measurementType'
        example: Temperature
      - name: EQ_deviceID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `deviceID` attribute; and where (b) the\
          \ `deviceID` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `deviceID` attribute or whether the `deviceID` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_dataProcessingMethod
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `dataProcessingMethod` attribute; and where\
          \ (b) the `dataProcessingMethod` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `dataProcessingMethod` attribute or whether the `dataProcessingMethod`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_microorganism
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `microorganism` attribute; and where (b)\
          \ the `microorganism` attribute is equal to one of the URIs specified in\
          \ this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `microorganism` attribute or whether the `microorganism`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_chemicalSubstance
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `chemicalSubstance` attribute; and where\
          \ (b) the `chemicalSubstance` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `chemicalSubstance` attribute or whether the `chemicalSubstance`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_bizRules
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `bizRules` attribute; and where (b) the\
          \ `bizRules` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `bizRules` attribute or whether the `bizRules` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_stringValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `stringValue` attribute; and where (b) the\
          \ `stringValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `stringValue` attribute or whether the `stringValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_hexBinaryValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `hexBinaryValue` attribute; and where (b)\
          \ the `hexBinaryValue` attribute is equal to one of the strings specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `hexBinaryValue` attribute or whether the `hexBinaryValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_uriValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `uriValue` attribute; and where (b) the\
          \ `uriValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `uriValue` attribute or whether the `uriValue` attribute\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_booleanValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `booleanValue` attribute; and where (b)\
          \ the `booleanValue` attribute is equal to the specified value (i.e. `true`\
          \ or `false`). If this parameter is omitted, events are returned regardless\
          \ of the value of the `booleanValue` attribute or whether the `booleanValue`\
          \ attribute exists at all"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Contains EPCIS events.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epcisQueryDocument'
              example:
                '@context':
                - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                - example: http://ns.example.com/epcis/
                id: https://id.example.org/document1
                type: EPCISQueryDocument
                schemaVersion: "2.0"
                creationDate: 2005-07-11T11:30:47.0Z
                epcisBody:
                  queryResults:
                    subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                    queryName: SimpleEventQuery
                    resultsBody:
                      eventList:
                      - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: shipping
                        disposition: in_transit
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2017
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-03T20:33:31.116000-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0614141.07346.1234
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                      - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: receiving
                        disposition: in_progress
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-04T20:33:31.116-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0012345.11111.400
                        bizLocation:
                          id: urn:epc:id:sgln:0012345.11111.0
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                        - type: desadv
                          bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                        example:myField: Example of a vendor/user extension
            application/xml:
              schema:
                $ref: '#/components/schemas/EPCISXMLQueryDocument'
              example: "<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:2\"\
                \r\n\txmlns:cbvmda=\"urn:epcglobal:cbv:mda\" schemaVersion=\"2.0\"\
                \ creationDate=\"2020-06-28T13:41:00.000Z\">\r\n\t<EPCISBody>\r\n\t\
                \t<EventList>\r\n\t\t\t<!-- INFERENCE example with COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-07T17:10:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>OBSERVE</action>\r\n\t\t\
                \t\t<bizStep>urn:epcglobal:cbv:bizstep:receiving</bizStep>\r\n\t\t\
                \t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
                \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_inferred</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t\t<!-- UNPACKING event with VERIFICATION of COMPLETENESS -->\r\
                \n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-08T18:11:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>DELETE</action>\r\n\t\t\t\
                \t<bizStep>urn:epcglobal:cbv:bizstep:unpacking</bizStep>\r\n\t\t\t\
                \t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\n\
                \t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS VERIFIED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<unset>urn:epcglobal:cbv:disp:completeness_inferred</unset>\r\
                \n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_verified</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t</EventList>\r\n\t</EPCISBody>\r\n</epcis:EPCISDocument>\r\n"
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Events
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint to access EPCIS events by business
        step.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: bizStepsBizStepEventsOPTIONS
      parameters:
      - name: bizStep
        in: path
        description: A business step value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epcglobal:cbv:bizstep:receiving
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /bizLocations:
    get:
      tags:
      - Top-level
      summary: Returns known business locations.
      description: |
        An endpoint to list all the business locations known to this repository.
      operationId: bizLocationsGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      responses:
        "200":
          description: |
            Returns a list of business locations. If there are more business locations than specified by the
            `perPage` parameter, the client will be given the URL to retrieve more business locations in the `Link` header.
            If the client specifies extension mappings, the response will use them where they match. Otherwise,
            the full resource address is used.
          headers:
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UriCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - urn:epc:id:sgln:9524987.20000.0
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query the metadata related to the business locations endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: bizLocationsOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /bizLocations/{bizLocation}:
    get:
      tags:
      - Top-level
      summary: Returns all sub-resources of a business location.
      description: |
        This endpoint returns all sub-resources of a business location (for HATEOAS discovery), which includes at least `events`.
      operationId: bizLocationsBizLocationGET
      parameters:
      - name: bizLocation
        in: path
        description: A business location value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgln:0012345.11111.0
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      responses:
        "200":
          description: Returns a sub-resource list that contains at least the `events`
            sub-resource (for HATEOAS discovery).
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - events
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint to access an individual business
        location.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: bizLocationsBizLocationOPTIONS
      parameters:
      - name: bizLocation
        in: path
        description: A business location value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgln:0012345.11111.0
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /bizLocations/{bizLocation}/events:
    get:
      tags:
      - Events
      summary: Returns all EPCIS events related to the business location.
      description: |
        This endpoint helps to navigate EPCIS events by business locations. It returns
        EPCIS events up to the amount defined in `perPage`. The server returns a `Link` header to point to the remaining
        results.
        Optionally, EPCIS events can be further filtered using the EPCIS Query Language as query string parameters.
        Example:
        ```
        https://example.com/bizLocations/urn:epc:id:sgln:0012345.11111.400?GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00
        ```
        An EPCIS 2.0 query may also be expressed via the URI query string.  The query parameters with fixed fieldnames are included in this OpenAPI interface.  However, this list is not exhaustive and the EPCIS 2.0 standard defines additional query parameters with flexible names, depending on the specific value of `uom`, `type` or `fieldname` that appears within the name of the parameter.
      operationId: bizLocationsBizLocationEventsGET
      parameters:
      - name: bizLocation
        in: path
        description: A business location value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgln:0012345.11111.0
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      - name: eventType
        in: query
        description: "If specified, the result will only include events whose `type`\
          \ matches one of the types specified in the parameter value. Each element\
          \ of the parameter value may be one of the following strings: `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `TransformationEvent` or `AssociationEvent`.\
          \ An element of the parameter value may also be the name of an extension\
          \ event type. If omitted, all event types will be considered for inclusion\
          \ in the result."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EPCISEventTypes'
        example: ObjectEvent
      - name: GE_eventTime
        in: query
        description: "If specified, only events with `eventTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `eventTime` (unless constrained by the\
          \ `LT_eventTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_eventTime
        in: query
        description: "If specified, only events with `eventTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `eventTime` (unless constrained by the `GE_eventTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_recordTime
        in: query
        description: "If provided, only events with `recordTime` greater than or equal\
          \ to the specified value will be returned. The automatic limitation based\
          \ on event record time (section 8.2.5.2) may implicitly provide a constraint\
          \ similar to this parameter. If omitted, events are included regardless\
          \ of their `recordTime`, other than automatic limitation based on event\
          \ record time"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_recordTime
        in: query
        description: "If provided, only events with `recordTime` less than the specified\
          \ value will be returned. If omitted, events are included regardless of\
          \ their `recordTime` (unless constrained by the `GE_recordTime` parameter\
          \ or the automatic limitation based on event record time)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_action
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ an `action` field; and where (b) the value of the `action` field matches\
          \ one of the specified values. The properties of the value of this parameter\
          \ each must be one of the strings `ADD`, `OBSERVE`, or `DELETE`; if not,\
          \ the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ events are included regardless of their `action` field."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADD
            - OBSERVE
            - DELETE
        example: OBSERVE
      - name: EQ_bizStep
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizStep` field; and where (b) the value of the `bizStep` field\
          \ matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/BizStep\"\
          \ target=\"_blank\">CBV BizStep</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `shipping`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `bizStep` field or whether the `bizStep` field exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/bizStep'
        example: shipping
      - name: EQ_disposition
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `disposition` field; and where (b) the value of the `disposition`\
          \ field matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `disposition` field or whether the `disposition` field\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_set
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `set` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `set` field within `persistentDisposition` field or\
          \ whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_unset
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `unset` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `unset` field within `persistentDisposition` field\
          \ or whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs. If this parameter and `WD_readPoint`\
          \ are both omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_readPoint` are both\
          \ omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_bizLocation` are both\
          \ omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_transformationID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `transformationID` field (that is, `TransformationEvent`s\
          \ or extension event type that extend `TransformationEvent`); and where\
          \ (b) the `transformationID` field is equal to one of the values specified\
          \ in this parameter."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: MATCH_epc
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` or a `childEPCs` field (that is, `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPCs listed in the `epcList` or `childEPCs` field (depending on event\
          \ type) matches one of the URIs specified in this parameter, where the meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1.  If this parameter\
          \ is omitted, events are included regardless of their `epcList` or `childEPCs`\
          \ field or whether the `epcList` or `childEPCs` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_parentID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `parentID` field (that is, `AggregationEvent`,\
          \ `TransactionEvent`, `AssociationEvent` or extension event types that extend\
          \ one of those event types); and where (b) one of the EPCs listed in the\
          \ `parentID` field matches one of the URIs specified in this parameter,\
          \ where the meaning of 'matches' is as specified in section 8.2.7.1.1. \
          \ If this parameter is omitted, events are included regardless of their\
          \ `parentID` field or whether the `parentID` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `inputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `inputEPCList` field or whether the `inputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `outputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `outputEPCList` field or whether the `outputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` field, a `childEPCs` field, a `parentID`\
          \ field, an `inputEPCList` field, or an `outputEPCList` field (that is,\
          \ `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `TransformationEvent`,\
          \ `AssociationEvent` or extension event types that extend one of those event\
          \ types); and where (b) the `parentID` field or one of the EPCs listed in\
          \ the `epcList`, `childEPCs`, `inputEPCList`, or `outputEPCList` field (depending\
          \ on event type) matches one of URIs specified in this parameter. The meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_epcClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList` or a `childQuantityList` field (that\
          \ is, `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `AssociationEvent`\
          \ or extension event types that extend one of those event types); and where\
          \ (b) one of the EPC classes listed in the `quantityList` or `childQuantityList`\
          \ field (depending on event type) matches one of the EPC patterns or URIs\
          \ specified in this parameter. The result will also include QuantityEvents\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `inputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `outputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList`, `childQuantityList`, `inputQuantityList`,\
          \ or `outputQuantityList` field (that is, `ObjectEvent`, `AggregationEvent`,\
          \ `TransactionEvent`, `TransformationEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPC classes listed in any of those fields matches one of the EPC patterns\
          \ or URIs specified in this parameter. The result will also include `QuantityEvent`s\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: EQ_eventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a non-null `eventID` field; and where (b) the `eventID`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of the value of the\
          \ `eventID` field or whether the `eventID` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EXISTS_errorDeclaration
        in: query
        description: "If this parameter is specified (and has a value of true), the\
          \ result will only include events that contain an `ErrorDeclaration`. If\
          \ this parameter is omitted (or has a value of false), events are returned\
          \ regardless of whether they contain an `ErrorDeclaration`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: GE_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is greater than or equal to the specified\
          \ value. If this parameter is omitted, events are returned regardless of\
          \ whether they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is less than to the specified value.\
          \ If this parameter is omitted, events are returned regardless of whether\
          \ they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_errorReason
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the error\
          \ declaration contains a non-null `reason` field; and where (c) the `reason`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of whether they contain\
          \ an `ErrorDeclaration` or what the value of the `reason` field is."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/error-reason'
      - name: EQ_correctiveEventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) one of the\
          \ elements of the `correctiveEventIDs` list is equal to one of the values\
          \ specified in this parameter. If this parameter is omitted, events are\
          \ returned regardless of whether they contain an `ErrorDeclaration` or the\
          \ contents of the `correctiveEventIDs` list."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: orderBy
        in: query
        description: "If specified, names a single field that will be used to order\
          \ the results. The `orderDirection` field specifies whether the ordering\
          \ is in ascending sequence or descending sequence. Events included in the\
          \ result that lack the specified field altogether may occur in any position\
          \ within the result event list. The value of this parameter SHALL be one\
          \ of: `eventTime`, `recordTime`, or the fully qualified name of an extension\
          \ field whose type is Int, Float, Time, or String. A fully qualified fieldname\
          \ is constructed as for the `EQ_fieldname` parameter. In the case of a field\
          \ of type String, sorting SHALL be according to their case-sensitive lexical\
          \ ordering, considering UTF-8/ASCII code values of each successive character.\
          \ If omitted, no order is specified. The implementation MAY order the results\
          \ in any order it chooses, and that order MAY differ even when the same\
          \ query is executed twice on the same data. (In EPCIS 1.0, the value `quantity`\
          \ was also permitted, but its use is deprecated in EPCIS 1.1.)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderDirection
        in: query
        description: "If specified and `orderBy` is also specified, specifies whether\
          \ the results are ordered in ascending or descending sequence according\
          \ to the key specified by `orderBy`. The value of this parameter must be\
          \ one of `ASC` (for ascending order) or `DESC` (for descending order); if\
          \ not, the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ defaults to `DESC`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: eventCountLimit
        in: query
        description: "If specified, the results will only include the first N events\
          \ that match the other criteria, where N is the value of this parameter.\
          \ The ordering specified by the `orderBy` and `orderDirection` parameters\
          \ determine the meaning of “first” for this purpose. If omitted, all events\
          \ matching the specified criteria will be included in the results. This\
          \ parameter and `maxEventCount` are mutually exclusive; if both are specified,\
          \ a `QueryParameterException` SHALL be raised. This parameter may only be\
          \ used when `orderBy` is specified; if `orderBy` is omitted and `eventCountLimit`\
          \ is specified, a `QueryParameterException` SHALL be raised. This parameter\
          \ differs from `maxEventCount` in that this parameter limits the amount\
          \ of data returned, whereas `maxEventCount` causes an exception to be thrown\
          \ if the limit is exceeded. Explanation (non-normative): A common use of\
          \ the `orderBy`, `orderDirection`, and `eventCountLimit` parameters is for\
          \ extremal queries. For example, to select the most recent event matching\
          \ some criteria, the query would include parameters that select events matching\
          \ the desired criteria, and set `orderBy` to `eventTime`, `orderDirection`\
          \ to `DESC`, and `eventCountLimit` to 1."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: maxEventCount
        in: query
        description: "If specified, at most this many events will be included in the\
          \ query result. If the query would otherwise return more than this number\
          \ of events, a `QueryTooLargeException` SHALL be raised instead of a normal\
          \ query result. This parameter and `eventCountLimit` are mutually exclusive;\
          \ if both are specified, a `QueryParameterException` SHALL be raised. If\
          \ this parameter is omitted, any number of events may be included in the\
          \ query result. Note, however, that the EPCIS implementation is free to\
          \ raise a `QueryTooLargeException` regardless of the setting of this parameter\
          \ (see section 8.2.3)."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: GE_startTime
        in: query
        description: "If specified, only events with `startTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `startTime` (unless constrained by the\
          \ `LT_startTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_startTime
        in: query
        description: "If specified, only events with `startTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `startTime` (unless constrained by the `GE_startTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_endTime
        in: query
        description: "If specified, only events with `endTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `endTime` (unless constrained by the\
          \ `LT_endTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_endTime
        in: query
        description: "If specified, only events with `endTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `endTime` (unless constrained by the `GE_endTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_type
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate one or more `sensorElement` fields; and where\
          \ (b) the `type` attribute in one of these `sensorElement` fields is equal\
          \ to one of the values specified in this parameter. If this parameter is\
          \ omitted, events are returned regardless of the value of the `type` attribute\
          \ or whether a `sensorElement` field exists at all. Standard values for\
          \ `type` are defined at <a href=\"https://gs1.org/voc/MeasurementType\"\
          \ target=\"_blank\">https://gs1.org/voc/MeasurementType</a>.  Standard values\
          \ SHALL be expressed as bare words, e.g. `Temperature`."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/measurementType'
        example: Temperature
      - name: EQ_deviceID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `deviceID` attribute; and where (b) the\
          \ `deviceID` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `deviceID` attribute or whether the `deviceID` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_dataProcessingMethod
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `dataProcessingMethod` attribute; and where\
          \ (b) the `dataProcessingMethod` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `dataProcessingMethod` attribute or whether the `dataProcessingMethod`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_microorganism
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `microorganism` attribute; and where (b)\
          \ the `microorganism` attribute is equal to one of the URIs specified in\
          \ this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `microorganism` attribute or whether the `microorganism`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_chemicalSubstance
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `chemicalSubstance` attribute; and where\
          \ (b) the `chemicalSubstance` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `chemicalSubstance` attribute or whether the `chemicalSubstance`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_bizRules
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `bizRules` attribute; and where (b) the\
          \ `bizRules` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `bizRules` attribute or whether the `bizRules` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_stringValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `stringValue` attribute; and where (b) the\
          \ `stringValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `stringValue` attribute or whether the `stringValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_hexBinaryValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `hexBinaryValue` attribute; and where (b)\
          \ the `hexBinaryValue` attribute is equal to one of the strings specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `hexBinaryValue` attribute or whether the `hexBinaryValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_uriValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `uriValue` attribute; and where (b) the\
          \ `uriValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `uriValue` attribute or whether the `uriValue` attribute\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_booleanValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `booleanValue` attribute; and where (b)\
          \ the `booleanValue` attribute is equal to the specified value (i.e. `true`\
          \ or `false`). If this parameter is omitted, events are returned regardless\
          \ of the value of the `booleanValue` attribute or whether the `booleanValue`\
          \ attribute exists at all"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Contains EPCIS events.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epcisQueryDocument'
              example:
                '@context':
                - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                - example: http://ns.example.com/epcis/
                id: https://id.example.org/document1
                type: EPCISQueryDocument
                schemaVersion: "2.0"
                creationDate: 2005-07-11T11:30:47.0Z
                epcisBody:
                  queryResults:
                    subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                    queryName: SimpleEventQuery
                    resultsBody:
                      eventList:
                      - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: shipping
                        disposition: in_transit
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2017
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-03T20:33:31.116000-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0614141.07346.1234
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                      - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: receiving
                        disposition: in_progress
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-04T20:33:31.116-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0012345.11111.400
                        bizLocation:
                          id: urn:epc:id:sgln:0012345.11111.0
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                        - type: desadv
                          bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                        example:myField: Example of a vendor/user extension
            application/xml:
              schema:
                $ref: '#/components/schemas/EPCISXMLQueryDocument'
              example: "<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:2\"\
                \r\n\txmlns:cbvmda=\"urn:epcglobal:cbv:mda\" schemaVersion=\"2.0\"\
                \ creationDate=\"2020-06-28T13:41:00.000Z\">\r\n\t<EPCISBody>\r\n\t\
                \t<EventList>\r\n\t\t\t<!-- INFERENCE example with COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-07T17:10:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>OBSERVE</action>\r\n\t\t\
                \t\t<bizStep>urn:epcglobal:cbv:bizstep:receiving</bizStep>\r\n\t\t\
                \t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
                \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_inferred</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t\t<!-- UNPACKING event with VERIFICATION of COMPLETENESS -->\r\
                \n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-08T18:11:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>DELETE</action>\r\n\t\t\t\
                \t<bizStep>urn:epcglobal:cbv:bizstep:unpacking</bizStep>\r\n\t\t\t\
                \t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\n\
                \t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS VERIFIED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<unset>urn:epcglobal:cbv:disp:completeness_inferred</unset>\r\
                \n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_verified</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t</EventList>\r\n\t</EPCISBody>\r\n</epcis:EPCISDocument>\r\n"
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Events
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint to access EPCIS events by business
        location.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: bizLocationsBizLocationEventsOPTIONS
      parameters:
      - name: bizLocation
        in: path
        description: A business location value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgln:0012345.11111.0
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /readPoints:
    get:
      tags:
      - Top-level
      summary: Returns known read points.
      description: An endpoint to list all read points known to this repository.
      operationId: readPointsGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      responses:
        "200":
          description: |
            Returns a list of read points. If there are more read points than specified by the
            `perPage` parameter, the client will be given the URL to retrieve more read points in the `Link` header.
            If the client specifies extension mappings, the response will use them where they match. Otherwise,
            the full resource address is used.
          headers:
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UriCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - urn:epc:id:sgln:9524678.90000.WarehouseD2
                - urn:epc:id:sgln:9524678.90000.WarehouseD1
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query the metadata related to the read points endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: readPointsOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /readPoints/{readPoint}:
    get:
      tags:
      - Top-level
      summary: Returns all sub-resources of a read point.
      description: |
        This endpoint returns all sub-resources of a read point (for HATEOAS discovery), which includes at least `events`.
      operationId: readPointsReadPointGET
      parameters:
      - name: readPoint
        in: path
        description: A read point value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      responses:
        "200":
          description: Returns a sub-resource list that contains at least the `events`
            sub-resource (for HATEOAS discovery).
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - events
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint to access an individual read point.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: readPointsReadPointOPTIONS
      parameters:
      - name: readPoint
        in: path
        description: A read point value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /readPoints/{readPoint}/events:
    get:
      tags:
      - Events
      summary: Returns all EPCIS events related to the read point.
      description: |
        This endpoint helps to navigate EPCIS events by read points. It returns
        EPCIS events up to the amount defined in `perPage`. The server returns a `Link` header to point to the remaining
        results.
        Optionally, EPCIS events can be further filtered using the EPCIS Query Language as query string parameters.
        Example:
        ```
        https://example.com/readPoints/urn:epc:id:sgln:0012345.11111.400?GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00
        ```
        An EPCIS 2.0 query may also be expressed via the URI query string.  The query parameters with fixed fieldnames are included in this OpenAPI interface.  However, this list is not exhaustive and the EPCIS 2.0 standard defines additional query parameters with flexible names, depending on the specific value of `uom`, `type` or `fieldname` that appears within the name of the parameter.
      operationId: readPointsReadPointEventsGET
      parameters:
      - name: readPoint
        in: path
        description: A read point value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      - name: eventType
        in: query
        description: "If specified, the result will only include events whose `type`\
          \ matches one of the types specified in the parameter value. Each element\
          \ of the parameter value may be one of the following strings: `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `TransformationEvent` or `AssociationEvent`.\
          \ An element of the parameter value may also be the name of an extension\
          \ event type. If omitted, all event types will be considered for inclusion\
          \ in the result."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EPCISEventTypes'
        example: ObjectEvent
      - name: GE_eventTime
        in: query
        description: "If specified, only events with `eventTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `eventTime` (unless constrained by the\
          \ `LT_eventTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_eventTime
        in: query
        description: "If specified, only events with `eventTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `eventTime` (unless constrained by the `GE_eventTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_recordTime
        in: query
        description: "If provided, only events with `recordTime` greater than or equal\
          \ to the specified value will be returned. The automatic limitation based\
          \ on event record time (section 8.2.5.2) may implicitly provide a constraint\
          \ similar to this parameter. If omitted, events are included regardless\
          \ of their `recordTime`, other than automatic limitation based on event\
          \ record time"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_recordTime
        in: query
        description: "If provided, only events with `recordTime` less than the specified\
          \ value will be returned. If omitted, events are included regardless of\
          \ their `recordTime` (unless constrained by the `GE_recordTime` parameter\
          \ or the automatic limitation based on event record time)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_action
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ an `action` field; and where (b) the value of the `action` field matches\
          \ one of the specified values. The properties of the value of this parameter\
          \ each must be one of the strings `ADD`, `OBSERVE`, or `DELETE`; if not,\
          \ the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ events are included regardless of their `action` field."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADD
            - OBSERVE
            - DELETE
        example: OBSERVE
      - name: EQ_bizStep
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizStep` field; and where (b) the value of the `bizStep` field\
          \ matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/BizStep\"\
          \ target=\"_blank\">CBV BizStep</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `shipping`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `bizStep` field or whether the `bizStep` field exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/bizStep'
        example: shipping
      - name: EQ_disposition
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `disposition` field; and where (b) the value of the `disposition`\
          \ field matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `disposition` field or whether the `disposition` field\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_set
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `set` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `set` field within `persistentDisposition` field or\
          \ whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_unset
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `unset` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `unset` field within `persistentDisposition` field\
          \ or whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: WD_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_readPoint` are both\
          \ omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs. If this parameter and `WD_bizLocation`\
          \ are both omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_bizLocation` are both\
          \ omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_transformationID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `transformationID` field (that is, `TransformationEvent`s\
          \ or extension event type that extend `TransformationEvent`); and where\
          \ (b) the `transformationID` field is equal to one of the values specified\
          \ in this parameter."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: MATCH_epc
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` or a `childEPCs` field (that is, `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPCs listed in the `epcList` or `childEPCs` field (depending on event\
          \ type) matches one of the URIs specified in this parameter, where the meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1.  If this parameter\
          \ is omitted, events are included regardless of their `epcList` or `childEPCs`\
          \ field or whether the `epcList` or `childEPCs` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_parentID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `parentID` field (that is, `AggregationEvent`,\
          \ `TransactionEvent`, `AssociationEvent` or extension event types that extend\
          \ one of those event types); and where (b) one of the EPCs listed in the\
          \ `parentID` field matches one of the URIs specified in this parameter,\
          \ where the meaning of 'matches' is as specified in section 8.2.7.1.1. \
          \ If this parameter is omitted, events are included regardless of their\
          \ `parentID` field or whether the `parentID` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `inputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `inputEPCList` field or whether the `inputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `outputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `outputEPCList` field or whether the `outputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` field, a `childEPCs` field, a `parentID`\
          \ field, an `inputEPCList` field, or an `outputEPCList` field (that is,\
          \ `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `TransformationEvent`,\
          \ `AssociationEvent` or extension event types that extend one of those event\
          \ types); and where (b) the `parentID` field or one of the EPCs listed in\
          \ the `epcList`, `childEPCs`, `inputEPCList`, or `outputEPCList` field (depending\
          \ on event type) matches one of URIs specified in this parameter. The meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_epcClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList` or a `childQuantityList` field (that\
          \ is, `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `AssociationEvent`\
          \ or extension event types that extend one of those event types); and where\
          \ (b) one of the EPC classes listed in the `quantityList` or `childQuantityList`\
          \ field (depending on event type) matches one of the EPC patterns or URIs\
          \ specified in this parameter. The result will also include QuantityEvents\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `inputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `outputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList`, `childQuantityList`, `inputQuantityList`,\
          \ or `outputQuantityList` field (that is, `ObjectEvent`, `AggregationEvent`,\
          \ `TransactionEvent`, `TransformationEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPC classes listed in any of those fields matches one of the EPC patterns\
          \ or URIs specified in this parameter. The result will also include `QuantityEvent`s\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: EQ_eventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a non-null `eventID` field; and where (b) the `eventID`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of the value of the\
          \ `eventID` field or whether the `eventID` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EXISTS_errorDeclaration
        in: query
        description: "If this parameter is specified (and has a value of true), the\
          \ result will only include events that contain an `ErrorDeclaration`. If\
          \ this parameter is omitted (or has a value of false), events are returned\
          \ regardless of whether they contain an `ErrorDeclaration`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: GE_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is greater than or equal to the specified\
          \ value. If this parameter is omitted, events are returned regardless of\
          \ whether they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is less than to the specified value.\
          \ If this parameter is omitted, events are returned regardless of whether\
          \ they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_errorReason
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the error\
          \ declaration contains a non-null `reason` field; and where (c) the `reason`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of whether they contain\
          \ an `ErrorDeclaration` or what the value of the `reason` field is."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/error-reason'
      - name: EQ_correctiveEventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) one of the\
          \ elements of the `correctiveEventIDs` list is equal to one of the values\
          \ specified in this parameter. If this parameter is omitted, events are\
          \ returned regardless of whether they contain an `ErrorDeclaration` or the\
          \ contents of the `correctiveEventIDs` list."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: orderBy
        in: query
        description: "If specified, names a single field that will be used to order\
          \ the results. The `orderDirection` field specifies whether the ordering\
          \ is in ascending sequence or descending sequence. Events included in the\
          \ result that lack the specified field altogether may occur in any position\
          \ within the result event list. The value of this parameter SHALL be one\
          \ of: `eventTime`, `recordTime`, or the fully qualified name of an extension\
          \ field whose type is Int, Float, Time, or String. A fully qualified fieldname\
          \ is constructed as for the `EQ_fieldname` parameter. In the case of a field\
          \ of type String, sorting SHALL be according to their case-sensitive lexical\
          \ ordering, considering UTF-8/ASCII code values of each successive character.\
          \ If omitted, no order is specified. The implementation MAY order the results\
          \ in any order it chooses, and that order MAY differ even when the same\
          \ query is executed twice on the same data. (In EPCIS 1.0, the value `quantity`\
          \ was also permitted, but its use is deprecated in EPCIS 1.1.)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderDirection
        in: query
        description: "If specified and `orderBy` is also specified, specifies whether\
          \ the results are ordered in ascending or descending sequence according\
          \ to the key specified by `orderBy`. The value of this parameter must be\
          \ one of `ASC` (for ascending order) or `DESC` (for descending order); if\
          \ not, the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ defaults to `DESC`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: eventCountLimit
        in: query
        description: "If specified, the results will only include the first N events\
          \ that match the other criteria, where N is the value of this parameter.\
          \ The ordering specified by the `orderBy` and `orderDirection` parameters\
          \ determine the meaning of “first” for this purpose. If omitted, all events\
          \ matching the specified criteria will be included in the results. This\
          \ parameter and `maxEventCount` are mutually exclusive; if both are specified,\
          \ a `QueryParameterException` SHALL be raised. This parameter may only be\
          \ used when `orderBy` is specified; if `orderBy` is omitted and `eventCountLimit`\
          \ is specified, a `QueryParameterException` SHALL be raised. This parameter\
          \ differs from `maxEventCount` in that this parameter limits the amount\
          \ of data returned, whereas `maxEventCount` causes an exception to be thrown\
          \ if the limit is exceeded. Explanation (non-normative): A common use of\
          \ the `orderBy`, `orderDirection`, and `eventCountLimit` parameters is for\
          \ extremal queries. For example, to select the most recent event matching\
          \ some criteria, the query would include parameters that select events matching\
          \ the desired criteria, and set `orderBy` to `eventTime`, `orderDirection`\
          \ to `DESC`, and `eventCountLimit` to 1."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: maxEventCount
        in: query
        description: "If specified, at most this many events will be included in the\
          \ query result. If the query would otherwise return more than this number\
          \ of events, a `QueryTooLargeException` SHALL be raised instead of a normal\
          \ query result. This parameter and `eventCountLimit` are mutually exclusive;\
          \ if both are specified, a `QueryParameterException` SHALL be raised. If\
          \ this parameter is omitted, any number of events may be included in the\
          \ query result. Note, however, that the EPCIS implementation is free to\
          \ raise a `QueryTooLargeException` regardless of the setting of this parameter\
          \ (see section 8.2.3)."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: GE_startTime
        in: query
        description: "If specified, only events with `startTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `startTime` (unless constrained by the\
          \ `LT_startTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_startTime
        in: query
        description: "If specified, only events with `startTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `startTime` (unless constrained by the `GE_startTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_endTime
        in: query
        description: "If specified, only events with `endTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `endTime` (unless constrained by the\
          \ `LT_endTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_endTime
        in: query
        description: "If specified, only events with `endTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `endTime` (unless constrained by the `GE_endTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_type
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate one or more `sensorElement` fields; and where\
          \ (b) the `type` attribute in one of these `sensorElement` fields is equal\
          \ to one of the values specified in this parameter. If this parameter is\
          \ omitted, events are returned regardless of the value of the `type` attribute\
          \ or whether a `sensorElement` field exists at all. Standard values for\
          \ `type` are defined at <a href=\"https://gs1.org/voc/MeasurementType\"\
          \ target=\"_blank\">https://gs1.org/voc/MeasurementType</a>.  Standard values\
          \ SHALL be expressed as bare words, e.g. `Temperature`."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/measurementType'
        example: Temperature
      - name: EQ_deviceID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `deviceID` attribute; and where (b) the\
          \ `deviceID` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `deviceID` attribute or whether the `deviceID` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_dataProcessingMethod
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `dataProcessingMethod` attribute; and where\
          \ (b) the `dataProcessingMethod` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `dataProcessingMethod` attribute or whether the `dataProcessingMethod`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_microorganism
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `microorganism` attribute; and where (b)\
          \ the `microorganism` attribute is equal to one of the URIs specified in\
          \ this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `microorganism` attribute or whether the `microorganism`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_chemicalSubstance
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `chemicalSubstance` attribute; and where\
          \ (b) the `chemicalSubstance` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `chemicalSubstance` attribute or whether the `chemicalSubstance`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_bizRules
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `bizRules` attribute; and where (b) the\
          \ `bizRules` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `bizRules` attribute or whether the `bizRules` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_stringValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `stringValue` attribute; and where (b) the\
          \ `stringValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `stringValue` attribute or whether the `stringValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_hexBinaryValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `hexBinaryValue` attribute; and where (b)\
          \ the `hexBinaryValue` attribute is equal to one of the strings specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `hexBinaryValue` attribute or whether the `hexBinaryValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_uriValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `uriValue` attribute; and where (b) the\
          \ `uriValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `uriValue` attribute or whether the `uriValue` attribute\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_booleanValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `booleanValue` attribute; and where (b)\
          \ the `booleanValue` attribute is equal to the specified value (i.e. `true`\
          \ or `false`). If this parameter is omitted, events are returned regardless\
          \ of the value of the `booleanValue` attribute or whether the `booleanValue`\
          \ attribute exists at all"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Contains EPCIS events.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epcisQueryDocument'
              example:
                '@context':
                - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                - example: http://ns.example.com/epcis/
                id: https://id.example.org/document1
                type: EPCISQueryDocument
                schemaVersion: "2.0"
                creationDate: 2005-07-11T11:30:47.0Z
                epcisBody:
                  queryResults:
                    subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                    queryName: SimpleEventQuery
                    resultsBody:
                      eventList:
                      - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: shipping
                        disposition: in_transit
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2017
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-03T20:33:31.116000-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0614141.07346.1234
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                      - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: receiving
                        disposition: in_progress
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-04T20:33:31.116-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0012345.11111.400
                        bizLocation:
                          id: urn:epc:id:sgln:0012345.11111.0
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                        - type: desadv
                          bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                        example:myField: Example of a vendor/user extension
            application/xml:
              schema:
                $ref: '#/components/schemas/EPCISXMLQueryDocument'
              example: "<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:2\"\
                \r\n\txmlns:cbvmda=\"urn:epcglobal:cbv:mda\" schemaVersion=\"2.0\"\
                \ creationDate=\"2020-06-28T13:41:00.000Z\">\r\n\t<EPCISBody>\r\n\t\
                \t<EventList>\r\n\t\t\t<!-- INFERENCE example with COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-07T17:10:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>OBSERVE</action>\r\n\t\t\
                \t\t<bizStep>urn:epcglobal:cbv:bizstep:receiving</bizStep>\r\n\t\t\
                \t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
                \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_inferred</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t\t<!-- UNPACKING event with VERIFICATION of COMPLETENESS -->\r\
                \n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-08T18:11:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>DELETE</action>\r\n\t\t\t\
                \t<bizStep>urn:epcglobal:cbv:bizstep:unpacking</bizStep>\r\n\t\t\t\
                \t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\n\
                \t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS VERIFIED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<unset>urn:epcglobal:cbv:disp:completeness_inferred</unset>\r\
                \n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_verified</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t</EventList>\r\n\t</EPCISBody>\r\n</epcis:EPCISDocument>\r\n"
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Events
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint to access EPCIS events by read point.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: readPointsReadPointEventsOPTIONS
      parameters:
      - name: readPoint
        in: path
        description: A read point value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /dispositions:
    get:
      tags:
      - Top-level
      summary: Returns known dispositions.
      description: |
        This endpoint returns the CBV standard dispositions as well as any custom dispositions supported by this repository.
      operationId: dispositionsGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      responses:
        "200":
          description: |
            Returns a list of dispositions. If there are more dispositions than specified by the
            `perPage` parameter, the client will be given the URL to retrieve more dispositions in the `Link` header.
            If the client specifies extension mappings, the response will use them where they match. Otherwise,
            the full resource address is used.
          headers:
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispositionCollection'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query the metadata related to the dispositions endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: dispositionsOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /dispositions/{disposition}:
    get:
      tags:
      - Top-level
      summary: Returns all sub-resources of a disposition.
      description: |
        This endpoint returns all sub-resources of a disposition (for HATEOAS discovery), which includes at least `events`.
      operationId: dispositionsDispositionGET
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: disposition
        in: path
        description: A disposition value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: in_progress
      responses:
        "200":
          description: Returns a sub-resource list that contains at least the `events`
            sub-resource (for HATEOAS discovery).
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCollection'
              example:
                '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                type: Collection
                member:
                - events
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: TopLevel
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint to access an individual disposition.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: dispositionsDispositionOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: disposition
        in: path
        description: A disposition value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: in_progress
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /dispositions/{disposition}/events:
    get:
      tags:
      - Events
      summary: Returns all EPCIS events related to the disposition.
      description: |
        This endpoint helps to navigate EPCIS events by dispositions. It returns
        EPCIS events up to the amount defined in `perPage`. The server returns a `Link` header to point to the remaining
        results.
        Optionally, EPCIS events can be further filtered using the EPCIS Query Language as query string parameters.
        Example:
        ```
        https://example.com/dispositions/in_progress?GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00
        ```
        An EPCIS 2.0 query may also be expressed via the URI query string.  The query parameters with fixed fieldnames are included in this OpenAPI interface.  However, this list is not exhaustive and the EPCIS 2.0 standard defines additional query parameters with flexible names, depending on the specific value of `uom`, `type` or `fieldname` that appears within the name of the parameter.
      operationId: dispositionsDispositionEventsGET
      parameters:
      - name: disposition
        in: path
        description: A disposition value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: in_progress
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      - name: eventType
        in: query
        description: "If specified, the result will only include events whose `type`\
          \ matches one of the types specified in the parameter value. Each element\
          \ of the parameter value may be one of the following strings: `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `TransformationEvent` or `AssociationEvent`.\
          \ An element of the parameter value may also be the name of an extension\
          \ event type. If omitted, all event types will be considered for inclusion\
          \ in the result."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/EPCISEventTypes'
        example: ObjectEvent
      - name: GE_eventTime
        in: query
        description: "If specified, only events with `eventTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `eventTime` (unless constrained by the\
          \ `LT_eventTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_eventTime
        in: query
        description: "If specified, only events with `eventTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `eventTime` (unless constrained by the `GE_eventTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_recordTime
        in: query
        description: "If provided, only events with `recordTime` greater than or equal\
          \ to the specified value will be returned. The automatic limitation based\
          \ on event record time (section 8.2.5.2) may implicitly provide a constraint\
          \ similar to this parameter. If omitted, events are included regardless\
          \ of their `recordTime`, other than automatic limitation based on event\
          \ record time"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_recordTime
        in: query
        description: "If provided, only events with `recordTime` less than the specified\
          \ value will be returned. If omitted, events are included regardless of\
          \ their `recordTime` (unless constrained by the `GE_recordTime` parameter\
          \ or the automatic limitation based on event record time)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_action
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ an `action` field; and where (b) the value of the `action` field matches\
          \ one of the specified values. The properties of the value of this parameter\
          \ each must be one of the strings `ADD`, `OBSERVE`, or `DELETE`; if not,\
          \ the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ events are included regardless of their `action` field."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADD
            - OBSERVE
            - DELETE
        example: OBSERVE
      - name: EQ_bizStep
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizStep` field; and where (b) the value of the `bizStep` field\
          \ matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/BizStep\"\
          \ target=\"_blank\">CBV BizStep</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `shipping`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `bizStep` field or whether the `bizStep` field exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/bizStep'
        example: shipping
      - name: EQ_disposition
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `disposition` field; and where (b) the value of the `disposition`\
          \ field matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `disposition` field or whether the `disposition` field\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_set
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `set` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `set` field within `persistentDisposition` field or\
          \ whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_persistentDisposition_unset
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `persistentDisposition` field; and where (b) the value of the\
          \ `unset` field within the value of the `persistentDisposition` field matches\
          \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
          \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
          \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
          \ should be expressed as URIs or CURIEs for which the namespace prefix is\
          \ defined. If this parameter is omitted, events are returned regardless\
          \ of the value of the `unset` field within `persistentDisposition` field\
          \ or whether the `persistentDisposition` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/disposition'
        example: in_transit
      - name: EQ_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs. If this parameter and `WD_readPoint`\
          \ are both omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_readPoint
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_readPoint` are both\
          \ omitted, events are returned regardless of the value of the `readPoint`\
          \ field or whether the `readPoint` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs. If this parameter and `WD_bizLocation`\
          \ are both omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: WD_bizLocation
        in: query
        description: "If specified, the result will only include events that (a) have\
          \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
          \ field matches one of the specified URIs, or is a direct or indirect descendant\
          \ of one of the specified values. The meaning of 'direct or indirect descendant'\
          \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
          \ for 'with descendants.') If this parameter and `EQ_bizLocation` are both\
          \ omitted, events are returned regardless of the value of the `bizLocation`\
          \ field or whether the `bizLocation` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
        example: urn:epc:id:sgln:0012345.11111.400
      - name: EQ_transformationID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `transformationID` field (that is, `TransformationEvent`s\
          \ or extension event type that extend `TransformationEvent`); and where\
          \ (b) the `transformationID` field is equal to one of the values specified\
          \ in this parameter."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: MATCH_epc
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` or a `childEPCs` field (that is, `ObjectEvent`,\
          \ `AggregationEvent`, `TransactionEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPCs listed in the `epcList` or `childEPCs` field (depending on event\
          \ type) matches one of the URIs specified in this parameter, where the meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1.  If this parameter\
          \ is omitted, events are included regardless of their `epcList` or `childEPCs`\
          \ field or whether the `epcList` or `childEPCs` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_parentID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `parentID` field (that is, `AggregationEvent`,\
          \ `TransactionEvent`, `AssociationEvent` or extension event types that extend\
          \ one of those event types); and where (b) one of the EPCs listed in the\
          \ `parentID` field matches one of the URIs specified in this parameter,\
          \ where the meaning of 'matches' is as specified in section 8.2.7.1.1. \
          \ If this parameter is omitted, events are included regardless of their\
          \ `parentID` field or whether the `parentID` field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `inputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `inputEPCList` field or whether the `inputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputEPCList` (that is, `TransformationEvent`\
          \ or an extension event type that extends `TransformationEvent`); and where\
          \ (b) one of the EPCs listed in the `outputEPCList` field matches one of\
          \ the URIs specified in this parameter. The meaning of 'matches' is as specified\
          \ in section 8.2.7.1.1. If this parameter is omitted, events are included\
          \ regardless of their `outputEPCList` field or whether the `outputEPCList`\
          \ field exists."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPC
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `epcList` field, a `childEPCs` field, a `parentID`\
          \ field, an `inputEPCList` field, or an `outputEPCList` field (that is,\
          \ `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `TransformationEvent`,\
          \ `AssociationEvent` or extension event types that extend one of those event\
          \ types); and where (b) the `parentID` field or one of the EPCs listed in\
          \ the `epcList`, `childEPCs`, `inputEPCList`, or `outputEPCList` field (depending\
          \ on event type) matches one of URIs specified in this parameter. The meaning\
          \ of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_epcClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList` or a `childQuantityList` field (that\
          \ is, `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `AssociationEvent`\
          \ or extension event types that extend one of those event types); and where\
          \ (b) one of the EPC classes listed in the `quantityList` or `childQuantityList`\
          \ field (depending on event type) matches one of the EPC patterns or URIs\
          \ specified in this parameter. The result will also include QuantityEvents\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_inputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `inputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `inputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_outputEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have an `outputQuantityList` field (that is, `TransformationEvent`\
          \ or extension event types that extend it); and where (b) one of the EPC\
          \ classes listed in the `outputQuantityList` field (depending on event type)\
          \ matches one of the EPC patterns or URIs specified in this parameter. The\
          \ meaning of 'matches' is as specified in section 8.2.7.1.1"
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: MATCH_anyEPCClass
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a `quantityList`, `childQuantityList`, `inputQuantityList`,\
          \ or `outputQuantityList` field (that is, `ObjectEvent`, `AggregationEvent`,\
          \ `TransactionEvent`, `TransformationEvent`, `AssociationEvent` or extension\
          \ event types that extend one of those event types); and where (b) one of\
          \ the EPC classes listed in any of those fields matches one of the EPC patterns\
          \ or URIs specified in this parameter. The result will also include `QuantityEvent`s\
          \ whose `epcClass` field matches one of the URIs specified in this parameter.\
          \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: GE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is greater than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LT_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: LE_quantity
        in: query
        description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this\
          \ parameter is specified, the result will only include events that (a) have\
          \ a `quantity` field as part of a `QuantityElement`; and where (b) the `quantity`\
          \ field is less than or equal to the specified parameter."
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: EQ_eventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) have a non-null `eventID` field; and where (b) the `eventID`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of the value of the\
          \ `eventID` field or whether the `eventID` field exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EXISTS_errorDeclaration
        in: query
        description: "If this parameter is specified (and has a value of true), the\
          \ result will only include events that contain an `ErrorDeclaration`. If\
          \ this parameter is omitted (or has a value of false), events are returned\
          \ regardless of whether they contain an `ErrorDeclaration`."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: GE_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is greater than or equal to the specified\
          \ value. If this parameter is omitted, events are returned regardless of\
          \ whether they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_errorDeclarationTime
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the value\
          \ of the `errorDeclarationTime` field is less than to the specified value.\
          \ If this parameter is omitted, events are returned regardless of whether\
          \ they contain an `ErrorDeclaration` or what the value of the `errorDeclarationTime`\
          \ field is."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_errorReason
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) the error\
          \ declaration contains a non-null `reason` field; and where (c) the `reason`\
          \ field is equal to one of the values specified in this parameter. If this\
          \ parameter is omitted, events are returned regardless of whether they contain\
          \ an `ErrorDeclaration` or what the value of the `reason` field is."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/error-reason'
      - name: EQ_correctiveEventID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) contain an `ErrorDeclaration`; and where (b) one of the\
          \ elements of the `correctiveEventIDs` list is equal to one of the values\
          \ specified in this parameter. If this parameter is omitted, events are\
          \ returned regardless of whether they contain an `ErrorDeclaration` or the\
          \ contents of the `correctiveEventIDs` list."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: orderBy
        in: query
        description: "If specified, names a single field that will be used to order\
          \ the results. The `orderDirection` field specifies whether the ordering\
          \ is in ascending sequence or descending sequence. Events included in the\
          \ result that lack the specified field altogether may occur in any position\
          \ within the result event list. The value of this parameter SHALL be one\
          \ of: `eventTime`, `recordTime`, or the fully qualified name of an extension\
          \ field whose type is Int, Float, Time, or String. A fully qualified fieldname\
          \ is constructed as for the `EQ_fieldname` parameter. In the case of a field\
          \ of type String, sorting SHALL be according to their case-sensitive lexical\
          \ ordering, considering UTF-8/ASCII code values of each successive character.\
          \ If omitted, no order is specified. The implementation MAY order the results\
          \ in any order it chooses, and that order MAY differ even when the same\
          \ query is executed twice on the same data. (In EPCIS 1.0, the value `quantity`\
          \ was also permitted, but its use is deprecated in EPCIS 1.1.)"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderDirection
        in: query
        description: "If specified and `orderBy` is also specified, specifies whether\
          \ the results are ordered in ascending or descending sequence according\
          \ to the key specified by `orderBy`. The value of this parameter must be\
          \ one of `ASC` (for ascending order) or `DESC` (for descending order); if\
          \ not, the implementation SHALL raise a `QueryParameterException`. If omitted,\
          \ defaults to `DESC`."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: eventCountLimit
        in: query
        description: "If specified, the results will only include the first N events\
          \ that match the other criteria, where N is the value of this parameter.\
          \ The ordering specified by the `orderBy` and `orderDirection` parameters\
          \ determine the meaning of “first” for this purpose. If omitted, all events\
          \ matching the specified criteria will be included in the results. This\
          \ parameter and `maxEventCount` are mutually exclusive; if both are specified,\
          \ a `QueryParameterException` SHALL be raised. This parameter may only be\
          \ used when `orderBy` is specified; if `orderBy` is omitted and `eventCountLimit`\
          \ is specified, a `QueryParameterException` SHALL be raised. This parameter\
          \ differs from `maxEventCount` in that this parameter limits the amount\
          \ of data returned, whereas `maxEventCount` causes an exception to be thrown\
          \ if the limit is exceeded. Explanation (non-normative): A common use of\
          \ the `orderBy`, `orderDirection`, and `eventCountLimit` parameters is for\
          \ extremal queries. For example, to select the most recent event matching\
          \ some criteria, the query would include parameters that select events matching\
          \ the desired criteria, and set `orderBy` to `eventTime`, `orderDirection`\
          \ to `DESC`, and `eventCountLimit` to 1."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: maxEventCount
        in: query
        description: "If specified, at most this many events will be included in the\
          \ query result. If the query would otherwise return more than this number\
          \ of events, a `QueryTooLargeException` SHALL be raised instead of a normal\
          \ query result. This parameter and `eventCountLimit` are mutually exclusive;\
          \ if both are specified, a `QueryParameterException` SHALL be raised. If\
          \ this parameter is omitted, any number of events may be included in the\
          \ query result. Note, however, that the EPCIS implementation is free to\
          \ raise a `QueryTooLargeException` regardless of the setting of this parameter\
          \ (see section 8.2.3)."
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: GE_startTime
        in: query
        description: "If specified, only events with `startTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `startTime` (unless constrained by the\
          \ `LT_startTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_startTime
        in: query
        description: "If specified, only events with `startTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `startTime` (unless constrained by the `GE_startTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: GE_endTime
        in: query
        description: "If specified, only events with `endTime` greater than or equal\
          \ to the specified value will be included in the result. If omitted, events\
          \ are included regardless of their `endTime` (unless constrained by the\
          \ `LT_endTime` parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: LT_endTime
        in: query
        description: "If specified, only events with `endTime` less than the specified\
          \ value will be included in the result. If omitted, events are included\
          \ regardless of their `endTime` (unless constrained by the `GE_endTime`\
          \ parameter)."
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-06-30T00:15:47.000-05:00
      - name: EQ_type
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate one or more `sensorElement` fields; and where\
          \ (b) the `type` attribute in one of these `sensorElement` fields is equal\
          \ to one of the values specified in this parameter. If this parameter is\
          \ omitted, events are returned regardless of the value of the `type` attribute\
          \ or whether a `sensorElement` field exists at all. Standard values for\
          \ `type` are defined at <a href=\"https://gs1.org/voc/MeasurementType\"\
          \ target=\"_blank\">https://gs1.org/voc/MeasurementType</a>.  Standard values\
          \ SHALL be expressed as bare words, e.g. `Temperature`."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/measurementType'
        example: Temperature
      - name: EQ_deviceID
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `deviceID` attribute; and where (b) the\
          \ `deviceID` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `deviceID` attribute or whether the `deviceID` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_dataProcessingMethod
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `dataProcessingMethod` attribute; and where\
          \ (b) the `dataProcessingMethod` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `dataProcessingMethod` attribute or whether the `dataProcessingMethod`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_microorganism
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `microorganism` attribute; and where (b)\
          \ the `microorganism` attribute is equal to one of the URIs specified in\
          \ this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `microorganism` attribute or whether the `microorganism`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_chemicalSubstance
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `chemicalSubstance` attribute; and where\
          \ (b) the `chemicalSubstance` attribute is equal to one of the URIs specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `chemicalSubstance` attribute or whether the `chemicalSubstance`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_bizRules
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `bizRules` attribute; and where (b) the\
          \ `bizRules` attribute is equal to one of the URIs specified in this parameter.\
          \ If this parameter is omitted, events are returned regardless of the value\
          \ of the `bizRules` attribute or whether the `bizRules` attribute exists\
          \ at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_stringValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `stringValue` attribute; and where (b) the\
          \ `stringValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `stringValue` attribute or whether the `stringValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_hexBinaryValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `hexBinaryValue` attribute; and where (b)\
          \ the `hexBinaryValue` attribute is equal to one of the strings specified\
          \ in this parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `hexBinaryValue` attribute or whether the `hexBinaryValue`\
          \ attribute exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
      - name: EQ_uriValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `uriValue` attribute; and where (b) the\
          \ `uriValue` attribute is equal to one of the strings specified in this\
          \ parameter. If this parameter is omitted, events are returned regardless\
          \ of the value of the `uriValue` attribute or whether the `uriValue` attribute\
          \ exists at all."
        required: false
        style: pipeDelimited
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uri
      - name: EQ_booleanValue
        in: query
        description: "If this parameter is specified, the result will only include\
          \ events that (a) accommodate a `booleanValue` attribute; and where (b)\
          \ the `booleanValue` attribute is equal to the specified value (i.e. `true`\
          \ or `false`). If this parameter is omitted, events are returned regardless\
          \ of the value of the `booleanValue` attribute or whether the `booleanValue`\
          \ attribute exists at all"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Contains EPCIS events.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epcisQueryDocument'
              example:
                '@context':
                - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                - example: http://ns.example.com/epcis/
                id: https://id.example.org/document1
                type: EPCISQueryDocument
                schemaVersion: "2.0"
                creationDate: 2005-07-11T11:30:47.0Z
                epcisBody:
                  queryResults:
                    subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                    queryName: SimpleEventQuery
                    resultsBody:
                      eventList:
                      - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: shipping
                        disposition: in_transit
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2017
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-03T20:33:31.116000-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0614141.07346.1234
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                      - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: receiving
                        disposition: in_progress
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-04T20:33:31.116-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0012345.11111.400
                        bizLocation:
                          id: urn:epc:id:sgln:0012345.11111.0
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                        - type: desadv
                          bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                        example:myField: Example of a vendor/user extension
            application/xml:
              schema:
                $ref: '#/components/schemas/EPCISXMLQueryDocument'
              example: "<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:2\"\
                \r\n\txmlns:cbvmda=\"urn:epcglobal:cbv:mda\" schemaVersion=\"2.0\"\
                \ creationDate=\"2020-06-28T13:41:00.000Z\">\r\n\t<EPCISBody>\r\n\t\
                \t<EventList>\r\n\t\t\t<!-- INFERENCE example with COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-07T17:10:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>OBSERVE</action>\r\n\t\t\
                \t\t<bizStep>urn:epcglobal:cbv:bizstep:receiving</bizStep>\r\n\t\t\
                \t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
                \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_inferred</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t\t<!-- UNPACKING event with VERIFICATION of COMPLETENESS -->\r\
                \n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-08T18:11:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>DELETE</action>\r\n\t\t\t\
                \t<bizStep>urn:epcglobal:cbv:bizstep:unpacking</bizStep>\r\n\t\t\t\
                \t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\n\
                \t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS VERIFIED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<unset>urn:epcglobal:cbv:disp:completeness_inferred</unset>\r\
                \n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_verified</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t</EventList>\r\n\t</EPCISBody>\r\n</epcis:EPCISDocument>\r\n"
        "400":
          description: Query exceptions defined in EPCIS.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Events
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint to access EPCIS events by disposition.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: dispositionsDispositionEventsOPTIONS
      parameters:
      - name: disposition
        in: path
        description: A disposition value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        example: in_progress
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /queries:
    get:
      tags:
      - Queries
      summary: Returns a list of queries available.
      description: |
        An endpoint to list named queries.
        This endpoint supports pagination.
      operationId: queriesGET
      parameters:
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      responses:
        "200":
          description: |
            Queries are like views that are created using the <a href="https://ref.gs1.org/standards/epcis/2.0.0/query-schema.json">EPCIS Query Language</a>. Each query object
            consists of a query name and the query definition.
            An EPCIS 2.0 query body using the REST interface SHALL be serialised as a JSON object. The value of the query key within that JSON object SHALL validate against the schema defined at:  https://ref.gs1.org/standards/epcis/2.0.0/query-schema.json.
            Performing a `GET` on `/queries` lists all existing queries.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                description: The query name.
                items:
                  allOf:
                  - required:
                    - name
                    type: object
                    properties:
                      name:
                        $ref: '#/components/schemas/QueryName'
                  - $ref: '#/components/schemas/QueryDefinition'
                x-content-type: application/json
              example: |
                [{
                  "query": {
                  "EQ_bizStep": [
                      "shipping",
                      "receiving"
                  ],
                  "eventType": ["ObjectEvent"]
                },
                "name": "myQuery"
                }]
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Queries
    post:
      tags:
      - Queries
      summary: |
        Creates a named EPCIS events query.
      description: |
        Creating a named query creates a view on the events in the repository, accessible through its events resource.
        To obtain the named query results, the client can use the URL in the `Location` header. The client can also use this URL to start a query subscription immediately after creating the query.
      operationId: queriesPOST
      parameters:
      - name: GS1-EPCIS-Version
        in: header
        description: |
          The EPCIS version.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Version'
      - name: GS1-CBV-Version
        in: header
        description: |
          The Core Business Vocabulary version.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Version'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      requestBody:
        $ref: '#/components/requestBodies/CreateQuery'
      responses:
        "201":
          description: Creates the named query.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Location:
              description: |
                Absolute or relative URL of the created query. The client can use the `Location` URL to obtain the named query definition.
              style: simple
              explode: false
              schema:
                minLength: 1
                type: string
                example: /queries/myQuery
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "409":
          description: |
            A resource with the provided identifier already exists. E.g., a named query or an event.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "415":
          description: |
            The client sent data in a format that is not supported by the server.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_415_1'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Queries
    options:
      tags:
      - Discovery
      summary: Query the metadata of the EPCIS queries endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: queriesOPTIONS
      parameters:
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET, POST"
                default: "OPTIONS, GET, POST"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /queries/{queryName}:
    get:
      tags:
      - Queries
      summary: Returns the query definition.
      operationId: queriesQueryNameGET
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "200":
          description: |
            Queries are like views that are created using the <a href="https://ref.gs1.org/standards/epcis/2.0.0/query-schema.json">EPCIS Query Language</a>. Each query object
            consists of a query name and the query definition.
            An EPCIS 2.0 query body using the REST interface SHALL be serialised as a JSON object. The value of the query key within that JSON object SHALL validate against the schema defined at:  https://ref.gs1.org/standards/epcis/2.0.0/query-schema.json.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - required:
                    - name
                    type: object
                    properties:
                      name:
                        type: string
                  - $ref: '#/components/schemas/QueryDefinition'
                x-content-type: application/json
              example:
                name: myQuery
                query:
                  EQ_bizStep:
                  - shipping
                  - receiving
                  eventType:
                  - ObjectEvent
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "413":
          description: Query result is too large.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_413_1'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_413_1'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Queries
    delete:
      tags:
      - Queries
      summary: "Removes a named query and forcibly unsubscribes all active subscriptions,\
        \ whether by WebSockets or Webhooks"
      operationId: queriesQueryNameDELETE
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      responses:
        "204":
          description: Query deleted and clients disconnected.
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Queries
    options:
      tags:
      - Discovery
      summary: Query the metadata of the named queries endpoint.
      description: |
        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions
        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV
        versions are used.
      operationId: queriesQueryNameOPTIONS
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET, DELETE"
                default: "OPTIONS, GET, DELETE"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /queries/{queryName}/subscriptions:
    get:
      tags:
      - Queries
      - Subscriptions
      summary: Returns active subscriptions with the option to use pagination if needed.
      description: |
        The `GET` endpoint is to list all active subscriptions on that query.
      operationId: queriesQueryNameSubscriptionsGET
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      responses:
        "200":
          description: Returns active subscriptions.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - $ref: '#/components/schemas/AbstractQuerySubscriptionResponse'
                  - oneOf:
                    - $ref: '#/components/schemas/QueryScheduleSubscription'
                    - $ref: '#/components/schemas/QueryStreamSubscription'
                x-content-type: application/json
              example:
              - subscriptionID: df5a33e3-5aa3-4403-ae01-99b83234e27b
                createdAt: 2017-08-21T17:32:28Z
                schedule:
                  hour: "1"
                  minute: "5"
              - subscriptionID: df5a33e3-5aa3-5504-bf12-88c94345f38c
                createdAt: 2017-07-21T17:32:28Z
                stream: true
        "400":
          description: An issue with a subscription occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_2'
            application/xml:
              schema:
                $ref: '#/components/schemas/inline_response_400_2'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Queries
    post:
      tags:
      - Queries
      - Subscriptions
      summary: Creates a query subscription.
      description: |
        EPCIS 2.0 implementations must support Webhook subscriptions.
        Creating a query subscription requires the client to provide a single endpoint to which the
        server will send events (as `EPCISQueryDocument`) and an optional string `signatureToken`.
        This `signatureToken` must be generated by the client and is used by the server to authenticate itself and sign messages when sending events. The signature must be contained on the `GS1-Signature` HTTP header of the server request.

        The choice of signature type is implementation specific but examples would be using HMAC with SHA-256 directly or a wrapper supporting various symmetric or asymetric
        cryptographic algorithms such as Json Web Signature (JWS).
        When the client subscribes to a query, it must either set `stream` to `true`, to be notified whenever a new EPCIS
        event matches the query, or the client must define a query schedule. If these are missing the query subscription is invalid because the server won't
        know when to notify a client.
        ## Scheduled query: Receive query results at 1.05am
        A scheduled query subscription is a time-based query execution. EPCIS 2.0 scheduled queries are scheduled
        in the same manner as cron jobs.
        For example, this query subscription is scheduled to trigger every morning at 1.05am. By setting
        `reportIfEmpty` to `true`, the client's callback URL (`dest`) will be called even if there are no new events that match
        the query.
        ```
        POST /queries/MyQuery/subscriptions
        {
          "dest": "https://client.example.com/queryCallback",
          "signatureToken": "13df38d8275b13f05704629e5f1cf3d45d6132d5",
          "reportIfEmpty": true,
          "schedule": {
            "hour":"1",
            "minute": "5"
          }
        }
        ```
        ## Streaming query subscription: Whenever a captured EPCIS event matches the query criteria
        If no query schedule is specified, the client must explicitly set `stream` to `true`. This restriction is to
        prevent clients from accidentally subscribing to EPCIS event streams.
        ```
        POST /queries/MyQuery/subscriptions
        {
          "dest": "https://client.example.com/queryCallback",
          "signatureToken": "13df38d8275b13f05704629e5f1cf3d45d6132d5",
          "stream": true
        }
        ```
      operationId: queriesQueryNameSubscriptionsPOST
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: GS1-EPCIS-Version
        in: header
        description: |
          The EPCIS version.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Version'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queryName_subscriptions_body'
            example:
              dest: https://client.example.com/queryCallback
              signatureToken: 13df38d8275b13f05704629e5f1cf3d45d6132d5
              schedule:
                hour: "1"
                minute: "5"
      responses:
        "201":
          description: Query subscription successful. The subscription is valid until
            the client unsubscribes.
          headers:
            Location:
              description: |
                The server creates a new subscription for each client and query subscription. The client needs that URL
                to unsubscribe by deleting this resource. The `Location` URL must point to the `subscriptionID` returned
                in the response body. Note that for security reasons the response should not
                return the secret.
              style: simple
              explode: false
              schema:
                type: string
                format: uri
                example: https://www.example.com/queries/MyQuery/subscriptions/df5a33e3-5aa3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "415":
          description: |
            The client sent data in a format that is not supported by the server.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_415'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_415_1'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      callbacks:
        querySubscriptionResults:
          '{$request.body#/dest}':
            post:
              summary: Callback invoked by the server to provide the query result
                to the client.
              parameters:
              - name: GS1-Signature
                in: header
                description: Header containing the signature of events sent by the
                  respository to a subscriber.
                required: false
                style: simple
                explode: false
                schema:
                  $ref: '#/components/schemas/GS1-Signature'
              requestBody:
                description: |
                  The server sends the query result to the client as a series of `EPCISQueryDocument`. There is no pagination for a `POST` request, the
                  server must either send each EPCIS event individually or group EPCIS events in manageable batches.
                  If an error occurs server-side, the server must send the error in the format that is already used for
                  returning `4xx` or `5xx` responses.
                content:
                  application/json:
                    schema:
                      oneOf:
                      - $ref: '#/components/schemas/epcisQueryDocument'
                      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
                required: true
              responses:
                "200":
                  description: Webhook successfully processed the server request.
                "401":
                  description: Authorization information is missing or invalid.
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/inline_response_401'
                    application/problem+xml:
                      schema:
                        $ref: '#/components/schemas/inline_response_401'
                "403":
                  description: Client is unauthorized to access this resource.
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/inline_response_403'
                    application/problem+xml:
                      schema:
                        $ref: '#/components/schemas/inline_response_403'
                "413":
                  description: |
                    The `POST` request is too large. The client can't handle a payload of this size at once and
                    asks the server to send EPCIS events in smaller batches.
                  content:
                    application/problem+json:
                      schema:
                        allOf:
                        - properties:
                            status:
                              type: integer
                              default: 413
                              enum:
                              - 413
                            type:
                              type: string
                              format: uri
                              enum:
                              - epcisException:QueryTooComplexException
                        - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
                "415":
                  description: |
                    The client sent data in a format that is not supported by the server.
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/inline_response_415'
                    application/problem+xml:
                      schema:
                        $ref: '#/components/schemas/inline_response_415_1'
      x-swagger-router-controller: Queries
    options:
      tags:
      - Discovery
      summary: Query the metadata of the subscriptions endpoint.
      description: |
        The `OPTIONS` method is used as a discovery service for query subscriptions.
      operationId: queriesQueryNameSubscriptionsOPTIONS
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET, POST"
                default: "OPTIONS, GET, POST"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /queries/{queryName}/subscriptions/{subscriptionID}:
    get:
      tags:
      - Queries
      - Subscriptions
      summary: Returns the details of a subscription. This method is useful to verify
        if a subscription is still active.
      operationId: queriesQueryNameSubscriptionsSubscriptionIDGET
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: subscriptionID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/subscriptionID'
        example: df5a33e3-5aa3-4403-ae01-99b83234e27b
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "200":
          description: |
            The `GET` method on a query subscription allows the client to get the details of an individual subscription.
          headers:
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
              example:
                subscriptionID: 7cec849f-72f7-4a9d-bc86-080d3c5b7c98
                queryName: GetIlmdExtension
                dest: http://example.com/testWebhookSubscription
                initialRecordTime: 2022-01-06T06:52:24.880Z
                reportIfEmpty: true
                schedule:
                  second: 0/30
                createdAt: 2022-01-06T06:52:24.889Z
                lastNotifiedAt: 2022-01-08T06:51:21.889Z
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Queries
    delete:
      tags:
      - Queries
      - Subscriptions
      summary: Unsubscribes a client by deleting the query subscription.
      operationId: unsubscribe
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: subscriptionID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/subscriptionID'
        example: df5a33e3-5aa3-4403-ae01-99b83234e27b
      responses:
        "204":
          description: Client unsubscribed from query.
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Queries
    options:
      tags:
      - Discovery
      summary: Query the metadata of the endpoint for an individual subscription.
      description: |
        The `OPTIONS` method is used to discover capabilities for a query subscription.
      operationId: queriesQueryNameSubscriptionsSubscriptionIDOPTIONS
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: subscriptionID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/subscriptionID'
        example: df5a33e3-5aa3-4403-ae01-99b83234e27b
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method returns information describing individual query subscriptions.
            The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, DELETE, GET"
                default: "OPTIONS, DELETE, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
            GS1-Query-Min-Record-Time:
              $ref: '#/components/headers/GS1-Query-Min-Record-Time'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /queries/{queryName}/events:
    get:
      tags:
      - Queries
      - Events
      summary: |
        Returns EPCIS events with the option to use pagination if needed. This endpoint supports query subscriptions
        using WebSockets.
      description: |
        The `GET` endpoint  is to retrieve results of a named query.
        Furthermore, this endpoint can also be used to subscribe to queries using Websocket. To do this, the client
        must specify the query schedule or set the `stream` parameter to `true` as a URL query string parameter. Please
        note that scheduling parameters and the `stream` parameter are mutually exclusive.
        ## Scheduled query: Receive query results at 1.05am
        Handshake from client for scheduled query:
        ```
        GET https://example.com/queries/MyQuery/events?minute=5&hour=1
        Host: example.com
        Upgrade: websocket
        Connection: Upgrade
        ```
        Handshake from the server:
        ```
        HTTP/1.1 101 Switching Protocols
        Upgrade: websocket
        Connection: Upgrade
        ```
        ## Streaming query subscription: Whenever a captured EPCIS event matches the query criteria
        Handshake from client for streaming:
        ```
        GET https://example.com/queries/MyQuery/events?stream=true
        Host: example.com
        Upgrade: websocket
        Connection: Upgrade
        ```
        Handshake from the server:
        ```
        HTTP/1.1 101 Switching Protocols
        Upgrade: websocket
        Connection: Upgrade
        ```
      operationId: queriesQueryNameEventsGET
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      - name: Upgrade
        in: header
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Upgrade'
      - name: Connection
        in: header
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Connection'
      - name: reportIfEmpty
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Query-ReportIfEmpty'
      - name: initialRecordTime
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Query-InitialRecordTime'
      - name: second
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Query-Second'
      - name: minute
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Query-Minute'
      - name: hour
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Query-Hour'
      - name: dayOfMonth
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Query-DayOfMonth'
      - name: month
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Query-Month'
      - name: dayOfWeek
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Query-DayOfWeek'
      - name: stream
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Query-Stream'
      - name: nextPageToken
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NextPageToken'
      - name: perPage
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PerPage'
      - name: GS1-CBV-Min
        in: header
        description: |
          The lowest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Min'
      - name: GS1-CBV-Max
        in: header
        description: |
          The highest Core Business Vocabulary version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-Max'
      - name: GS1-EPCIS-Min
        in: header
        description: |
          The lowest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Min'
      - name: GS1-EPCIS-Max
        in: header
        description: The highest EPCIS version supported.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPCIS-Max'
      - name: GS1-EPC-Format
        in: header
        description: |
          Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
          It is also used by the server to announce which EPC formats are supported.
          If absent the default value is `Always_GS1_Digital_Link`:
           - No_Preference: No preference in the representation, i.e. any format is accepted.
           - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
           - Always_EPC_URN: URIs are returned as URN.
           - Never_Translates: EPCs are never translated, i.e. the original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-EPC-Format'
      - name: GS1-CBV-XML-Format
        in: header
        description: |
          When requesting XML content-type only, users can use this header to request
          receiving events with CBV values in either URN or Web URI format.
          This option is not available for JSON/JSON-LD.
          - No_Preference: The server chooses the representation.
          - Always_Web_URI: CBV values are returned as Web URI.
          - Always_URN: CBV values are returned as URNs.
          - Never_Translates: The original format is kept.
        required: false
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/GS1-CBV-XML-Format'
      responses:
        "101":
          description: |
            Create a WebSocket connection to subscribe to queries. Upon subscription, the server SHALL send all new events
            to subscribing clients. If multiple clients have the same query, each client will receive events which they are
            authorized to see.
          headers:
            Upgrade:
              required: true
              style: simple
              explode: false
              schema:
                type: string
                default: websocket
            Connection:
              required: true
              style: simple
              explode: false
              schema:
                type: string
                default: upgrade
            GS1-Query-Min-Record-Time:
              required: false
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/GS1-Query-Min-Record-Time'
        "200":
          description: Contains EPCIS events.
          headers:
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            Link:
              $ref: '#/components/headers/Link'
            GS1-Next-Page-Token-Expires:
              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epcisQueryDocument'
              example:
                '@context':
                - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
                - example: http://ns.example.com/epcis/
                id: https://id.example.org/document1
                type: EPCISQueryDocument
                schemaVersion: "2.0"
                creationDate: 2005-07-11T11:30:47.0Z
                epcisBody:
                  queryResults:
                    subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                    queryName: SimpleEventQuery
                    resultsBody:
                      eventList:
                      - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: shipping
                        disposition: in_transit
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2017
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-03T20:33:31.116000-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0614141.07346.1234
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                      - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                        type: ObjectEvent
                        action: OBSERVE
                        bizStep: receiving
                        disposition: in_progress
                        epcList:
                        - urn:epc:id:sgtin:0614141.107346.2018
                        eventTime: 2005-04-04T20:33:31.116-06:00
                        eventTimeZoneOffset: -06:00
                        readPoint:
                          id: urn:epc:id:sgln:0012345.11111.400
                        bizLocation:
                          id: urn:epc:id:sgln:0012345.11111.0
                        bizTransactionList:
                        - type: po
                          bizTransaction: http://transaction.acme.com/po/12345678
                        - type: desadv
                          bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                        example:myField: Example of a vendor/user extension
            application/xml:
              schema:
                $ref: '#/components/schemas/EPCISXMLQueryDocument'
              example: "<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:2\"\
                \r\n\txmlns:cbvmda=\"urn:epcglobal:cbv:mda\" schemaVersion=\"2.0\"\
                \ creationDate=\"2020-06-28T13:41:00.000Z\">\r\n\t<EPCISBody>\r\n\t\
                \t<EventList>\r\n\t\t\t<!-- INFERENCE example with COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-07T17:10:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>OBSERVE</action>\r\n\t\t\
                \t\t<bizStep>urn:epcglobal:cbv:bizstep:receiving</bizStep>\r\n\t\t\
                \t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
                \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS INFERRED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_inferred</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t\t<!-- UNPACKING event with VERIFICATION of COMPLETENESS -->\r\
                \n\t\t\t<AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-08T18:11:16Z</eventTime>\r\
                \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\
                \t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
                \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
                \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\
                \n\t\t\t\t</childEPCs>\r\n\t\t\t\t<action>DELETE</action>\r\n\t\t\t\
                \t<bizStep>urn:epcglobal:cbv:bizstep:unpacking</bizStep>\r\n\t\t\t\
                \t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\n\
                \t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
                \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\
                \t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
                \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
                \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
                >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\
                \t\t\t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t\
                <source type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
                \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t\
                <destination type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
                \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS VERIFIED\
                \ -->\r\n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<unset>urn:epcglobal:cbv:disp:completeness_inferred</unset>\r\
                \n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_verified</set>\r\
                \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\
                \t\t</EventList>\r\n\t</EPCISBody>\r\n</epcis:EPCISDocument>\r\n"
        "400":
          description: An issue with a subscription occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_2'
            application/xml:
              schema:
                $ref: '#/components/schemas/inline_response_400_2'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "413":
          description: Query result is too large.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_413_1'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_413_1'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Queries
    options:
      tags:
      - Discovery
      summary: Query the metadata of the EPCIS events query result endpoint.
      description: |
        The `OPTIONS` method is used to discover capabilities for named queries. It describes which EPCIS and CBV
        versions are used in the query result supported as well as EPCIS and CBV extensions.
      operationId: queriesQueryNameEventsOPTIONS
      parameters:
      - name: queryName
        in: path
        description: The name of an EPCIS event query.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QueryName'
      - name: GS1-Extensions
        in: header
        description: |
          Specific EPCIS or CBV extensions supported (e.g., for FIT).
        required: false
        style: simple
        explode: true
        schema:
          $ref: '#/components/schemas/GS1-Extensions'
      responses:
        "204":
          description: |
            The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
            It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
            CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
          headers:
            Allow:
              description: Lists the set of methods supported by the resource.
              style: simple
              explode: false
              schema:
                type: string
                example: "OPTIONS, GET"
                default: "OPTIONS, GET"
            GS1-EPCIS-Version:
              $ref: '#/components/headers/GS1-EPCIS-Version'
            GS1-EPCIS-Min:
              $ref: '#/components/headers/GS1-EPCIS-Min'
            GS1-EPCIS-Max:
              $ref: '#/components/headers/GS1-EPCIS-Max'
            GS1-CBV-Version:
              $ref: '#/components/headers/GS1-CBV-Version'
            GS1-CBV-Min:
              $ref: '#/components/headers/GS1-CBV-Min'
            GS1-CBV-Max:
              $ref: '#/components/headers/GS1-CBV-Max'
            GS1-EPC-Format:
              $ref: '#/components/headers/GS1-EPC-Format'
            GS1-CBV-XML-Format:
              $ref: '#/components/headers/GS1-CBV-XML-Format'
            GS1-Extensions:
              $ref: '#/components/headers/GS1-Extensions'
            GS1-Vendor-Version:
              $ref: '#/components/headers/GS1-Vendor-Version'
        "401":
          description: Authorization information is missing or invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "403":
          description: Client is unauthorized to access this resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: "At least one resource was not found. For example, the EPCIS\
            \ event does not exist or the query does not exist."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_404_1'
        "406":
          description: |
            The server cannot return the response as requested.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_406'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_406'
        "414":
          description: URL is too long. This is usually a problem with large EPCIS
            queries in the URL.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_414'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_414'
        "500":
          description: An error occurred on the backend.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-swagger-router-controller: Discovery
  /nextPageToken/{token}:
    delete:
      tags:
      - Queries
      summary: Optional endpoint that allows on-demand release of any resources associated
        with `nextPageToken`.
      operationId: nextPageTokenTokenDELETE
      parameters:
      - name: token
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/NextPageToken'
      responses:
        "204":
          description: nextPageToken invalidated successfully.
        "501":
          description: Functionality not supported by server.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/inline_response_501'
            application/problem+xml:
              schema:
                $ref: '#/components/schemas/inline_response_501'
      x-swagger-router-controller: Queries
components:
  schemas:
    LDContext:
      description: JSON-LD @context.
      anyOf:
      - type: array
        items:
          anyOf:
          - type: string
            format: uri
          - type: object
      - type: string
        format: uri
      - type: object
    Location:
      minLength: 1
      type: string
      description: Location header of a resource as a relative or absolute URL.
      example: /events/urn:uuid:831c0292-4de1-430a-8255-2aca821abaab
    RFC7807ProblemResponseBody:
      required:
      - title
      - type
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
          format: uri
      description: "A response as specified in [RFC 7807](https://tools.ietf.org/html/rfc7807)."
      xml:
        name: EPCISException
        namespace: urn:epcglobal:epcis:xsd:2
        prefix: epcis
    QueryDefinition:
      required:
      - name
      - query
      type: object
      properties:
        name:
          type: string
        query:
          $ref: '#/components/schemas/EPCISEventsQuery'
      description: |
        Creating a new query with query body.
      example:
        name: UniqueQueryName
        query:
          eventType:
          - ObjectEvent
          EQ_bizStep:
          - shipping
          - receiving
    EPCISEventsQuery:
      type: array
      description: An EPCIS event query.
      example:
        eventType:
        - ObjectEvent
        EQ_bizStep:
        - shipping
        - receiving
      externalDocs:
        url: query-schema.json
      items:
        type: object
    subscriptionID:
      type: string
      description: The ID of a WebHook subscription.
      example: df5a33e3-5aa3-4403-ae01-99b83234e27b
    dest:
      type: string
      description: Callback URL to receive EPCIS resources and errors.
      format: uri
      example: https://client.example.com/queryCallback
    QueryName:
      type: string
      description: Unique query name.
      example: myQuery
    EPCISEvent:
      description: |
        EPCIS Event. It must validate against the normative
        <a href="../epcis-json-schema.json">EPCIS JSON Schema</a> or <a href="../Ontology/EPCIS-SHACL.ttl">EPCIS SHACL</a>.
      oneOf:
      - $ref: '#/components/schemas/ObjectEvent'
      - $ref: '#/components/schemas/AggregationEvent'
      - $ref: '#/components/schemas/TransactionEvent'
      - $ref: '#/components/schemas/TransformationEvent'
      - $ref: '#/components/schemas/AssociationEvent'
      - $ref: '#/components/schemas/Extended-Event'
    CaptureJob:
      type: object
      description: |
        When EPCIS events are added through the capture interface, the capture process can run asynchronously. If the payload
        is syntactically correct and the client is allowed to call `/capture`, the server returns a `202` HTTP response code. This
        does not guarantee successful storage of all EPCIS events. The capture job exposes the state of the capture job to the client.
        A capture job document has at least the following properties:
        - `running`: whether or not the capture job is still active.
        - `success`: whether or not at least one error occurred.
        - `captureErrorBehaviour`: GS1-Capture-Error-Behaviour header value provided with POST data to capture.
        - `errors` or `errorFile`: with the errors if `success` is `false`.
        ### captureErrorBehaviour value is `rollback`
        | Capture job `running` | Capture job `success` | Capture job outcome |
        |:--------|:---------|:---------|
        | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |
        | `true` | `false` | At least one error occurred. Rollback is in progress. |
        | `false` | `true` | All EPCIS events are captured. |
        | `false` | `false` | All EPCIS events are rejected. |
        ### captureErrorBehaviour value is `proceed`
        | Capture job `running` | Capture job `success` | Capture job outcome |
        |:--------|:---------|:---------|
        | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |
        | `true` | `false` | At least one error occurred but more EPCIS events are currently being captured. |
        | `false` | `true` | All EPCIS events were captured without an error. |
        | `false` | `false` | Some EPCIS events were captured but errors occurred. |
        If `success` is `false`, check the `errors` or `errorFile` property for details.
      example:
        captureID: id9261379075
        createdAt: 2022-01-21T17:32:28Z
        finishedAt: 2022-01-21T17:45:28Z
        running: false
        success: true
        captureErrorBehaviour: rollback
        errors: []
      xml:
        name: EPCISCaptureJob
        namespace: urn:epcglobal:epcis:xsd:2
        prefix: epcis
      allOf:
      - properties:
          captureID:
            type: string
            description: A unique value identifying a capture job generated by the
              server.
            example: id9261379075
            xml:
              attribute: true
          running:
            type: boolean
            description: |
              If the job is still running, the state is `true`, otherwise `false`.
            example: true
            xml:
              attribute: true
          success:
            type: boolean
            description: |
              If `success` is `false`, there was at least one error. Otherwise, `success` is `true`.
              If the `GS1-Capture-Error-Behaviour` header is `rollback`, `success` being `false` aborts the capture
              job and rejects all EPCIS events related to the job.
              If `GS1-Capture-Error-Behaviour` header is `proceed`, some EPCIS events might still be captured, even
              if `success` is `false`.
            example: false
            xml:
              attribute: true
          createdAt:
            type: string
            description: When the capture job started
            format: date-time
            example: 2022-01-21T17:32:28Z
          finishedAt:
            type: string
            description: When the capture job finished executing
            format: date-time
            example: 2022-01-21T17:45:28Z
          captureErrorBehaviour:
            type: string
            description: GS1-Capture-Error-Behaviour header value provided with POST
              data to capture
            example: rollback
            enum:
            - rollback
            - proceed
      - oneOf:
        - properties:
            errors:
              type: array
              description: |
                If the job was successful, the array is empty.
              example: []
              items:
                $ref: '#/components/schemas/RFC7807ProblemResponseBody'
              default: []
        - properties:
            errorFile:
              type: string
              description: |
                Instead of returning errors in the `errors` property, the server can also write errors to a logfile,
                and share the URL with the client.
              format: uri
              example: ""
    EPCISXMLQueryDocument:
      type: object
      description: A collection of EPCIS resources.
      externalDocs:
        description: |
          An EPCIS document that must be validated with the [XML Schema](../XSD/EPCglobal-epcis-query-2_0.xsd)
        url: ../XSD/EPCglobal-epcis-query-2_0.xsd
      xml:
        name: EPCISQueryDocument
        namespace: urn:epcglobal:epcis-query:xsd:2
        prefix: epcis
    Link:
      type: string
      description: |
        A pagination header link. This header works together with the `perPage` and `nextPageToken` query string
        parameters.
      format: uri
      example: <https://example.com/epcis/events?perPage=30&nextPageToken=3A15506738749783AU6D7DENAKwM2gQRRwGrataeq>;
        rel="next"
    PerPage:
      type: integer
      description: |
        This parameter helps to control the amount of data returned to the client through pagination.
        In the case of EPCIS events, `perPage` specifies the maximum number of events in a response to the client.
        It does not mandate that the server reaches this limit. For example, if the server sees that some EPCIS events are very
        large, the server can decide to return fewer events to avoid creating an error because the response body is too
        large.
        As long as there are more resources to retrieve, the `Link` header contains the URL of the next page and
        the attribute `rel="next"`. The last page is indicated by the absence of the `rel="next"`. Depending on the
        implementation, there can be a global upper limit for the `perPage` value that the client cannot override,
        which should be stated in the documentation.
      default: 30
    NextPageToken:
      type: string
      description: |
        Parameter that points to the next list of results when requesting a list of events that is larger than the value
        specified with the `perPage` parameter. Some technologies refer to this as scrolling.
        A `nextPageToken` may be invalidated through timeout. It is up to the specific implementation to provide
        the mechanisms for invalidating tokens.
      example: 3A15506738749783AU6D7DENAKwM2gQRRwGrataeq
    Upgrade:
      type: string
      description: The `Upgrade` and `Connection` headers are needed to open a Websocket
        for queries.
      example: websocket
      default: websocket
    Connection:
      type: string
      description: The `Upgrade` and `Connection` headers are needed to open a Websocket
        for queries.
      example: Upgrade
      default: upgrade
    EventTypeCollection:
      required:
      - '@context'
      - member
      - type
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LDContext'
        type:
          type: string
          enum:
          - Collection
        member:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/EPCISEventTypes'
      description: Event type item list
      example:
        '@context':
        - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
        - ex: https://example.org/myCustomEventTypes/
        type: Collection
        member:
        - AggregationEvent
        - AssociationEvent
        - ObjectEvent
        - TransactionEvent
        - TransformationEvent
        - ex:aCustomEventType
    EPCISEventTypes:
      description: The five types of EPCIS events or an extended event denoted by
        a URI.
      example:
      - AggregationEvent
      - AssociationEvent
      - ObjectEvent
      - TransactionEvent
      - TransformationEvent
      anyOf:
      - type: string
        enum:
        - AggregationEvent
        - AssociationEvent
        - ObjectEvent
        - TransactionEvent
        - TransformationEvent
      - type: string
        format: uri
    TopLevelResources:
      type: string
      description: The seven top level resources of an EPCIS.
      example: "[\"events\",\"eventTypes\",\"epcs\",\"bizSteps\",\"bizLocations\"\
        ,\"readPoints\",\"dispositions\",\"capture\",\"queries\"]"
      enum:
      - events
      - eventTypes
      - epcs
      - bizSteps
      - bizLocations
      - readPoints
      - dispositions
      - capture
      - queries
    TopLevelResourceCollection:
      required:
      - '@context'
      - member
      - type
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LDContext'
        type:
          type: string
          enum:
          - Collection
        member:
          minItems: 9
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TopLevelResources'
      example:
        member:
        - "[\"events\",\"eventTypes\",\"epcs\",\"bizSteps\",\"bizLocations\",\"readPoints\"\
          ,\"dispositions\",\"capture\",\"queries\"]"
        - "[\"events\",\"eventTypes\",\"epcs\",\"bizSteps\",\"bizLocations\",\"readPoints\"\
          ,\"dispositions\",\"capture\",\"queries\"]"
        type: Collection
        '@context': ""
    BizStepCollection:
      required:
      - '@context'
      - member
      - type
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LDContext'
        type:
          type: string
          enum:
          - Collection
        member:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/bizStep'
      example:
        '@context':
        - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
        - ex: https://example.org/myCustomBizSteps/
        type: Collection
        member:
        - accepting
        - arriving
        - assembling
        - collecting
        - commissioning
        - consigning
        - creating_class_instance
        - cycle_counting
        - decommissioning
        - departing
        - destroying
        - disassembling
        - dispensing
        - encoding
        - entering_exiting
        - holding
        - inspecting
        - installing
        - killing
        - loading
        - other
        - packing
        - picking
        - receiving
        - removing
        - repackaging
        - repairing
        - replacing
        - reserving
        - retail_selling
        - sampling
        - sensor_reporting
        - shipping
        - staging_outbound
        - stock_taking
        - stocking
        - storing
        - transporting
        - unloading
        - unpacking
        - void_shipping
        - ex:aCustomBizStep
    DispositionCollection:
      required:
      - '@context'
      - member
      - type
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LDContext'
        type:
          type: string
          enum:
          - Collection
        member:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/disposition'
      example:
        '@context':
        - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
        - ex: https://example.org/myCustomDispositions/
        type: Collection
        member:
        - active
        - available
        - completeness_inferred
        - completeness_verified
        - conformant
        - container_closed
        - container_open
        - damaged
        - destroyed
        - dispensed
        - disposed
        - encoded
        - expired
        - in_progress
        - in_transit
        - inactive
        - mismatch_class
        - mismatch_instance
        - mismatch_quantity
        - needs_replacement
        - no_pedigree_match
        - non_conformant
        - non_sellable_other
        - partially_dispensed
        - recalled
        - reserved
        - retail_sold
        - returned
        - sellable_accessible
        - sellable_not_accessible
        - stolen
        - unavailable
        - unknown
        - ex:aCustomDisposition
    UriCollection:
      required:
      - '@context'
      - member
      - type
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LDContext'
        type:
          type: string
          enum:
          - Collection
        member:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uri
      description: A list of items which are URIs such as EPCs or business locations.
      example:
        member:
        - http://example.com/aeiou
        - http://example.com/aeiou
        type: Collection
        '@context': ""
    ResourceCollection:
      required:
      - '@context'
      - member
      - type
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LDContext'
        type:
          type: string
          enum:
          - Collection
        member:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            minLength: 1
            type: string
            enum:
            - events
      description: A collection of sub-resources that includes at least the `events`
        one (for HATEOAS discovery).
      example:
        member:
        - events
        - events
        type: Collection
        '@context': ""
    AbstractQuerySubscription:
      required:
      - dest
      - secret
      type: object
      properties:
        dest:
          $ref: '#/components/schemas/dest'
        signatureToken:
          type: string
          description: Secret generated by the client for the server.
          example: 13df38d8275b13f05704629e5f1cf3d45d6132d5
        initialRecordTime:
          $ref: '#/components/schemas/GS1-Query-InitialRecordTime'
      description: |
        This schema contains shared features of EPCIS query subscriptions. If the schema is used in a response, the
        `secret` should not be fully revealed.
      example:
        dest: https://client.example.com/queryCallback
        signatureToken: 13df38d8275b13f05704629e5f1cf3d45d6132d5
    AbstractQuerySubscriptionResponse:
      required:
      - createdAt
      - dest
      - subscriptionID
      type: object
      properties:
        dest:
          $ref: '#/components/schemas/dest'
        subscriptionID:
          $ref: '#/components/schemas/subscriptionID'
        createdAt:
          type: string
          format: date-time
          example: 2022-02-27T17:32:28Z
        lastNotifiedAt:
          type: string
          description: The last time the target client was notified and responded
            with a 200 OK.
          format: date-time
          example: 2022-07-09T17:32:28Z
        initialRecordTime:
          $ref: '#/components/schemas/GS1-Query-InitialRecordTime'
        minRecordTime:
          $ref: '#/components/schemas/GS1-Query-Min-Record-Time'
        epcFormat:
          $ref: '#/components/schemas/GS1-EPC-Format'
      description: |
        This schema contains shared features of EPCIS query subscriptions response.
      example:
        dest: https://client.example.com/queryCallback
        subscriptionID: df5a33e3-5aa3-4403-ae01-99b83234e27b
        stream: true
        createdAt: 2017-08-21T17:32:28Z
        lastNotifiedAt: 2022-01-08T06:51:21.889Z
    QueryStreamSubscription:
      required:
      - stream
      type: object
      properties:
        stream:
          $ref: '#/components/schemas/GS1-Query-Stream'
      description: |
        If no query schedule is specified, the client must explicitly set `stream` to `true`. This restriction is to
        prevent clients from accidentally subscribing to EPCIS event streams.
        Example:
        ```
        POST /queries/MyQuery/subscriptions
        {
          "dest": "https://client.example.com/queryCallback",
          "signatureToken": "13df38d8275b13f05704629e5f1cf3d45d6132d5",
          "stream": true
        }
        ```
      example:
        stream: true
    QueryScheduleSubscription:
      required:
      - schedule
      type: object
      properties:
        reportIfEmpty:
          $ref: '#/components/schemas/GS1-Query-ReportIfEmpty'
        schedule:
          $ref: '#/components/schemas/QueryScheduleSubscription_schedule'
      description: |
        A scheduled query subscription is a time-based query execution scheduler. EPCIS 2.0 scheduled queries are scheduled
        in the same manner as cron jobs.
        For example, this query subscription is scheduled to trigger every morning at 1.05am. By setting
        `reportIfEmpty` to `true`, the client's callback URL will be called even if there are no new events that match
        the query.
        ```
        POST /queries/MyQuery/subscriptions
        {
          "dest": "https://client.example.com/queryCallback",
          "signatureToken": "13df38d8275b13f05704629e5f1cf3d45d6132d5",
          "reportIfEmpty": true,
          "schedule": {
            "hour":"1",
            "minute": "5"
          }
        }
        ```
      example:
        schedule:
          hour: "1"
          minute: "5"
    GS1-Signature:
      type: string
      description: |
        Used to sign events sent by the repository to subscribers. The choice of signature type is implementation specific but examples would be using HMAC with SHA-256 directly or a wrapper supporting various symmetric or asymetric
        cryptographic algorithms such as Json Web Signature (JWS).
      example: eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ
    GS1-Query-InitialRecordTime:
      type: string
      description: |
        Used to specify a time to constrain what resources are considered when processing a query
        subscription. This value only applies the first time a subscriber receives events. If omitted, the default
        value is the current time.
      format: date-time
      example: 2020-04-04T20:33:31.116-06:00
    GS1-Query-Min-Record-Time:
      type: string
      description: |
        In the context of an active query subscription, its value is set initially to
        `initialRecordTime` and then updated to the most recent execution timestamp
        for the standing query.
      format: date-time
      example: 2020-04-04T20:33:31.116-06:00
    GS1-Query-ReportIfEmpty:
      type: boolean
      description: Flag to specify subscribed clients should be notified if the query
        result is empty.
      example: false
      default: false
    GS1-Query-Second:
      pattern: "(\\g<element>,)*\\g<element>|(?<element>(\\g<number>|\\g<range>))|(?<range>(\\\
        [\\g<number>\\-\\g<number>\\]))|(?<number>([0-59]))"
      type: string
      description: |
        Specifies that the query time must have a matching seconds value. The range for this parameter is 0
        through 59, inclusive.
      example: "0"
    GS1-Query-Minute:
      pattern: "(\\g<element>,)*\\g<element>|(?<element>(\\g<number>|\\g<range>))|(?<range>(\\\
        [\\g<number>\\-\\g<number>\\]))|(?<number>([0-59]))"
      type: string
      description: |
        Specifies that the query time must have a matching minute value. The range for this parameter is 0 through 59,
        inclusive.
      example: "5"
    GS1-Query-Hour:
      pattern: "(\\g<element>,)*\\g<element>|(?<element>(\\g<number>|\\g<range>))|(?<range>(\\\
        [\\g<number>\\-\\g<number>\\]))|(?<number>([0-23]))"
      type: string
      description: |
        Specifies that the query time must have a matching hour value. The range for this parameter is 0 through 23,
        inclusive, with 0 denoting the hour that begins at midnight, and 23 denoting the hour that ends at midnight.
      example: "1"
    GS1-Query-DayOfMonth:
      pattern: "(\\g<element>,)*\\g<element>|(?<element>(\\g<number>|\\g<range>))|(?<range>(\\\
        [\\g<number>\\-\\g<number>\\]))|(?<number>([1-31]))"
      type: string
      description: |
        Specifies that the query time must have a matching day of month value. The range for this parameter is 1 through
        31, inclusive.
      example: "1"
    GS1-Query-Month:
      pattern: "(\\g<element>,)*\\g<element>|(?<element>(\\g<number>|\\g<range>))|(?<range>(\\\
        [\\g<number>\\-\\g<number>\\]))|(?<number>([1-12]))"
      type: string
      description: |
        Specifies that the query time must have a matching month value. The range for this parameter is 1 through 12,
        inclusive.
      example: "1"
    GS1-Query-DayOfWeek:
      pattern: "(\\g<element>,)*\\g<element>|(?<element>(\\g<number>|\\g<range>))|(?<range>(\\\
        [\\g<number>\\-\\g<number>\\]))|(?<number>([1-7]))"
      type: string
      description: |
        Specifies that the query time must have a matching day of week value. The range for this parameter is 1 through
        7, inclusive, with 1 denoting Monday, 2 denoting Tuesday, and so forth, up to 7 denoting Sunday.
      example: "1"
    GS1-Query-Stream:
      type: boolean
      description: |
        If no schedule is specified and `stream` is `true`, the standing subscription SHALL report immediately whenever a
        captured EPCIS event matches the query criteria.
      default: true
      enum:
      - true
    version:
      pattern: ^\d+(\.\d+)*$
      type: string
    GS1-EPCIS-Version:
      allOf:
      - example: 2.0.0
      - $ref: '#/components/schemas/version'
    GS1-EPCIS-Min:
      allOf:
      - example: 1.0.0
      - $ref: '#/components/schemas/version'
    GS1-EPCIS-Max:
      allOf:
      - example: 2.0.0
      - $ref: '#/components/schemas/version'
    GS1-CBV-Version:
      allOf:
      - example: 2.0.0
      - $ref: '#/components/schemas/version'
    GS1-CBV-Min:
      allOf:
      - example: 1.2.0
      - $ref: '#/components/schemas/version'
    GS1-CBV-Max:
      allOf:
      - example: 2.0.0
      - $ref: '#/components/schemas/version'
    GS1-EPC-Format:
      type: string
      example: Always_GS1_Digital_Link
      enum:
      - No_Preference
      - Always_GS1_Digital_Link
      - Always_EPC_URN
      - Never_Translates
    GS1-CBV-XML-Format:
      type: string
      example: Always_Web_URI
      enum:
      - No_Preference
      - Always_Web_URI
      - Always_URN
      - Never_Translates
    GS1-Extensions:
      type: object
      example: |
        example-epc-ext=http://org1.example.com/epcis/,
        example-epc-ext2=http://vendor.example.com/epcis/
    GS1-Vendor-Version:
      example: example-version-1.0
      anyOf:
      - type: string
      - type: object
    GS1-EPCIS-Capture-Limit:
      minimum: 1
      type: integer
      example: 500
    GS1-EPCIS-Capture-File-Size-Limit:
      minimum: 1
      type: integer
      example: 1024
    GS1-Capture-Error-Behaviour:
      type: string
      example: rollback
      default: rollback
      enum:
      - rollback
      - proceed
      - all
    GS1-Next-Page-Token-Expires:
      type: string
      format: date-time
      example: 2017-07-21T17:32:28Z
    vocabulary:
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/uri'
        vocabularyElementList:
          type: array
          items:
            $ref: '#/components/schemas/vocabularyElement'
      example:
        vocabularyElementList:
        - children:
          - null
          - null
          attributes:
          - id: null
            attribute: ""
          - id: null
            attribute: ""
          id: null
        - children:
          - null
          - null
          attributes:
          - id: null
            attribute: ""
          - id: null
            attribute: ""
          id: null
        type: http://example.com/aeiou
    vocabularyElement:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/uri'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/attribute'
        children:
          type: array
          items:
            $ref: '#/components/schemas/uri'
      example:
        children:
        - null
        - null
        attributes:
        - id: null
          attribute: ""
        - id: null
          attribute: ""
        id: null
    attribute:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/uri'
        attribute:
          anyOf:
          - type: number
          - type: string
          - type: object
      example:
        id: null
        attribute: ""
    eventList:
      type: array
      items:
        $ref: '#/components/schemas/EPCISEvent'
    vocabularyList:
      type: array
      items:
        $ref: '#/components/schemas/vocabulary'
    resultsBody:
      required:
      - eventList
      type: object
      properties:
        eventList:
          $ref: '#/components/schemas/eventList'
        vocabularyList:
          $ref: '#/components/schemas/vocabularyList'
      example:
        eventList:
        - ""
        - ""
        vocabularyList:
        - vocabularyElementList:
          - children:
            - null
            - null
            attributes:
            - id: null
              attribute: ""
            - id: null
              attribute: ""
            id: null
          - children:
            - null
            - null
            attributes:
            - id: null
              attribute: ""
            - id: null
              attribute: ""
            id: null
          type: http://example.com/aeiou
        - vocabularyElementList:
          - children:
            - null
            - null
            attributes:
            - id: null
              attribute: ""
            - id: null
              attribute: ""
            id: null
          - children:
            - null
            - null
            attributes:
            - id: null
              attribute: ""
            - id: null
              attribute: ""
            id: null
          type: http://example.com/aeiou
    queryResults:
      required:
      - queryName
      - resultsBody
      type: object
      properties:
        queryName:
          type: string
        subscriptionID:
          type: string
        resultsBody:
          $ref: '#/components/schemas/resultsBody'
      example:
        resultsBody:
          eventList:
          - ""
          - ""
          vocabularyList:
          - vocabularyElementList:
            - children:
              - null
              - null
              attributes:
              - id: null
                attribute: ""
              - id: null
                attribute: ""
              id: null
            - children:
              - null
              - null
              attributes:
              - id: null
                attribute: ""
              - id: null
                attribute: ""
              id: null
            type: http://example.com/aeiou
          - vocabularyElementList:
            - children:
              - null
              - null
              attributes:
              - id: null
                attribute: ""
              - id: null
                attribute: ""
              id: null
            - children:
              - null
              - null
              attributes:
              - id: null
                attribute: ""
              - id: null
                attribute: ""
              id: null
            type: http://example.com/aeiou
        queryName: queryName
        subscriptionID: subscriptionID
    epcisQueryDocumentBody:
      required:
      - queryResults
      type: object
      properties:
        queryResults:
          $ref: '#/components/schemas/queryResults'
      example:
        queryResults:
          resultsBody:
            eventList:
            - ""
            - ""
            vocabularyList:
            - vocabularyElementList:
              - children:
                - null
                - null
                attributes:
                - id: null
                  attribute: ""
                - id: null
                  attribute: ""
                id: null
              - children:
                - null
                - null
                attributes:
                - id: null
                  attribute: ""
                - id: null
                  attribute: ""
                id: null
              type: http://example.com/aeiou
            - vocabularyElementList:
              - children:
                - null
                - null
                attributes:
                - id: null
                  attribute: ""
                - id: null
                  attribute: ""
                id: null
              - children:
                - null
                - null
                attributes:
                - id: null
                  attribute: ""
                - id: null
                  attribute: ""
                id: null
              type: http://example.com/aeiou
          queryName: queryName
          subscriptionID: subscriptionID
    epcisHeader:
      type: object
      properties:
        epcisMasterData:
          $ref: '#/components/schemas/epcisHeader_epcisMasterData'
    epcisDocument:
      required:
      - '@context'
      - creationDate
      - epcisBody
      - schemaVersion
      - type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        type:
          type: string
          enum:
          - EPCISDocument
        '@context':
          $ref: '#/components/schemas/LDContext'
        schemaVersion:
          $ref: '#/components/schemas/version'
        creationDate:
          $ref: '#/components/schemas/time'
        instanceIdentifier:
          type: string
        sender:
          type: string
        receiver:
          type: string
        epcisHeader:
          $ref: '#/components/schemas/epcisHeader'
        epcisBody:
          $ref: '#/components/schemas/epcisDocument_epcisBody'
    epcisQueryDocument:
      required:
      - '@context'
      - epcisBody
      - type
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LDContext'
        id:
          $ref: '#/components/schemas/id'
        type:
          type: string
          enum:
          - EPCISQueryDocument
        schemaVersion:
          $ref: '#/components/schemas/version'
        creationDate:
          $ref: '#/components/schemas/time'
        epcisBody:
          $ref: '#/components/schemas/epcisQueryDocumentBody'
      example:
        schemaVersion: schemaVersion
        epcisBody:
          queryResults:
            resultsBody:
              eventList:
              - ""
              - ""
              vocabularyList:
              - vocabularyElementList:
                - children:
                  - null
                  - null
                  attributes:
                  - id: null
                    attribute: ""
                  - id: null
                    attribute: ""
                  id: null
                - children:
                  - null
                  - null
                  attributes:
                  - id: null
                    attribute: ""
                  - id: null
                    attribute: ""
                  id: null
                type: http://example.com/aeiou
              - vocabularyElementList:
                - children:
                  - null
                  - null
                  attributes:
                  - id: null
                    attribute: ""
                  - id: null
                    attribute: ""
                  id: null
                - children:
                  - null
                  - null
                  attributes:
                  - id: null
                    attribute: ""
                  - id: null
                    attribute: ""
                  id: null
                type: http://example.com/aeiou
            queryName: queryName
            subscriptionID: subscriptionID
        id: http://example.com/aeiou
        type: EPCISQueryDocument
        creationDate: 2000-01-23T04:56:07.000+00:00
        '@context': ""
    EPCIS-Document:
      oneOf:
      - $ref: '#/components/schemas/epcisDocument'
      - $ref: '#/components/schemas/epcisQueryDocument'
    uri:
      type: string
      format: uri
    time:
      type: string
      format: date-time
    decimal:
      type: number
    boolean:
      type: boolean
    hexBinary:
      pattern: "^[A-Fa-f0-9]+$"
      type: string
    string:
      type: string
    action:
      type: string
      enum:
      - OBSERVE
      - ADD
      - DELETE
    persistentDisposition:
      allOf:
      - type: object
        properties:
          set:
            minItems: 1
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/disposition'
          unset:
            minItems: 1
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/disposition'
        additionalProperties: false
      - anyOf:
        - required:
          - set
          type: object
        - required:
          - unset
          type: object
    epcList:
      uniqueItems: true
      type: array
      items:
        $ref: '#/components/schemas/uri'
    quantityList:
      type: array
      items:
        $ref: '#/components/schemas/quantityElement'
    uom:
      pattern: "^[A-Z0-9]{2,3}$"
      type: string
    eventID:
      $ref: '#/components/schemas/uri'
    certificationInfo:
      anyOf:
      - type: array
        items:
          $ref: '#/components/schemas/uri'
      - $ref: '#/components/schemas/uri'
    errorDeclaration:
      required:
      - declarationTime
      type: object
      properties:
        declarationTime:
          $ref: '#/components/schemas/time'
        reason:
          $ref: '#/components/schemas/error-reason'
        correctiveEventIDs:
          type: array
          items:
            $ref: '#/components/schemas/eventID'
    quantityElement:
      required:
      - epcClass
      type: object
      properties:
        epcClass:
          $ref: '#/components/schemas/uri'
        quantity:
          $ref: '#/components/schemas/decimal'
        uom:
          $ref: '#/components/schemas/uom'
      additionalProperties: false
    bizTransaction:
      required:
      - bizTransaction
      type: object
      properties:
        type:
          $ref: '#/components/schemas/bizTransaction-type'
        bizTransaction:
          $ref: '#/components/schemas/uri'
      additionalProperties: false
    readPoint:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/uri'
    bizLocation:
      required:
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/uri'
    source:
      required:
      - source
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/source-dest-type'
        source:
          $ref: '#/components/schemas/uri'
      additionalProperties: false
    destination:
      required:
      - destination
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/source-dest-type'
        destination:
          $ref: '#/components/schemas/uri'
      additionalProperties: false
    sensorElement:
      required:
      - sensorReport
      type: object
      properties:
        sensorMetadata:
          $ref: '#/components/schemas/sensorMetadata'
        sensorReport:
          $ref: '#/components/schemas/sensorReportList'
    sensorReportList:
      minItems: 1
      type: array
      items:
        $ref: '#/components/schemas/sensorReport'
    sensorReport:
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/measurementType'
        exception:
          $ref: '#/components/schemas/sensorAlertType'
        deviceID:
          $ref: '#/components/schemas/uri'
        deviceMetadata:
          $ref: '#/components/schemas/uri'
        rawData:
          $ref: '#/components/schemas/uri'
        dataProcessingMethod:
          $ref: '#/components/schemas/uri'
        bizRules:
          $ref: '#/components/schemas/uri'
        time:
          $ref: '#/components/schemas/time'
        microorganism:
          $ref: '#/components/schemas/uri'
        chemicalSubstance:
          $ref: '#/components/schemas/uri'
        coordinateReferenceSystem:
          $ref: '#/components/schemas/uri'
        value:
          $ref: '#/components/schemas/decimal'
        component:
          $ref: '#/components/schemas/component'
        stringValue:
          $ref: '#/components/schemas/string'
        booleanValue:
          $ref: '#/components/schemas/boolean'
        hexBinaryValue:
          $ref: '#/components/schemas/hexBinary'
        uriValue:
          $ref: '#/components/schemas/uri'
        minValue:
          $ref: '#/components/schemas/decimal'
        maxValue:
          $ref: '#/components/schemas/decimal'
        meanValue:
          $ref: '#/components/schemas/decimal'
        sDev:
          $ref: '#/components/schemas/decimal'
        percRank:
          $ref: '#/components/schemas/decimal'
        percValue:
          $ref: '#/components/schemas/decimal'
        uom:
          $ref: '#/components/schemas/string'
    sensorMetadata:
      type: object
      properties:
        time:
          $ref: '#/components/schemas/time'
        deviceID:
          $ref: '#/components/schemas/uri'
        deviceMetadata:
          $ref: '#/components/schemas/uri'
        rawData:
          $ref: '#/components/schemas/uri'
        startTime:
          $ref: '#/components/schemas/time'
        endTime:
          $ref: '#/components/schemas/time'
        dataProcessingMethod:
          $ref: '#/components/schemas/uri'
        bizRules:
          $ref: '#/components/schemas/uri'
    ilmd:
      type: object
    Event:
      required:
      - eventTime
      - eventTimeZoneOffset
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LDContext'
        eventTime:
          $ref: '#/components/schemas/time'
        recordTime:
          $ref: '#/components/schemas/time'
        eventTimeZoneOffset:
          pattern: "^([+]|[-])((0[0-9]|1[0-3]):([0-5][0-9])|14:00)$"
          type: string
        eventID:
          $ref: '#/components/schemas/eventID'
        certificationInfo:
          $ref: '#/components/schemas/certificationInfo'
        errorDeclaration:
          $ref: '#/components/schemas/errorDeclaration'
    common-event-properties:
      anyOf:
      - type: string
        enum:
        - '@context'
        - type
        - eventTime
        - recordTime
        - eventTimeZoneOffset
        - eventID
        - certificationInfo
        - errorDeclaration
      - $ref: '#/components/schemas/vocab-uri'
    Extended-Event:
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - type
        type: object
        properties:
          type:
            $ref: '#/components/schemas/vocab-uri'
    disposition:
      anyOf:
      - $ref: '#/components/schemas/vocab-other-uri'
      - type: string
        enum:
        - active
        - container_closed
        - damaged
        - destroyed
        - dispensed
        - disposed
        - encoded
        - expired
        - in_progress
        - in_transit
        - inactive
        - no_pedigree_match
        - non_sellable_other
        - partially_dispensed
        - recalled
        - reserved
        - retail_sold
        - returned
        - sellable_accessible
        - sellable_not_accessible
        - stolen
        - unknown
        - available
        - completeness_verified
        - completeness_inferred
        - conformant
        - container_open
        - mismatch_instance
        - mismatch_class
        - mismatch_quantity
        - needs_replacement
        - non_conformant
        - unavailable
    vocab-uri:
      type: string
      format: uri
    vocab-other-uri:
      pattern: ^(?!(urn:epcglobal:cbv|https?:\/\/ns\.gs1\.org/cbv\/))
      type: string
      format: uri
    vocab-nonGS1WebVoc-uri:
      pattern: ^(?!(https?:\/\/gs1\.org\/voc\/|https?:\/\/www\.gs1\.org\/voc\/))
      type: string
      format: uri
    required-ld-context:
      required:
      - '@context'
      type: object
    id:
      type: string
      format: uri
    error-reason:
      anyOf:
      - $ref: '#/components/schemas/vocab-other-uri'
      - type: string
        enum:
        - did_not_occur
        - incorrect_data
    bizTransaction-type:
      anyOf:
      - $ref: '#/components/schemas/vocab-other-uri'
      - type: string
        enum:
        - bol
        - cert
        - desadv
        - inv
        - pedigree
        - po
        - poc
        - prodorder
        - recadv
        - rma
        - testprd
        - testres
        - upevt
    source-dest-type:
      anyOf:
      - $ref: '#/components/schemas/vocab-other-uri'
      - type: string
        enum:
        - owning_party
        - possessing_party
        - location
    measurementType:
      anyOf:
      - $ref: '#/components/schemas/vocab-nonGS1WebVoc-uri'
      - type: string
        enum:
        - AbsoluteHumidity
        - AbsorbedDose
        - AbsorbedDoseRate
        - Acceleration
        - Radioactivity
        - Altitude
        - AmountOfSubstance
        - AmountOfSubstancePerUnitVolume
        - Angle
        - AngularAcceleration
        - AngularMomentum
        - AngularVelocity
        - Area
        - Capacitance
        - Conductance
        - Conductivity
        - Count
        - Density
        - Dimensionless
        - DoseEquivalent
        - DoseEquivalentRate
        - DynamicViscosity
        - ElectricCharge
        - ElectricCurrent
        - ElectricCurrentDensity
        - ElectricFieldStrength
        - Energy
        - Exposure
        - Force
        - Frequency
        - Illuminance
        - Inductance
        - Irradiance
        - KinematicViscosity
        - Length
        - LinearMomentum
        - Luminance
        - LuminousFlux
        - LuminousIntensity
        - MagneticFlux
        - MagneticFluxDensity
        - MagneticVectorPotential
        - Mass
        - MassConcentration
        - MassFlowRate
        - MassPerAreaTime
        - MemoryCapacity
        - MolalityOfSolute
        - MolarEnergy
        - MolarMass
        - MolarVolume
        - Power
        - Pressure
        - RadiantFlux
        - RadiantIntensity
        - RelativeHumidity
        - Resistance
        - Resistivity
        - SolidAngle
        - SpecificVolume
        - Speed
        - SurfaceDensity
        - SurfaceTension
        - Temperature
        - Time
        - Torque
        - Voltage
        - Volume
        - VolumeFlowRate
        - VolumeFraction
        - VolumetricFlux
        - Wavenumber
    sensorAlertType:
      anyOf:
      - $ref: '#/components/schemas/vocab-nonGS1WebVoc-uri'
      - type: string
        enum:
        - ALARM_CONDITION
        - ERROR_CONDITION
    component:
      anyOf:
      - $ref: '#/components/schemas/vocab-other-uri'
      - type: string
        enum:
        - x
        - "y"
        - z
        - axial_distance
        - azimuth
        - height
        - spherical_radius
        - polar_angle
        - elevation_angle
        - easting
        - northing
        - latitude
        - longitude
        - altitude
    ObjectEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - action
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - ObjectEvent
          epcList:
            $ref: '#/components/schemas/epcList'
          quantityList:
            $ref: '#/components/schemas/quantityList'
          action:
            $ref: '#/components/schemas/action'
          bizStep:
            $ref: '#/components/schemas/bizStep'
          disposition:
            $ref: '#/components/schemas/disposition'
          persistentDisposition:
            $ref: '#/components/schemas/persistentDisposition'
          readPoint:
            $ref: '#/components/schemas/readPoint'
          bizLocation:
            $ref: '#/components/schemas/bizLocation'
          bizTransactionList:
            type: array
            items:
              $ref: '#/components/schemas/bizTransaction'
          sourceList:
            type: array
            items:
              $ref: '#/components/schemas/source'
          destinationList:
            type: array
            items:
              $ref: '#/components/schemas/destination'
          sensorElementList:
            type: array
            items:
              $ref: '#/components/schemas/sensorElement'
          ilmd:
            $ref: '#/components/schemas/ilmd'
      - anyOf:
        - required:
          - epcList
          type: object
          properties:
            epcList:
              minItems: 0
              type: array
              items:
                $ref: '#/components/schemas/id'
        - required:
          - quantityList
          type: object
          properties:
            quantityList:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/quantityElement'
        - allOf:
          - required:
            - sensorElementList
            type: object
            properties:
              sensorElementList:
                minItems: 1
                type: array
                items:
                  $ref: '#/components/schemas/sensorElement'
          - required:
            - readPoint
            type: object
            properties:
              readPoint:
                $ref: '#/components/schemas/readPoint'
      - anyOf:
        - type: object
          properties:
            ilmd:
              not: {}
            action:
              pattern: ^OBSERVE$
              type: string
        - type: object
          properties:
            ilmd:
              not: {}
            action:
              pattern: ^DELETE$
              type: string
        - type: object
          properties:
            action:
              pattern: ^ADD$
              type: string
    bizStep:
      anyOf:
      - $ref: '#/components/schemas/vocab-other-uri'
      - type: string
        enum:
        - accepting
        - arriving
        - assembling
        - collecting
        - commissioning
        - consigning
        - creating_class_instance
        - cycle_counting
        - decommissioning
        - departing
        - destroying
        - disassembling
        - dispensing
        - encoding
        - entering_exiting
        - holding
        - inspecting
        - installing
        - killing
        - loading
        - other
        - packing
        - picking
        - receiving
        - removing
        - repackaging
        - repairing
        - replacing
        - reserving
        - retail_selling
        - shipping
        - staging_outbound
        - stock_taking
        - stocking
        - storing
        - transporting
        - unloading
        - unpacking
        - void_shipping
        - sensor_reporting
        - sampling
    AggregationEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - action
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - AggregationEvent
          parentID:
            $ref: '#/components/schemas/uri'
          childEPCs:
            type: array
            items:
              $ref: '#/components/schemas/uri'
          childQuantityList:
            type: array
            items:
              $ref: '#/components/schemas/quantityElement'
          action:
            $ref: '#/components/schemas/action'
          bizStep:
            $ref: '#/components/schemas/bizStep'
          disposition:
            $ref: '#/components/schemas/disposition'
          readPoint:
            $ref: '#/components/schemas/readPoint'
          bizLocation:
            $ref: '#/components/schemas/bizLocation'
          bizTransactionList:
            type: array
            items:
              $ref: '#/components/schemas/bizTransaction'
          sourceList:
            type: array
            items:
              $ref: '#/components/schemas/source'
          destinationList:
            type: array
            items:
              $ref: '#/components/schemas/destination'
          sensorElementList:
            type: array
            items:
              $ref: '#/components/schemas/sensorElement'
      - anyOf:
        - required:
          - childEPCs
          type: object
          properties:
            childEPCs:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/id'
        - required:
          - childQuantityList
          type: object
          properties:
            childQuantityList:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/quantityElement'
        - type: object
          properties:
            action:
              pattern: ^DELETE$
              type: string
    TransactionEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - action
        - bizTransactionList
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - TransactionEvent
          bizTransactionList:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/bizTransaction'
          parentID:
            $ref: '#/components/schemas/uri'
          epcList:
            type: array
            items:
              $ref: '#/components/schemas/uri'
          quantityList:
            type: array
            items:
              $ref: '#/components/schemas/quantityElement'
          action:
            $ref: '#/components/schemas/action'
          bizStep:
            $ref: '#/components/schemas/bizStep'
          disposition:
            $ref: '#/components/schemas/disposition'
          readPoint:
            $ref: '#/components/schemas/readPoint'
          bizLocation:
            $ref: '#/components/schemas/bizLocation'
          sourceList:
            type: array
            items:
              $ref: '#/components/schemas/source'
          destinationList:
            type: array
            items:
              $ref: '#/components/schemas/destination'
          sensorElementList:
            type: array
            items:
              $ref: '#/components/schemas/sensorElement'
      - anyOf:
        - required:
          - epcList
          type: object
          properties:
            epcList:
              minItems: 0
              type: array
              items:
                $ref: '#/components/schemas/id'
        - required:
          - quantityList
          type: object
          properties:
            quantityList:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/quantityElement'
        - type: object
          properties:
            action:
              pattern: ^DELETE$
              type: string
    TransformationEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - TransformationEvent
          inputEPCList:
            $ref: '#/components/schemas/epcList'
          inputQuantityList:
            $ref: '#/components/schemas/quantityList'
          outputEPCList:
            $ref: '#/components/schemas/epcList'
          outputQuantityList:
            $ref: '#/components/schemas/quantityList'
          transformationID:
            $ref: '#/components/schemas/uri'
          bizStep:
            $ref: '#/components/schemas/bizStep'
          disposition:
            $ref: '#/components/schemas/disposition'
          persistentDisposition:
            $ref: '#/components/schemas/persistentDisposition'
          readPoint:
            $ref: '#/components/schemas/readPoint'
          bizLocation:
            $ref: '#/components/schemas/bizLocation'
          bizTransactionList:
            type: array
            items:
              $ref: '#/components/schemas/bizTransaction'
          sourceList:
            type: array
            items:
              $ref: '#/components/schemas/source'
          destinationList:
            type: array
            items:
              $ref: '#/components/schemas/destination'
          sensorElementList:
            type: array
            items:
              $ref: '#/components/schemas/sensorElement'
          ilmd:
            $ref: '#/components/schemas/ilmd'
      - anyOf:
        - allOf:
          - anyOf:
            - required:
              - inputEPCList
              type: object
              properties:
                inputEPCList:
                  minItems: 1
                  type: array
                  items:
                    type: string
            - required:
              - inputQuantityList
              type: object
              properties:
                inputQuantityList:
                  minItems: 1
                  type: array
                  items:
                    type: object
          - anyOf:
            - required:
              - outputEPCList
              type: object
              properties:
                outputEPCList:
                  minItems: 1
                  type: array
                  items:
                    type: string
            - required:
              - outputQuantityList
              type: object
              properties:
                outputQuantityList:
                  minItems: 1
                  type: array
                  items:
                    type: object
        - required:
          - transformationID
          type: object
          anyOf:
          - required:
            - inputEPCList
            type: object
            properties:
              inputEPCList:
                minItems: 1
                type: array
                items:
                  type: string
          - required:
            - inputQuantityList
            type: object
            properties:
              inputQuantityList:
                minItems: 1
                type: array
                items:
                  type: object
          - required:
            - outputEPCList
            type: object
            properties:
              outputEPCList:
                minItems: 1
                type: array
                items:
                  type: string
          - required:
            - outputQuantityList
            type: object
            properties:
              outputQuantityList:
                minItems: 1
                type: array
                items:
                  type: object
    AssociationEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - required:
        - action
        - parentID
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - AssociationEvent
          parentID:
            $ref: '#/components/schemas/uri'
          childEPCs:
            type: array
            items:
              $ref: '#/components/schemas/uri'
          childQuantityList:
            type: array
            items:
              $ref: '#/components/schemas/quantityElement'
          action:
            $ref: '#/components/schemas/action'
          bizStep:
            $ref: '#/components/schemas/bizStep'
          disposition:
            $ref: '#/components/schemas/disposition'
          readPoint:
            $ref: '#/components/schemas/readPoint'
          bizLocation:
            $ref: '#/components/schemas/bizLocation'
          bizTransactionList:
            type: array
            items:
              $ref: '#/components/schemas/bizTransaction'
          sourceList:
            type: array
            items:
              $ref: '#/components/schemas/source'
          destinationList:
            type: array
            items:
              $ref: '#/components/schemas/destination'
          sensorElementList:
            type: array
            items:
              $ref: '#/components/schemas/sensorElement'
      - anyOf:
        - required:
          - childEPCs
          type: object
          properties:
            childEPCs:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/id'
        - required:
          - childQuantityList
          type: object
          properties:
            childQuantityList:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/quantityElement'
        - type: object
          properties:
            action:
              pattern: ^DELETE$
              type: string
    inline_response_401:
      example:
        type: epcisException:SecurityException
        title: Unauthorised request
        status: 401
      allOf:
      - properties:
          status:
            type: integer
            default: 401
            enum:
            - 401
          type:
            type: string
            format: uri
            enum:
            - epcisException:SecurityException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_403:
      example:
        type: epcisException:SecurityException
        title: Access to resource forbidden
        status: 403
      allOf:
      - properties:
          status:
            type: integer
            default: 403
            enum:
            - 403
          type:
            type: string
            format: uri
            enum:
            - epcisException:SecurityException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_406:
      example:
        type: epcisException:NotAcceptableException
        title: Conflicting request and response headers
        status: 406
      allOf:
      - properties:
          status:
            type: integer
            default: 406
            enum:
            - 406
          type:
            type: string
            format: uri
            enum:
            - epcisException:NotAcceptableException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_500:
      example:
        type: epcisException:ImplementationException
        title: A server-side error occurred
        status: 500
      allOf:
      - properties:
          status:
            type: integer
            default: 500
            enum:
            - 500
          type:
            type: string
            format: uri
            enum:
            - epcisException:ImplementationException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    capture_body:
      oneOf:
      - $ref: '#/components/schemas/epcisQueryDocument'
      - $ref: '#/components/schemas/epcisDocument'
    inline_response_400:
      allOf:
      - properties:
          status:
            type: integer
            default: 400
            enum:
            - 400
          type:
            type: string
            format: uri
            enum:
            - epcisException:ValidationException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_413:
      example:
        type: epcisException:CaptureLimitExceededException
        title: Capture Payload too large
        status: 413
      allOf:
      - properties:
          status:
            type: integer
            default: 413
            enum:
            - 413
          type:
            type: string
            format: uri
            enum:
            - epcisException:CaptureLimitExceededException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_415:
      example:
        type: epcisException:UnsupportedMediaTypeException
        title: Unsupported Media Type
        status: 415
      allOf:
      - properties:
          status:
            type: integer
            default: 415
            enum:
            - 415
          type:
            type: string
            format: uri
            enum:
            - epcisException:UnsupportedMediaTypeException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_415_1:
      example:
        type: epcisException:UnsupportedMediaTypeException
        title: Unsupported Media Type
        status: 415
      allOf:
      - properties:
          status:
            type: integer
            default: 415
            enum:
            - 415
          type:
            type: string
            format: uri
            enum:
            - epcisException:IUnsupportedMediaTypeException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_404:
      example:
        type: epcisException:NoSuchResourceException
        title: Resource not found
        status: 404
      allOf:
      - properties:
          status:
            type: integer
            default: 404
            enum:
            - 404
          type:
            type: string
            format: uri
            enum:
            - epcisException:NoSuchNameException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_404_1:
      example:
        type: epcisException:NoSuchNameException
        title: Resource not found
        status: 404
      allOf:
      - properties:
          status:
            type: integer
            default: 404
            enum:
            - 404
          type:
            type: string
            format: uri
            enum:
            - epcisException:NoSuchNameException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_414:
      example:
        type: epcisException:URITooLongException
        title: URI Too Long
        status: 414
      allOf:
      - properties:
          status:
            type: integer
            default: 414
            enum:
            - 414
          type:
            type: string
            format: uri
            enum:
            - epcisException:URITooLongException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_409:
      example:
        type: epcisException:ResourceAlreadyExistsException
        title: A resource with the provided identifier already exists.
        status: 409
      allOf:
      - properties:
          status:
            type: integer
            default: 406
            enum:
            - 406
          type:
            type: string
            format: uri
            enum:
            - epcisException:ResourceAlreadyExistsException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    eventType:
      oneOf:
      - $ref: '#/components/schemas/EPCISEventTypes'
    inline_response_400_1:
      example:
        type: epcisException:QueryValidationException
        title: EPCIS query exception
        status: 400
      allOf:
      - properties:
          status:
            type: integer
            default: 400
            enum:
            - 400
          type:
            type: string
            format: uri
            enum:
            - epcisException:QueryValidationException
            - epcisException:QueryParameterException
            - epcisException:ValidationException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_413_1:
      example:
        type: epcisException:QueryTooComplexException
        title: Capture Payload too large
        status: 413
      allOf:
      - properties:
          status:
            type: integer
            default: 413
            enum:
            - 413
          type:
            type: string
            format: uri
            enum:
            - epcisException:QueryTooLargeException
            - epcisException:QueryTooComplexException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    inline_response_400_2:
      example:
        type: epcisException:SubscriptionControlsException
        title: Subscription error
        status: 400
      allOf:
      - properties:
          status:
            type: integer
            default: 400
            enum:
            - 400
          type:
            type: string
            format: uri
            enum:
            - epcisException:SubscriptionControlsException
            - epcisException:ValidationException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    queryName_subscriptions_body:
      allOf:
      - $ref: '#/components/schemas/AbstractQuerySubscription'
      - oneOf:
        - $ref: '#/components/schemas/QueryScheduleSubscription'
        - $ref: '#/components/schemas/QueryStreamSubscription'
    inline_response_201:
      allOf:
      - $ref: '#/components/schemas/AbstractQuerySubscriptionResponse'
      - oneOf:
        - $ref: '#/components/schemas/QueryScheduleSubscription'
        - $ref: '#/components/schemas/QueryStreamSubscription'
    inline_response_501:
      example:
        type: epcisException:ImplementationException
        title: Functionality not supported by server
        status: 501
      allOf:
      - properties:
          status:
            type: integer
            default: 501
            enum:
            - 501
          type:
            type: string
            format: uri
            enum:
            - epcisException:ImplementationException
      - $ref: '#/components/schemas/RFC7807ProblemResponseBody'
    QueryScheduleSubscription_schedule:
      type: object
      properties:
        second:
          $ref: '#/components/schemas/GS1-Query-Second'
        minute:
          $ref: '#/components/schemas/GS1-Query-Minute'
        hour:
          $ref: '#/components/schemas/GS1-Query-Hour'
        dayOfMonth:
          $ref: '#/components/schemas/GS1-Query-DayOfMonth'
        month:
          $ref: '#/components/schemas/GS1-Query-Month'
        dayOfWeek:
          $ref: '#/components/schemas/GS1-Query-DayOfWeek'
    epcisHeader_epcisMasterData:
      type: object
      properties:
        vocabularyList:
          type: array
          items:
            $ref: '#/components/schemas/vocabulary'
    epcisDocument_epcisBody:
      required:
      - eventList
      type: object
      properties:
        eventList:
          $ref: '#/components/schemas/eventList'
  responses:
    "101WebsocketCreated":
      description: |
        Create a WebSocket connection to subscribe to queries. Upon subscription, the server SHALL send all new events
        to subscribing clients. If multiple clients have the same query, each client will receive events which they are
        authorized to see.
      headers:
        Upgrade:
          required: true
          style: simple
          explode: false
          schema:
            type: string
            default: websocket
        Connection:
          required: true
          style: simple
          explode: false
          schema:
            type: string
            default: upgrade
        GS1-Query-Min-Record-Time:
          required: false
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/GS1-Query-Min-Record-Time'
    "200TopLevelOrEventTypeSubResource":
      description: Returns a sub-resource list that contains at least the `events`
        sub-resource (for HATEOAS discovery).
      headers:
        GS1-EPCIS-Version:
          $ref: '#/components/headers/GS1-EPCIS-Version'
        GS1-CBV-Version:
          $ref: '#/components/headers/GS1-CBV-Version'
        GS1-Extensions:
          $ref: '#/components/headers/GS1-Extensions'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCollection'
          example:
            '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
            type: Collection
            member:
            - events
    "200EPCISQueryDocument":
      description: Contains EPCIS events.
      headers:
        GS1-EPCIS-Version:
          $ref: '#/components/headers/GS1-EPCIS-Version'
        GS1-CBV-Version:
          $ref: '#/components/headers/GS1-CBV-Version'
        GS1-Extensions:
          $ref: '#/components/headers/GS1-Extensions'
        Link:
          $ref: '#/components/headers/Link'
        GS1-Next-Page-Token-Expires:
          $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/epcisQueryDocument'
          example:
            '@context':
            - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
            - example: http://ns.example.com/epcis/
            id: https://id.example.org/document1
            type: EPCISQueryDocument
            schemaVersion: "2.0"
            creationDate: 2005-07-11T11:30:47.0Z
            epcisBody:
              queryResults:
                subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                queryName: SimpleEventQuery
                resultsBody:
                  eventList:
                  - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                    type: ObjectEvent
                    action: OBSERVE
                    bizStep: shipping
                    disposition: in_transit
                    epcList:
                    - urn:epc:id:sgtin:0614141.107346.2017
                    - urn:epc:id:sgtin:0614141.107346.2018
                    eventTime: 2005-04-03T20:33:31.116000-06:00
                    eventTimeZoneOffset: -06:00
                    readPoint:
                      id: urn:epc:id:sgln:0614141.07346.1234
                    bizTransactionList:
                    - type: po
                      bizTransaction: http://transaction.acme.com/po/12345678
                  - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                    type: ObjectEvent
                    action: OBSERVE
                    bizStep: receiving
                    disposition: in_progress
                    epcList:
                    - urn:epc:id:sgtin:0614141.107346.2018
                    eventTime: 2005-04-04T20:33:31.116-06:00
                    eventTimeZoneOffset: -06:00
                    readPoint:
                      id: urn:epc:id:sgln:0012345.11111.400
                    bizLocation:
                      id: urn:epc:id:sgln:0012345.11111.0
                    bizTransactionList:
                    - type: po
                      bizTransaction: http://transaction.acme.com/po/12345678
                    - type: desadv
                      bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                    example:myField: Example of a vendor/user extension
        application/xml:
          schema:
            $ref: '#/components/schemas/EPCISXMLQueryDocument'
          example: "<epcis:EPCISDocument xmlns:epcis=\"urn:epcglobal:epcis:xsd:2\"\
            \r\n\txmlns:cbvmda=\"urn:epcglobal:cbv:mda\" schemaVersion=\"2.0\" creationDate=\"\
            2020-06-28T13:41:00.000Z\">\r\n\t<EPCISBody>\r\n\t\t<EventList>\r\n\t\t\
            \t<!-- INFERENCE example with COMPLETENESS INFERRED -->\r\n\t\t\t<AggregationEvent>\r\
            \n\t\t\t\t<eventTime>2020-06-07T17:10:16Z</eventTime>\r\n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\
            \n\t\t\t\t<parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\
            \n\t\t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
            \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\n\
            \t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\n\t\
            \t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\n\t\t\
            \t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\n\t\t\t\
            \t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\n\t\t\t\t\
            \t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\n\t\t\t\t\t\
            <epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
            \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\n\
            \t\t\t\t</childEPCs>\r\n\t\t\t\t<action>OBSERVE</action>\r\n\t\t\t\t<bizStep>urn:epcglobal:cbv:bizstep:receiving</bizStep>\r\
            \n\t\t\t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
            \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
            \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
            \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\t\t\
            <bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
            \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
            \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
            \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\">urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\
            \n\t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
            >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\t\t\
            \t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t<source\
            \ type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
            \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t<destination\
            \ type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
            \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS INFERRED -->\r\
            \n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_inferred</set>\r\
            \n\t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\t\t\
            \t<!-- UNPACKING event with VERIFICATION of COMPLETENESS -->\r\n\t\t\t\
            <AggregationEvent>\r\n\t\t\t\t<eventTime>2020-06-08T18:11:16Z</eventTime>\r\
            \n\t\t\t\t<eventTimeZoneOffset>+02:00</eventTimeZoneOffset>\r\n\t\t\t\t\
            <parentID>urn:epc:id:sgtin:952001.1012345.22222223333</parentID>\r\n\t\
            \t\t\t<childEPCs>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001001</epc>\r\
            \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001002</epc>\r\n\
            \t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001003</epc>\r\n\t\
            \t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001004</epc>\r\n\t\t\
            \t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001005</epc>\r\n\t\t\t\
            \t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001006</epc>\r\n\t\t\t\t\
            \t<epc>urn:epc:id:sgtin:9520001.012346.10000001007</epc>\r\n\t\t\t\t\t\
            <epc>urn:epc:id:sgtin:9520001.012346.10000001008</epc>\r\n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001009</epc>\r\
            \n\t\t\t\t\t<epc>urn:epc:id:sgtin:9520001.012346.10000001010</epc>\r\n\
            \t\t\t\t</childEPCs>\r\n\t\t\t\t<action>DELETE</action>\r\n\t\t\t\t<bizStep>urn:epcglobal:cbv:bizstep:unpacking</bizStep>\r\
            \n\t\t\t\t<disposition>urn:epcglobal:cbv:disp:in_progress</disposition>\r\
            \n\t\t\t\t<readPoint>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
            \n\t\t\t\t</readPoint>\r\n\t\t\t\t<bizLocation>\r\n\t\t\t\t\t<id>urn:epc:id:sgln:9529999.99999.0</id>\r\
            \n\t\t\t\t</bizLocation>\r\n\t\t\t\t<bizTransactionList>\r\n\t\t\t\t\t\
            <bizTransaction type=\"urn:epcglobal:cbv:btt:inv\">urn:epcglobal:cbv:bt:9520011111116:A123</bizTransaction>\r\
            \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:po\">urn:epcglobal:cbv:bt:9529999999991:XYZ567</bizTransaction>\r\
            \n\t\t\t\t\t<!-- suggestion: allow for reference to packing event(s)\r\
            \n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:packevent\">urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\
            \n\t\t\t\t\t-->\r\n\t\t\t\t\t<bizTransaction type=\"urn:epcglobal:cbv:btt:desadv\"\
            >urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6</bizTransaction>\r\n\t\t\
            \t\t</bizTransactionList>\r\n\t\t\t\t<sourceList>\r\n\t\t\t\t\t<source\
            \ type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520001.11111</source>\r\
            \n\t\t\t\t</sourceList>\r\n\t\t\t\t<destinationList>\r\n\t\t\t\t\t<destination\
            \ type=\"urn:epcglobal:cbv:sdt:owning_party\">urn:epc:id:pgln:9520999.99999</destination>\r\
            \n\t\t\t\t</destinationList>\r\n\t\t\t\t<!-- COMPLETENESS VERIFIED -->\r\
            \n\t\t\t\t<persistentDisposition>\r\n\t\t\t\t\t<unset>urn:epcglobal:cbv:disp:completeness_inferred</unset>\r\
            \n\t\t\t\t\t<set>urn:epcglobal:cbv:disp:completeness_verified</set>\r\n\
            \t\t\t\t</persistentDisposition>\r\n\t\t\t</AggregationEvent>\r\n\t\t\
            </EventList>\r\n\t</EPCISBody>\r\n</epcis:EPCISDocument>\r\n"
    "200EPCISQueryDocumentSinglePage":
      description: EPCIS Query Document containing events with the requested `eventID`.
      headers:
        GS1-EPCIS-Version:
          $ref: '#/components/headers/GS1-EPCIS-Version'
        GS1-CBV-Version:
          $ref: '#/components/headers/GS1-CBV-Version'
        GS1-Extensions:
          $ref: '#/components/headers/GS1-Extensions'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/epcisQueryDocument'
          example:
            '@context':
            - https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
            - example: http://ns.example.com/epcis/
            id: https://id.example.org/document1
            type: EPCISQueryDocument
            schemaVersion: "2.0"
            creationDate: 2005-07-11T11:30:47.0Z
            epcisBody:
              queryResults:
                subscriptionID: 32d2aec1-a6d2-46d9-900a-24124288cce1
                queryName: SimpleEventQuery
                resultsBody:
                  eventList:
                  - eventID: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
                    type: ObjectEvent
                    action: OBSERVE
                    bizStep: shipping
                    disposition: in_transit
                    epcList:
                    - urn:epc:id:sgtin:0614141.107346.2017
                    - urn:epc:id:sgtin:0614141.107346.2018
                    eventTime: 2005-04-03T20:33:31.116000-06:00
                    eventTimeZoneOffset: -06:00
                    readPoint:
                      id: urn:epc:id:sgln:0614141.07346.1234
                    bizTransactionList:
                    - type: po
                      bizTransaction: http://transaction.acme.com/po/12345678
                  - eventID: ni:///sha-256;00e1e6eba3a7cc6125be4793a631f0af50f8322e0ab5f2c0bab994a11cec1d79?ver=CBV2.0
                    type: ObjectEvent
                    action: OBSERVE
                    bizStep: receiving
                    disposition: in_progress
                    epcList:
                    - urn:epc:id:sgtin:0614141.107346.2018
                    eventTime: 2005-04-04T20:33:31.116-06:00
                    eventTimeZoneOffset: -06:00
                    readPoint:
                      id: urn:epc:id:sgln:0012345.11111.400
                    bizLocation:
                      id: urn:epc:id:sgln:0012345.11111.0
                    bizTransactionList:
                    - type: po
                      bizTransaction: http://transaction.acme.com/po/12345678
                    - type: desadv
                      bizTransaction: urn:epcglobal:cbv:bt:0614141073467:1152
                    example:myField: Example of a vendor/user extension
        application/xml:
          schema:
            $ref: '#/components/schemas/EPCISXMLQueryDocument'
    "204NextPageTokenInvalidated":
      description: nextPageToken invalidated successfully.
    "200SupportedTopLevel":
      description: Returns all supported EPCIS top-level resources.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopLevelResourceCollection'
          example:
            '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
            type: Collection
            member:
            - queries
            - capture
            - events
            - eventTypes
            - epcs
            - readPoints
            - bizLocations
            - dispositions
            - bizSteps
        application/xml:
          schema:
            $ref: '#/components/schemas/TopLevelResourceCollection'
          example:
            '@context': https://ref.gs1.org/standards/epcis/2.0.0/epcis-context.jsonld
            type: Collection
            member:
            - queries
            - capture
            - events
            - eventTypes
            - epcs
            - readPoints
            - bizLocations
            - dispositions
            - bizSteps
    "200SupportedEventTypes":
      description: Returns all supported EPCIS event types.
      headers:
        GS1-Extensions:
          $ref: '#/components/headers/GS1-Extensions'
        GS1-EPCIS-Version:
          $ref: '#/components/headers/GS1-EPCIS-Version'
        GS1-CBV-Version:
          $ref: '#/components/headers/GS1-CBV-Version'
        Link:
          $ref: '#/components/headers/Link'
        GS1-Next-Page-Token-Expires:
          $ref: '#/components/headers/GS1-Next-Page-Token-Expires'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventTypeCollection'
    "204DefaultDiscoveryResponse":
      description: |
        The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
        It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
        CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
      headers:
        Allow:
          description: Lists the set of methods supported by the resource.
          style: simple
          explode: false
          schema:
            type: string
            example: "OPTIONS, GET"
            default: "OPTIONS, GET"
        GS1-EPCIS-Version:
          $ref: '#/components/headers/GS1-EPCIS-Version'
        GS1-EPCIS-Min:
          $ref: '#/components/headers/GS1-EPCIS-Min'
        GS1-EPCIS-Max:
          $ref: '#/components/headers/GS1-EPCIS-Max'
        GS1-CBV-Version:
          $ref: '#/components/headers/GS1-CBV-Version'
        GS1-CBV-Min:
          $ref: '#/components/headers/GS1-CBV-Min'
        GS1-CBV-Max:
          $ref: '#/components/headers/GS1-CBV-Max'
        GS1-EPC-Format:
          $ref: '#/components/headers/GS1-EPC-Format'
        GS1-CBV-XML-Format:
          $ref: '#/components/headers/GS1-CBV-XML-Format'
        GS1-Extensions:
          $ref: '#/components/headers/GS1-Extensions'
        GS1-Vendor-Version:
          $ref: '#/components/headers/GS1-Vendor-Version'
    "204WritableResourcesDiscovery":
      description: |
        The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
        It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
        CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
      headers:
        Allow:
          description: Lists the set of methods supported by the resource.
          style: simple
          explode: false
          schema:
            type: string
            example: "OPTIONS, GET, POST"
            default: "OPTIONS, GET, POST"
        GS1-EPCIS-Version:
          $ref: '#/components/headers/GS1-EPCIS-Version'
        GS1-EPCIS-Min:
          $ref: '#/components/headers/GS1-EPCIS-Min'
        GS1-EPCIS-Max:
          $ref: '#/components/headers/GS1-EPCIS-Max'
        GS1-CBV-Version:
          $ref: '#/components/headers/GS1-CBV-Version'
        GS1-CBV-Min:
          $ref: '#/components/headers/GS1-CBV-Min'
        GS1-CBV-Max:
          $ref: '#/components/headers/GS1-CBV-Max'
        GS1-EPC-Format:
          $ref: '#/components/headers/GS1-EPC-Format'
        GS1-CBV-XML-Format:
          $ref: '#/components/headers/GS1-CBV-XML-Format'
        GS1-Extensions:
          $ref: '#/components/headers/GS1-Extensions'
        GS1-Vendor-Version:
          $ref: '#/components/headers/GS1-Vendor-Version'
    "204RemovableResourcesDiscovery":
      description: |
        The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
        It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
        CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
      headers:
        Allow:
          description: Lists the set of methods supported by the resource.
          style: simple
          explode: false
          schema:
            type: string
            example: "OPTIONS, GET, DELETE"
            default: "OPTIONS, GET, DELETE"
        GS1-EPCIS-Version:
          $ref: '#/components/headers/GS1-EPCIS-Version'
        GS1-EPCIS-Min:
          $ref: '#/components/headers/GS1-EPCIS-Min'
        GS1-EPCIS-Max:
          $ref: '#/components/headers/GS1-EPCIS-Max'
        GS1-CBV-Version:
          $ref: '#/components/headers/GS1-CBV-Version'
        GS1-CBV-Min:
          $ref: '#/components/headers/GS1-CBV-Min'
        GS1-CBV-Max:
          $ref: '#/components/headers/GS1-CBV-Max'
        GS1-EPC-Format:
          $ref: '#/components/headers/GS1-EPC-Format'
        GS1-CBV-XML-Format:
          $ref: '#/components/headers/GS1-CBV-XML-Format'
        GS1-Extensions:
          $ref: '#/components/headers/GS1-Extensions'
        GS1-Vendor-Version:
          $ref: '#/components/headers/GS1-Vendor-Version'
    "204CaptureEndpointDiscovery":
      description: |
        The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.
        It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and
        CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
      headers:
        Allow:
          description: Lists the set of methods supported by the resource.
          style: simple
          explode: false
          schema:
            type: string
            example: "OPTIONS, POST, GET"
            default: "OPTIONS, POST, GET"
        GS1-EPCIS-Version:
          $ref: '#/components/headers/GS1-EPCIS-Version'
        GS1-EPCIS-Min:
          $ref: '#/components/headers/GS1-EPCIS-Min'
        GS1-EPCIS-Max:
          $ref: '#/components/headers/GS1-EPCIS-Max'
        GS1-CBV-Version:
          $ref: '#/components/headers/GS1-CBV-Version'
        GS1-CBV-Min:
          $ref: '#/components/headers/GS1-CBV-Min'
        GS1-CBV-Max:
          $ref: '#/components/headers/GS1-CBV-Max'
        GS1-EPC-Format:
          $ref: '#/components/headers/GS1-EPC-Format'
        GS1-CBV-XML-Format:
          $ref: '#/components/headers/GS1-CBV-XML-Format'
        GS1-Extensions:
          $ref: '#/components/headers/GS1-Extensions'
        GS1-Vendor-Version:
          $ref: '#/components/headers/GS1-Vendor-Version'
        GS1-EPCIS-Capture-Limit:
          $ref: '#/components/headers/GS1-EPCIS-Capture-Limit'
        GS1-EPCIS-Capture-File-Size-Limit:
          $ref: '#/components/headers/GS1-EPCIS-Capture-File-Size-Limit'
        GS1-Capture-Error-Behaviour:
          $ref: '#/components/headers/GS1-Capture-Error-Behaviour'
    "204SubscriptionEndpointDiscovery":
      description: |
        The `OPTIONS` method returns information describing individual query subscriptions.
        The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.
      headers:
        Allow:
          description: Lists the set of methods supported by the resource.
          style: simple
          explode: false
          schema:
            type: string
            example: "OPTIONS, DELETE, GET"
            default: "OPTIONS, DELETE, GET"
        GS1-EPCIS-Version:
          $ref: '#/components/headers/GS1-EPCIS-Version'
        GS1-EPCIS-Min:
          $ref: '#/components/headers/GS1-EPCIS-Min'
        GS1-EPCIS-Max:
          $ref: '#/components/headers/GS1-EPCIS-Max'
        GS1-Extensions:
          $ref: '#/components/headers/GS1-Extensions'
        GS1-Vendor-Version:
          $ref: '#/components/headers/GS1-Vendor-Version'
        GS1-Query-Min-Record-Time:
          $ref: '#/components/headers/GS1-Query-Min-Record-Time'
    "204QueryDeleted":
      description: Query deleted and clients disconnected.
    "400SubscriptionIssues":
      description: An issue with a subscription occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400_2'
        application/xml:
          schema:
            $ref: '#/components/schemas/inline_response_400_2'
    "400QueryIssues":
      description: Query exceptions defined in EPCIS.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_400_1'
    "401UnauthorizedRequest":
      description: Authorization information is missing or invalid.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_401'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_401'
    "403ClientUnauthorized":
      description: Client is unauthorized to access this resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_403'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_403'
    "404ResourceNotFound":
      description: "At least one resource was not found. For example, the EPCIS event\
        \ does not exist or the query does not exist."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_404'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_404_1'
    "413CapturePayloadTooLarge":
      description: |
        The `POST` request is too large. It exceeds the limits set in `GS1-EPCIS-Capture-Limit` and/or
        `GS1-EPCIS-Capture-File-Size-Limit`.
      headers:
        GS1-EPCIS-Capture-Limit:
          $ref: '#/components/headers/GS1-EPCIS-Capture-Limit'
        GS1-EPCIS-Capture-File-Size-Limit:
          $ref: '#/components/headers/GS1-EPCIS-Capture-File-Size-Limit'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_413'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_413'
    "413QueryScopeOrSize":
      description: Query result is too large.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_413_1'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_413_1'
    "414URLTooLong":
      description: URL is too long. This is usually a problem with large EPCIS queries
        in the URL.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_414'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_414'
    "406NotAcceptable":
      description: |
        The server cannot return the response as requested.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_406'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_406'
    "409ResourceAlreadyExistsException":
      description: |
        A resource with the provided identifier already exists. E.g., a named query or an event.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_409'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_409'
    "415UnsupportedMediaType":
      description: |
        The client sent data in a format that is not supported by the server.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_415'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_415_1'
    "500ImplementationException":
      description: An error occurred on the backend.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_500'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_500'
    "501NotImplemented":
      description: Functionality not supported by server.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/inline_response_501'
        application/problem+xml:
          schema:
            $ref: '#/components/schemas/inline_response_501'
  parameters:
    EPC:
      name: epc
      in: path
      description: An electronic product code value.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uri
      example: urn:epc:id:sgtin:0614141.107346.2018
    BizStep:
      name: bizStep
      in: path
      description: A business step value.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uri
      example: urn:epcglobal:cbv:bizstep:receiving
    BizLocation:
      name: bizLocation
      in: path
      description: A business location value.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uri
      example: urn:epc:id:sgln:0012345.11111.0
    ReadPoint:
      name: readPoint
      in: path
      description: A read point value.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uri
      example: urn:epc:id:sgln:0012345.11111.400
    Disposition:
      name: disposition
      in: path
      description: A disposition value.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uri
      example: in_progress
    EventID:
      name: eventID
      in: path
      description: |
        The ID of an EPCIS event. An EPCIS event ID must be unique across all events in the system.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uri
      example: ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0
    EventType:
      name: eventType
      in: path
      description: |
        Names of EPCIS event types.
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/eventType'
      example: ObjectEvent
    QueryName:
      name: queryName
      in: path
      description: The name of an EPCIS event query.
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/QueryName'
    Token:
      name: token
      in: path
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/NextPageToken'
    PerPage:
      name: perPage
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/PerPage'
    NextPageToken:
      name: nextPageToken
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/NextPageToken'
    Upgrade:
      name: Upgrade
      in: header
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/Upgrade'
    Connection:
      name: Connection
      in: header
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/Connection'
    GS1-Signature:
      name: GS1-Signature
      in: header
      description: Header containing the signature of events sent by the respository
        to a subscriber.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-Signature'
    GS1-Query-Second:
      name: second
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Query-Second'
    GS1-Query-Minute:
      name: minute
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Query-Minute'
    GS1-Query-Hour:
      name: hour
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Query-Hour'
    GS1-Query-DayOfMonth:
      name: dayOfMonth
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Query-DayOfMonth'
    GS1-Query-Month:
      name: month
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Query-Month'
    GS1-Query-DayOfWeek:
      name: dayOfWeek
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Query-DayOfWeek'
    GS1-Query-ReportIfEmpty:
      name: reportIfEmpty
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Query-ReportIfEmpty'
    GS1-Query-Stream:
      name: stream
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Query-Stream'
    GS1-Query-InitialRecordTime:
      name: initialRecordTime
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Query-InitialRecordTime'
    GS1-EPCIS-Version:
      name: GS1-EPCIS-Version
      in: header
      description: |
        The EPCIS version.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPCIS-Version'
    GS1-EPCIS-Min:
      name: GS1-EPCIS-Min
      in: header
      description: |
        The lowest EPCIS version supported.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPCIS-Min'
    GS1-EPCIS-Max:
      name: GS1-EPCIS-Max
      in: header
      description: The highest EPCIS version supported.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPCIS-Max'
    GS1-CBV-Version:
      name: GS1-CBV-Version
      in: header
      description: |
        The Core Business Vocabulary version.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-CBV-Version'
    GS1-CBV-Min:
      name: GS1-CBV-Min
      in: header
      description: |
        The lowest Core Business Vocabulary version supported.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-CBV-Min'
    GS1-CBV-Max:
      name: GS1-CBV-Max
      in: header
      description: |
        The highest Core Business Vocabulary version supported.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-CBV-Max'
    GS1-EPC-Format:
      name: GS1-EPC-Format
      in: header
      description: |
        Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
        It is also used by the server to announce which EPC formats are supported.
        If absent the default value is `Always_GS1_Digital_Link`:
         - No_Preference: No preference in the representation, i.e. any format is accepted.
         - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.
         - Always_EPC_URN: URIs are returned as URN.
         - Never_Translates: EPCs are never translated, i.e. the original format is kept.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPC-Format'
    GS1-CBV-XML-Format:
      name: GS1-CBV-XML-Format
      in: header
      description: |
        When requesting XML content-type only, users can use this header to request
        receiving events with CBV values in either URN or Web URI format.
        This option is not available for JSON/JSON-LD.
        - No_Preference: The server chooses the representation.
        - Always_Web_URI: CBV values are returned as Web URI.
        - Always_URN: CBV values are returned as URNs.
        - Never_Translates: The original format is kept.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-CBV-XML-Format'
    GS1-Extensions:
      name: GS1-Extensions
      in: header
      description: |
        Specific EPCIS or CBV extensions supported (e.g., for FIT).
      required: false
      style: simple
      explode: true
      schema:
        $ref: '#/components/schemas/GS1-Extensions'
    GS1-Capture-Error-Behaviour:
      name: GS1-Capture-Error-Behaviour
      in: header
      description: |
        A header to control how the capture interface will behave in case of an error:
        - `rollback`: "All or nothing". Either the capture job is entirely successful or all EPCIS events are rejected.
        - `proceed`: "Greedy capture". The capture interface tries to capture as many EPCIS events as possible, even if there are errors.
        The default behaviour is `rollback`, as in EPCIS 1.2.
      required: false
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-Capture-Error-Behaviour'
    eventType:
      name: eventType
      in: query
      description: "If specified, the result will only include events whose `type`\
        \ matches one of the types specified in the parameter value. Each element\
        \ of the parameter value may be one of the following strings: `ObjectEvent`,\
        \ `AggregationEvent`, `TransactionEvent`, `TransformationEvent` or `AssociationEvent`.\
        \ An element of the parameter value may also be the name of an extension event\
        \ type. If omitted, all event types will be considered for inclusion in the\
        \ result."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          $ref: '#/components/schemas/EPCISEventTypes'
      example: ObjectEvent
    GE_eventTime:
      name: GE_eventTime
      in: query
      description: "If specified, only events with `eventTime` greater than or equal\
        \ to the specified value will be included in the result. If omitted, events\
        \ are included regardless of their `eventTime` (unless constrained by the\
        \ `LT_eventTime` parameter)."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    LT_eventTime:
      name: LT_eventTime
      in: query
      description: "If specified, only events with `eventTime` less than the specified\
        \ value will be included in the result. If omitted, events are included regardless\
        \ of their `eventTime` (unless constrained by the `GE_eventTime` parameter)."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    GE_recordTime:
      name: GE_recordTime
      in: query
      description: "If provided, only events with `recordTime` greater than or equal\
        \ to the specified value will be returned. The automatic limitation based\
        \ on event record time (section 8.2.5.2) may implicitly provide a constraint\
        \ similar to this parameter. If omitted, events are included regardless of\
        \ their `recordTime`, other than automatic limitation based on event record\
        \ time"
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    LT_recordTime:
      name: LT_recordTime
      in: query
      description: "If provided, only events with `recordTime` less than the specified\
        \ value will be returned. If omitted, events are included regardless of their\
        \ `recordTime` (unless constrained by the `GE_recordTime` parameter or the\
        \ automatic limitation based on event record time)"
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    EQ_action:
      name: EQ_action
      in: query
      description: "If specified, the result will only include events that (a) have\
        \ an `action` field; and where (b) the value of the `action` field matches\
        \ one of the specified values. The properties of the value of this parameter\
        \ each must be one of the strings `ADD`, `OBSERVE`, or `DELETE`; if not, the\
        \ implementation SHALL raise a `QueryParameterException`. If omitted, events\
        \ are included regardless of their `action` field."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          enum:
          - ADD
          - OBSERVE
          - DELETE
      example: OBSERVE
    EQ_bizStep:
      name: EQ_bizStep
      in: query
      description: "If specified, the result will only include events that (a) have\
        \ a non-null `bizStep` field; and where (b) the value of the `bizStep` field\
        \ matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/BizStep\"\
        \ target=\"_blank\">CBV BizStep</a> for standard values.  Standard values\
        \ should be expressed as bare words, e.g. `shipping`, whereas custom values\
        \ should be expressed as URIs or CURIEs for which the namespace prefix is\
        \ defined. If this parameter is omitted, events are returned regardless of\
        \ the value of the `bizStep` field or whether the `bizStep` field exists at\
        \ all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          $ref: '#/components/schemas/bizStep'
      example: shipping
    EQ_disposition:
      name: EQ_disposition
      in: query
      description: "If specified, the result will only include events that (a) have\
        \ a non-null `disposition` field; and where (b) the value of the `disposition`\
        \ field matches one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
        \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
        \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
        \ should be expressed as URIs or CURIEs for which the namespace prefix is\
        \ defined. If this parameter is omitted, events are returned regardless of\
        \ the value of the `disposition` field or whether the `disposition` field\
        \ exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          $ref: '#/components/schemas/disposition'
      example: in_transit
    EQ_persistentDisposition_set:
      name: EQ_persistentDisposition_set
      in: query
      description: "If specified, the result will only include events that (a) have\
        \ a non-null `persistentDisposition` field; and where (b) the value of the\
        \ `set` field within the value of the `persistentDisposition` field matches\
        \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
        \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
        \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
        \ should be expressed as URIs or CURIEs for which the namespace prefix is\
        \ defined. If this parameter is omitted, events are returned regardless of\
        \ the value of the `set` field within `persistentDisposition` field or whether\
        \ the `persistentDisposition` field exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          $ref: '#/components/schemas/disposition'
      example: in_transit
    EQ_persistentDisposition_unset:
      name: EQ_persistentDisposition_unset
      in: query
      description: "If specified, the result will only include events that (a) have\
        \ a non-null `persistentDisposition` field; and where (b) the value of the\
        \ `unset` field within the value of the `persistentDisposition` field matches\
        \ one of the specified values. - see <a href=\"https://ref.gs1.org/cbv/Disp\"\
        \ target=\"_blank\">CBV Disposition</a> for standard values.  Standard values\
        \ should be expressed as bare words, e.g. `in_transit`, whereas custom values\
        \ should be expressed as URIs or CURIEs for which the namespace prefix is\
        \ defined. If this parameter is omitted, events are returned regardless of\
        \ the value of the `unset` field within `persistentDisposition` field or whether\
        \ the `persistentDisposition` field exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          $ref: '#/components/schemas/disposition'
      example: in_transit
    EQ_readPoint:
      name: EQ_readPoint
      in: query
      description: "If specified, the result will only include events that (a) have\
        \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
        \ field matches one of the specified URIs. If this parameter and `WD_readPoint`\
        \ are both omitted, events are returned regardless of the value of the `readPoint`\
        \ field or whether the `readPoint` field exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
      example: urn:epc:id:sgln:0012345.11111.400
    WD_readPoint:
      name: WD_readPoint
      in: query
      description: "If specified, the result will only include events that (a) have\
        \ a non-null `readPoint` field; and where (b) the value of the `readPoint`\
        \ field matches one of the specified URIs, or is a direct or indirect descendant\
        \ of one of the specified values. The meaning of 'direct or indirect descendant'\
        \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
        \ for 'with descendants.') If this parameter and `EQ_readPoint` are both omitted,\
        \ events are returned regardless of the value of the `readPoint` field or\
        \ whether the `readPoint` field exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
      example: urn:epc:id:sgln:0012345.11111.400
    EQ_bizLocation:
      name: EQ_bizLocation
      in: query
      description: "If specified, the result will only include events that (a) have\
        \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
        \ field matches one of the specified URIs. If this parameter and `WD_bizLocation`\
        \ are both omitted, events are returned regardless of the value of the `bizLocation`\
        \ field or whether the `bizLocation` field exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
      example: urn:epc:id:sgln:0012345.11111.400
    WD_bizLocation:
      name: WD_bizLocation
      in: query
      description: "If specified, the result will only include events that (a) have\
        \ a non-null `bizLocation` field; and where (b) the value of the `bizLocation`\
        \ field matches one of the specified URIs, or is a direct or indirect descendant\
        \ of one of the specified values. The meaning of 'direct or indirect descendant'\
        \ is specified by master data, as described in section 6.5. (WD is an abbreviation\
        \ for 'with descendants.') If this parameter and `EQ_bizLocation` are both\
        \ omitted, events are returned regardless of the value of the `bizLocation`\
        \ field or whether the `bizLocation` field exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
      example: urn:epc:id:sgln:0012345.11111.400
    EQ_transformationID:
      name: EQ_transformationID
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have a `transformationID` field (that is, `TransformationEvent`s\
        \ or extension event type that extend `TransformationEvent`); and where (b)\
        \ the `transformationID` field is equal to one of the values specified in\
        \ this parameter."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
    MATCH_epc:
      name: MATCH_epc
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have an `epcList` or a `childEPCs` field (that is, `ObjectEvent`,\
        \ `AggregationEvent`, `TransactionEvent`, `AssociationEvent` or extension\
        \ event types that extend one of those event types); and where (b) one of\
        \ the EPCs listed in the `epcList` or `childEPCs` field (depending on event\
        \ type) matches one of the URIs specified in this parameter, where the meaning\
        \ of 'matches' is as specified in section 8.2.7.1.1.  If this parameter is\
        \ omitted, events are included regardless of their `epcList` or `childEPCs`\
        \ field or whether the `epcList` or `childEPCs` field exists."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    MATCH_parentID:
      name: MATCH_parentID
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have a `parentID` field (that is, `AggregationEvent`, `TransactionEvent`,\
        \ `AssociationEvent` or extension event types that extend one of those event\
        \ types); and where (b) one of the EPCs listed in the `parentID` field matches\
        \ one of the URIs specified in this parameter, where the meaning of 'matches'\
        \ is as specified in section 8.2.7.1.1.  If this parameter is omitted, events\
        \ are included regardless of their `parentID` field or whether the `parentID`\
        \ field exists."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    MATCH_inputEPC:
      name: MATCH_inputEPC
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have an `inputEPCList` (that is, `TransformationEvent` or an extension\
        \ event type that extends `TransformationEvent`); and where (b) one of the\
        \ EPCs listed in the `inputEPCList` field matches one of the URIs specified\
        \ in this parameter. The meaning of 'matches' is as specified in section 8.2.7.1.1.\
        \ If this parameter is omitted, events are included regardless of their `inputEPCList`\
        \ field or whether the `inputEPCList` field exists."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    MATCH_outputEPC:
      name: MATCH_outputEPC
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have an `outputEPCList` (that is, `TransformationEvent` or an extension\
        \ event type that extends `TransformationEvent`); and where (b) one of the\
        \ EPCs listed in the `outputEPCList` field matches one of the URIs specified\
        \ in this parameter. The meaning of 'matches' is as specified in section 8.2.7.1.1.\
        \ If this parameter is omitted, events are included regardless of their `outputEPCList`\
        \ field or whether the `outputEPCList` field exists."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    MATCH_anyEPC:
      name: MATCH_anyEPC
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have an `epcList` field, a `childEPCs` field, a `parentID` field,\
        \ an `inputEPCList` field, or an `outputEPCList` field (that is, `ObjectEvent`,\
        \ `AggregationEvent`, `TransactionEvent`, `TransformationEvent`, `AssociationEvent`\
        \ or extension event types that extend one of those event types); and where\
        \ (b) the `parentID` field or one of the EPCs listed in the `epcList`, `childEPCs`,\
        \ `inputEPCList`, or `outputEPCList` field (depending on event type) matches\
        \ one of URIs specified in this parameter. The meaning of 'matches' is as\
        \ specified in section 8.2.7.1.1."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    MATCH_epcClass:
      name: MATCH_epcClass
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have a `quantityList` or a `childQuantityList` field (that is,\
        \ `ObjectEvent`, `AggregationEvent`, `TransactionEvent`, `AssociationEvent`\
        \ or extension event types that extend one of those event types); and where\
        \ (b) one of the EPC classes listed in the `quantityList` or `childQuantityList`\
        \ field (depending on event type) matches one of the EPC patterns or URIs\
        \ specified in this parameter. The result will also include QuantityEvents\
        \ whose `epcClass` field matches one of the URIs specified in this parameter.\
        \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    MATCH_inputEPCClass:
      name: MATCH_inputEPCClass
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have an `inputQuantityList` field (that is, `TransformationEvent`\
        \ or extension event types that extend it); and where (b) one of the EPC classes\
        \ listed in the `inputQuantityList` field (depending on event type) matches\
        \ one of the EPC patterns or URIs specified in this parameter. The meaning\
        \ of 'matches' is as specified in section 8.2.7.1.1"
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    MATCH_outputEPCClass:
      name: MATCH_outputEPCClass
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have an `outputQuantityList` field (that is, `TransformationEvent`\
        \ or extension event types that extend it); and where (b) one of the EPC classes\
        \ listed in the `outputQuantityList` field (depending on event type) matches\
        \ one of the EPC patterns or URIs specified in this parameter. The meaning\
        \ of 'matches' is as specified in section 8.2.7.1.1"
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    MATCH_anyEPCClass:
      name: MATCH_anyEPCClass
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have a `quantityList`, `childQuantityList`, `inputQuantityList`,\
        \ or `outputQuantityList` field (that is, `ObjectEvent`, `AggregationEvent`,\
        \ `TransactionEvent`, `TransformationEvent`, `AssociationEvent` or extension\
        \ event types that extend one of those event types); and where (b) one of\
        \ the EPC classes listed in any of those fields matches one of the EPC patterns\
        \ or URIs specified in this parameter. The result will also include `QuantityEvent`s\
        \ whose `epcClass` field matches one of the URIs specified in this parameter.\
        \ The meaning of 'matches' is as specified in section 8.2.7.1.1."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    EQ_quantity:
      name: EQ_quantity
      in: query
      description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this parameter\
        \ is specified, the result will only include events that (a) have a `quantity`\
        \ field as part of a `QuantityElement`; and where (b) the `quantity` field\
        \ is equal to the specified parameter."
      required: false
      style: form
      explode: true
      schema:
        type: number
    GT_quantity:
      name: GT_quantity
      in: query
      description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this parameter\
        \ is specified, the result will only include events that (a) have a `quantity`\
        \ field as part of a `QuantityElement`; and where (b) the `quantity` field\
        \ is greater than the specified parameter."
      required: false
      style: form
      explode: true
      schema:
        type: number
    GE_quantity:
      name: GE_quantity
      in: query
      description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this parameter\
        \ is specified, the result will only include events that (a) have a `quantity`\
        \ field as part of a `QuantityElement`; and where (b) the `quantity` field\
        \ is greater than or equal to the specified parameter."
      required: false
      style: form
      explode: true
      schema:
        type: number
    LT_quantity:
      name: LT_quantity
      in: query
      description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this parameter\
        \ is specified, the result will only include events that (a) have a `quantity`\
        \ field as part of a `QuantityElement`; and where (b) the `quantity` field\
        \ is less than the specified parameter."
      required: false
      style: form
      explode: true
      schema:
        type: number
    LE_quantity:
      name: LE_quantity
      in: query
      description: "(DEPCRECATED in EPCIS 1.1, REPURPOSED in EPCIS 2.0) If this parameter\
        \ is specified, the result will only include events that (a) have a `quantity`\
        \ field as part of a `QuantityElement`; and where (b) the `quantity` field\
        \ is less than or equal to the specified parameter."
      required: false
      style: form
      explode: true
      schema:
        type: number
    EQ_eventID:
      name: EQ_eventID
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) have a non-null `eventID` field; and where (b) the `eventID` field\
        \ is equal to one of the values specified in this parameter. If this parameter\
        \ is omitted, events are returned regardless of the value of the `eventID`\
        \ field or whether the `eventID` field exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    EXISTS_errorDeclaration:
      name: EXISTS_errorDeclaration
      in: query
      description: "If this parameter is specified (and has a value of true), the\
        \ result will only include events that contain an `ErrorDeclaration`. If this\
        \ parameter is omitted (or has a value of false), events are returned regardless\
        \ of whether they contain an `ErrorDeclaration`."
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    GE_errorDeclarationTime:
      name: GE_errorDeclarationTime
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) contain an `ErrorDeclaration`; and where (b) the value of the `errorDeclarationTime`\
        \ field is greater than or equal to the specified value. If this parameter\
        \ is omitted, events are returned regardless of whether they contain an `ErrorDeclaration`\
        \ or what the value of the `errorDeclarationTime` field is."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    LT_errorDeclarationTime:
      name: LT_errorDeclarationTime
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) contain an `ErrorDeclaration`; and where (b) the value of the `errorDeclarationTime`\
        \ field is less than to the specified value. If this parameter is omitted,\
        \ events are returned regardless of whether they contain an `ErrorDeclaration`\
        \ or what the value of the `errorDeclarationTime` field is."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    EQ_errorReason:
      name: EQ_errorReason
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) contain an `ErrorDeclaration`; and where (b) the error declaration\
        \ contains a non-null `reason` field; and where (c) the `reason` field is\
        \ equal to one of the values specified in this parameter. If this parameter\
        \ is omitted, events are returned regardless of whether they contain an `ErrorDeclaration`\
        \ or what the value of the `reason` field is."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          $ref: '#/components/schemas/error-reason'
    EQ_correctiveEventID:
      name: EQ_correctiveEventID
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) contain an `ErrorDeclaration`; and where (b) one of the elements\
        \ of the `correctiveEventIDs` list is equal to one of the values specified\
        \ in this parameter. If this parameter is omitted, events are returned regardless\
        \ of whether they contain an `ErrorDeclaration` or the contents of the `correctiveEventIDs`\
        \ list."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    orderBy:
      name: orderBy
      in: query
      description: "If specified, names a single field that will be used to order\
        \ the results. The `orderDirection` field specifies whether the ordering is\
        \ in ascending sequence or descending sequence. Events included in the result\
        \ that lack the specified field altogether may occur in any position within\
        \ the result event list. The value of this parameter SHALL be one of: `eventTime`,\
        \ `recordTime`, or the fully qualified name of an extension field whose type\
        \ is Int, Float, Time, or String. A fully qualified fieldname is constructed\
        \ as for the `EQ_fieldname` parameter. In the case of a field of type String,\
        \ sorting SHALL be according to their case-sensitive lexical ordering, considering\
        \ UTF-8/ASCII code values of each successive character. If omitted, no order\
        \ is specified. The implementation MAY order the results in any order it chooses,\
        \ and that order MAY differ even when the same query is executed twice on\
        \ the same data. (In EPCIS 1.0, the value `quantity` was also permitted, but\
        \ its use is deprecated in EPCIS 1.1.)"
      required: false
      style: form
      explode: true
      schema:
        type: string
    orderDirection:
      name: orderDirection
      in: query
      description: "If specified and `orderBy` is also specified, specifies whether\
        \ the results are ordered in ascending or descending sequence according to\
        \ the key specified by `orderBy`. The value of this parameter must be one\
        \ of `ASC` (for ascending order) or `DESC` (for descending order); if not,\
        \ the implementation SHALL raise a `QueryParameterException`. If omitted,\
        \ defaults to `DESC`."
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - ASC
        - DESC
    eventCountLimit:
      name: eventCountLimit
      in: query
      description: "If specified, the results will only include the first N events\
        \ that match the other criteria, where N is the value of this parameter. The\
        \ ordering specified by the `orderBy` and `orderDirection` parameters determine\
        \ the meaning of “first” for this purpose. If omitted, all events matching\
        \ the specified criteria will be included in the results. This parameter and\
        \ `maxEventCount` are mutually exclusive; if both are specified, a `QueryParameterException`\
        \ SHALL be raised. This parameter may only be used when `orderBy` is specified;\
        \ if `orderBy` is omitted and `eventCountLimit` is specified, a `QueryParameterException`\
        \ SHALL be raised. This parameter differs from `maxEventCount` in that this\
        \ parameter limits the amount of data returned, whereas `maxEventCount` causes\
        \ an exception to be thrown if the limit is exceeded. Explanation (non-normative):\
        \ A common use of the `orderBy`, `orderDirection`, and `eventCountLimit` parameters\
        \ is for extremal queries. For example, to select the most recent event matching\
        \ some criteria, the query would include parameters that select events matching\
        \ the desired criteria, and set `orderBy` to `eventTime`, `orderDirection`\
        \ to `DESC`, and `eventCountLimit` to 1."
      required: false
      style: form
      explode: true
      schema:
        type: integer
    maxEventCount:
      name: maxEventCount
      in: query
      description: "If specified, at most this many events will be included in the\
        \ query result. If the query would otherwise return more than this number\
        \ of events, a `QueryTooLargeException` SHALL be raised instead of a normal\
        \ query result. This parameter and `eventCountLimit` are mutually exclusive;\
        \ if both are specified, a `QueryParameterException` SHALL be raised. If this\
        \ parameter is omitted, any number of events may be included in the query\
        \ result. Note, however, that the EPCIS implementation is free to raise a\
        \ `QueryTooLargeException` regardless of the setting of this parameter (see\
        \ section 8.2.3)."
      required: false
      style: form
      explode: true
      schema:
        type: integer
    GE_startTime:
      name: GE_startTime
      in: query
      description: "If specified, only events with `startTime` greater than or equal\
        \ to the specified value will be included in the result. If omitted, events\
        \ are included regardless of their `startTime` (unless constrained by the\
        \ `LT_startTime` parameter)."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    LT_startTime:
      name: LT_startTime
      in: query
      description: "If specified, only events with `startTime` less than the specified\
        \ value will be included in the result. If omitted, events are included regardless\
        \ of their `startTime` (unless constrained by the `GE_startTime` parameter)."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    GE_endTime:
      name: GE_endTime
      in: query
      description: "If specified, only events with `endTime` greater than or equal\
        \ to the specified value will be included in the result. If omitted, events\
        \ are included regardless of their `endTime` (unless constrained by the `LT_endTime`\
        \ parameter)."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    LT_endTime:
      name: LT_endTime
      in: query
      description: "If specified, only events with `endTime` less than the specified\
        \ value will be included in the result. If omitted, events are included regardless\
        \ of their `endTime` (unless constrained by the `GE_endTime` parameter)."
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date-time
      example: 2022-06-30T00:15:47.000-05:00
    EQ_type:
      name: EQ_type
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate one or more `sensorElement` fields; and where (b) the\
        \ `type` attribute in one of these `sensorElement` fields is equal to one\
        \ of the values specified in this parameter. If this parameter is omitted,\
        \ events are returned regardless of the value of the `type` attribute or whether\
        \ a `sensorElement` field exists at all. Standard values for `type` are defined\
        \ at <a href=\"https://gs1.org/voc/MeasurementType\" target=\"_blank\">https://gs1.org/voc/MeasurementType</a>.\
        \  Standard values SHALL be expressed as bare words, e.g. `Temperature`."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          $ref: '#/components/schemas/measurementType'
      example: Temperature
    EQ_deviceID:
      name: EQ_deviceID
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate a `deviceID` attribute; and where (b) the `deviceID`\
        \ attribute is equal to one of the URIs specified in this parameter. If this\
        \ parameter is omitted, events are returned regardless of the value of the\
        \ `deviceID` attribute or whether the `deviceID` attribute exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    EQ_dataProcessingMethod:
      name: EQ_dataProcessingMethod
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate a `dataProcessingMethod` attribute; and where (b) the\
        \ `dataProcessingMethod` attribute is equal to one of the URIs specified in\
        \ this parameter. If this parameter is omitted, events are returned regardless\
        \ of the value of the `dataProcessingMethod` attribute or whether the `dataProcessingMethod`\
        \ attribute exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    EQ_microorganism:
      name: EQ_microorganism
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate a `microorganism` attribute; and where (b) the `microorganism`\
        \ attribute is equal to one of the URIs specified in this parameter. If this\
        \ parameter is omitted, events are returned regardless of the value of the\
        \ `microorganism` attribute or whether the `microorganism` attribute exists\
        \ at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    EQ_chemicalSubstance:
      name: EQ_chemicalSubstance
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate a `chemicalSubstance` attribute; and where (b) the\
        \ `chemicalSubstance` attribute is equal to one of the URIs specified in this\
        \ parameter. If this parameter is omitted, events are returned regardless\
        \ of the value of the `chemicalSubstance` attribute or whether the `chemicalSubstance`\
        \ attribute exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    EQ_bizRules:
      name: EQ_bizRules
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate a `bizRules` attribute; and where (b) the `bizRules`\
        \ attribute is equal to one of the URIs specified in this parameter. If this\
        \ parameter is omitted, events are returned regardless of the value of the\
        \ `bizRules` attribute or whether the `bizRules` attribute exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    EQ_stringValue:
      name: EQ_stringValue
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate a `stringValue` attribute; and where (b) the `stringValue`\
        \ attribute is equal to one of the strings specified in this parameter. If\
        \ this parameter is omitted, events are returned regardless of the value of\
        \ the `stringValue` attribute or whether the `stringValue` attribute exists\
        \ at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
    EQ_hexBinaryValue:
      name: EQ_hexBinaryValue
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate a `hexBinaryValue` attribute; and where (b) the `hexBinaryValue`\
        \ attribute is equal to one of the strings specified in this parameter. If\
        \ this parameter is omitted, events are returned regardless of the value of\
        \ the `hexBinaryValue` attribute or whether the `hexBinaryValue` attribute\
        \ exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
    EQ_uriValue:
      name: EQ_uriValue
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate a `uriValue` attribute; and where (b) the `uriValue`\
        \ attribute is equal to one of the strings specified in this parameter. If\
        \ this parameter is omitted, events are returned regardless of the value of\
        \ the `uriValue` attribute or whether the `uriValue` attribute exists at all."
      required: false
      style: pipeDelimited
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
          format: uri
    EQ_booleanValue:
      name: EQ_booleanValue
      in: query
      description: "If this parameter is specified, the result will only include events\
        \ that (a) accommodate a `booleanValue` attribute; and where (b) the `booleanValue`\
        \ attribute is equal to the specified value (i.e. `true` or `false`). If this\
        \ parameter is omitted, events are returned regardless of the value of the\
        \ `booleanValue` attribute or whether the `booleanValue` attribute exists\
        \ at all"
      required: false
      style: form
      explode: true
      schema:
        type: boolean
  requestBodies:
    CreateQuery:
      description: Creates and executes new EPCIS events query.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryDefinition'
      required: true
  headers:
    GS1-EPCIS-Version:
      description: The EPCIS version.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPCIS-Version'
    GS1-EPCIS-Min:
      description: The lowest EPCIS version supported.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPCIS-Min'
    GS1-EPCIS-Max:
      description: The highest EPCIS version supported.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPCIS-Max'
    GS1-CBV-Version:
      description: The Core Business Vocabulary version.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-CBV-Version'
    GS1-CBV-Min:
      description: The lowest Core Business Vocabulary version supported.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-CBV-Min'
    GS1-CBV-Max:
      description: The highest Core Business Vocabulary version supported.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-CBV-Max'
    GS1-EPC-Format:
      description: |
        Header to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPC-Format'
    GS1-CBV-XML-Format:
      description: |
        When requesting XML content-type only, users can use this header to request
        receiving events with CBV values in either URN or Web URI format.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-CBV-XML-Format'
    GS1-Extensions:
      description: "Specific EPCIS or CBV extensions supported (e.g., for FIT)."
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-Extensions'
    GS1-Vendor-Version:
      description: A versioning scheme that can be freely chosen by the vendor.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-Vendor-Version'
    GS1-EPCIS-Capture-Limit:
      description: The maximum number of EPCIS events that can be captured per call.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPCIS-Capture-Limit'
    GS1-Query-Min-Record-Time:
      description: Informs about the smallest possible record time for EPCIS events
        in an outstanding query subscription.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-Query-Min-Record-Time'
    GS1-EPCIS-Capture-File-Size-Limit:
      description: The maximum event document length in octets (8-bit bytes) for capture
        operations.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-EPCIS-Capture-File-Size-Limit'
    GS1-Capture-Error-Behaviour:
      description: |
        A header to control how the capture interface will behave in case of an error:
        - `rollback`: "All or nothing". Either the capture job is entirely successful or all EPCIS events are rejected.
        - `proceed`: "Greedy capture". The capture interface tries to capture as many EPCIS events as possible, even if there are errors.
        - `all`: This is to be used only by the server to announce it supports both `rollback` and `proceed`.
        The default behaviour is `rollback`, as in EPCIS 1.2.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-Capture-Error-Behaviour'
    GS1-Next-Page-Token-Expires:
      description: The expiry time for `nextPageToken`.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/GS1-Next-Page-Token-Expires'
    Link:
      description: |
        A pagination header link. This header works together with the `perPage` and `nextPageToken` query string
        parameters.
        As long as there are more resources to retrieve, the `Link` header contains the URL of the next page and
        the attribute `rel="next"`. The last page is indicated by the absence of the `rel="next"`.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/Link'
